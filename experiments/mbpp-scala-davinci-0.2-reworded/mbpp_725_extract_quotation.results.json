{
  "name": "mbpp_725_extract_quotation",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        text2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                if (text(i).startsWith(\"\\\"\")) {\n                    val temp = text(i).substring(1, text(i).length)\n                    if (temp.endsWith(\"\\\"\")) {\n                        result += temp.substring(0, temp.length - 1)\n                    } else {\n                        var temp2 = temp\n                        for (j <- i + 1 until text.length) {\n                            if (text(j).endsWith(\"\\\"\")) {\n                                temp2 += \" \" + text(j).substring(0, text(j).length - 1)\n                                result += temp2\n                                break\n                            } else {\n                                temp2 += \" \" + text(j)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb20446f8.scala:32:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb20446f8.scala:33:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb20446f8.scala:34:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb20446f8.scala:20:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                                break\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb20446f8.scala:32:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val result = textArray.filter(x => x.contains(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzbrs6urb.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzbrs6urb.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzbrs6urb.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzbrs6urb.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzbrs6urb.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o272e1i.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o272e1i.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o272e1i.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7o272e1i.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7o272e1i.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replace(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        text2.filter(x => x.contains(\"\\\"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbdlfv_dd.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbdlfv_dd.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbdlfv_dd.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdlfv_dd.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbdlfv_dd.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnuoyzzk.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnuoyzzk.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(_.contains(\"\\\"\"))\n        val text3 = text2.map(_.replaceAll(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw28d3_9u.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw28d3_9u.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw28d3_9u.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw28d3_9u.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw28d3_9u.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j) != \"\") result += temp(j)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp355hvaa9.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp355hvaa9.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp355hvaa9.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp355hvaa9.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp355hvaa9.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.map(x => x.replaceAll(\"\\\"\", \"\"))\n        val text3 = text2.filter(x => x.length() > 0)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx5sa9dpr.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx5sa9dpr.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx5sa9dpr.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx5sa9dpr.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx5sa9dpr.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnuoyzzk.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnuoyzzk.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\"\"[\\p{Punct}&&[^.\"]]\"\"\", \"\")\n        val pattern = \"\"\"\"([^\"]*)\"\"\"\".r\n        val result = pattern.findAllIn(text)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnf2ivxqs.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnf2ivxqs.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnf2ivxqs.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnf2ivxqs.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnf2ivxqs.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(_.contains(\"\\\"\"))\n        val text3 = text2.map(_.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd54qfyuo.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd54qfyuo.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd54qfyuo.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd54qfyuo.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd54qfyuo.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu72yjmui.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu72yjmui.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        val text3 = text2.filter(_.length > 0)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj_hgcgin.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj_hgcgin.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj_hgcgin.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.replaceAll(\"[^\\\"]*\\\"([^\\\"]*)\\\"[^\\\"]*\", \"$1\")\n        val text3 = text2.split(\"\\\"\")\n        val text4 = text3.filter(x => x != \"\")\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpibay5wb6.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpibay5wb6.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpibay5wb6.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpibay5wb6.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpibay5wb6.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wzmx__c.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wzmx__c.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wzmx__c.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0wzmx__c.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0wzmx__c.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        for (i <- 1 until text2.length by 2) {\n            println(text2(i))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr5ohviv1.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr5ohviv1.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr5ohviv1.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5ohviv1.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5ohviv1.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        for (i <- 0 until text2.length) {\n            if (text2(i).contains(\"\\\"\")) {\n                println(text2(i))\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwl097xhg.scala:15:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwl097xhg.scala:16:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwl097xhg.scala:17:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl097xhg.scala:15:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwl097xhg.scala:16:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).substring(text(i).indexOf(\"\\\"\") + 1, text(i).lastIndexOf(\"\\\"\"))\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzsod0xhp.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzsod0xhp.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzsod0xhp.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzsod0xhp.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzsod0xhp.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        val text4 = text3.map(_.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyha6rbxf.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyha6rbxf.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyha6rbxf.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyha6rbxf.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyha6rbxf.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        val text2 = text.filter(x => x != '\"')\n        val text3 = text2.filter(x => x != ' ')\n        val text4 = text3.filter(x => x != ',')\n        val text5 = text4.filter(x => x != '.')\n        val text6 = text5.filter(x => x != '?')\n        val text7 = text6.filter(x => x != '!')\n        val text8 = text7.filter(x => x != '-')\n        val text9 = text8.filter(x => x != ':')\n        val text10 = text9.filter(x => x != ';')\n        val text11 = text10.filter(x => x != '(')\n        val text12 = text11.filter(x => x != ')')\n        val text13 = text12.filter(x => x != '\\'')\n        val text14 = text13.filter(x => x != '\\n')\n        val text15 = text14.filter(x => x != '\\t')\n        val text16 = text15.filter(x => x != '\\r')\n        val text17 = text16.filter(x => x != '\\b')\n        val text18 = text17.filter(x => x != '\\f')\n        val text19 = text18.filter(x => x != '\\\\')\n        val text20 = text19.filter(x => x != '/')\n        val text21 = text20.filter(x => x != '*')\n        val text22 = text21.filter(x => x != '+')\n        val text23 = text22.filter(x => x != '=')\n        val text24 = text23.filter(x => x != '>')\n        val text25 = text24.filter(x => x != '<')\n        val text26 = text25.filter(x => x != '#')\n        val text27 = text26.filter(x => x != '@')\n        val text28 = text27.filter(x => x != '$')\n        val text29 = text28.filter(x\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmaxicbwl.scala:35:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmaxicbwl.scala:37:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmaxicbwl.scala:38:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmaxicbwl.scala:39:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmaxicbwl.scala:34:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtext29\u001b[0m = text28.filter(x\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Not found: x\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmaxicbwl.scala:37:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) result += temp(j)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo6q7uqv4.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo6q7uqv4.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo6q7uqv4.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo6q7uqv4.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo6q7uqv4.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi0chjmf6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi0chjmf6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi0chjmf6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi0chjmf6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi0chjmf6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        text2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rdwpwg6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rdwpwg6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        text2.map(x => x.substring(1, x.length - 1))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph1vemi40.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph1vemi40.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph1vemi40.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph1vemi40.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph1vemi40.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_ != \"\")\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiwmoc2mb.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiwmoc2mb.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiwmoc2mb.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiwmoc2mb.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiwmoc2mb.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(x => x != \" \")\n        val text4 = text3.filter(x => x != \"\")\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb3k7nfyn.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb3k7nfyn.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb3k7nfyn.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb3k7nfyn.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb3k7nfyn.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(x => x.contains(\"\\\"\") == false)\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnicpqkjp.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnicpqkjp.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnicpqkjp.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7fheqpnq.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7fheqpnq.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7fheqpnq.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fheqpnq.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7fheqpnq.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(x => x != \"\")\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp41jubj1q.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp41jubj1q.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp41jubj1q.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41jubj1q.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp41jubj1q.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(_.startsWith(\"\\\"\")).filter(_.endsWith(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbxnsfcpu.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbxnsfcpu.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbxnsfcpu.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbxnsfcpu.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbxnsfcpu.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replace(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20lnkitx.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20lnkitx.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp20lnkitx.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20lnkitx.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp20lnkitx.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        var i = 0\n        var result = \"\"\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                i += 1\n                while (text(i) != '\"') {\n                    result += text(i)\n                    i += 1\n                }\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphf965wn7.scala:22:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphf965wn7.scala:23:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphf965wn7.scala:24:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphf965wn7.scala:22:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphf965wn7.scala:23:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o272e1i.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o272e1i.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7o272e1i.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7o272e1i.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7o272e1i.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        var result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hjvkbd.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hjvkbd.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp28hjvkbd.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp28hjvkbd.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp28hjvkbd.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val result = textArray.filter(x => x.contains(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzbrs6urb.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzbrs6urb.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzbrs6urb.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzbrs6urb.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzbrs6urb.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(_.contains(\"\\\"\"))\n        val textArray2 = textArray1.map(_.replaceAll(\"\\\"\", \"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoqhewx0d.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoqhewx0d.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoqhewx0d.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoqhewx0d.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoqhewx0d.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ListBuffer[String]()\n        for (i <- 0 to text.length - 1) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3oucvuni.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3oucvuni.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3oucvuni.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oucvuni.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oucvuni.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]\", \"\")\n        val text2 = text.replaceAll(\"\\\"\", \" \")\n        val text3 = text2.trim()\n        val text4 = text3.split(\" \")\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2qd1ljk.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2qd1ljk.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2qd1ljk.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2qd1ljk.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2qd1ljk.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        var text = text1.replace(\"\\\"\", \"\")\n        var text2 = text.split(\" \")\n        var text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd228bopy.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd228bopy.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd228bopy.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd228bopy.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd228bopy.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        for (i <- 1 until text.length by 2) {\n            println(text(i))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsud63q0a.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsud63q0a.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsud63q0a.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsud63q0a.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsud63q0a.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text1)\n        matches.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8uff8je5.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8uff8je5.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8uff8je5.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8uff8je5.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8uff8je5.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(_.startsWith(\"\\\"\"))\n        val text3 = text2.filter(_.endsWith(\"\\\"\"))\n        text3.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf2m23lkn.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf2m23lkn.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf2m23lkn.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf2m23lkn.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf2m23lkn.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) {\n                        result += temp(j)\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjzeid5ln.scala:21:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjzeid5ln.scala:22:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjzeid5ln.scala:23:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzeid5ln.scala:21:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzeid5ln.scala:22:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray3 = textArray2.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        val text4 = text3.map(x => x.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5kc7_h_4.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5kc7_h_4.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmnuoyzzk.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnuoyzzk.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmnuoyzzk.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt57dwic.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt57dwic.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt57dwic.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvt57dwic.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvt57dwic.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(_.startsWith(\"\\\"\")).filter(_.endsWith(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbxnsfcpu.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbxnsfcpu.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbxnsfcpu.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbxnsfcpu.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbxnsfcpu.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(_.contains(\"\\\"\"))\n        val textArray2 = textArray1.map(_.replaceAll(\"\\\"\", \"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoqhewx0d.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoqhewx0d.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoqhewx0d.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoqhewx0d.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoqhewx0d.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplyp7ufye.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplyp7ufye.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplyp7ufye.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplyp7ufye.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplyp7ufye.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        textArray2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpknfkwpa5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpknfkwpa5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpknfkwpa5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpknfkwpa5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpknfkwpa5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        val text3 = text2.map(x => x.replace(\"\\\"\", \"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2ngn130.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2ngn130.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2ngn130.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2ngn130.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2ngn130.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.contains(\"\\\"\"))\n        val text3 = text2.map(_.replaceAll(\"\\\"\", \"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo05lp4hk.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo05lp4hk.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo05lp4hk.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo05lp4hk.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo05lp4hk.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"([^\\\"]*)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8f1rmkht.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8f1rmkht.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8f1rmkht.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8f1rmkht.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8f1rmkht.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppz_5wga.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppz_5wga.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replaceAll(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskbdi0vz.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskbdi0vz.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0acdb637.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0acdb637.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) result += temp(j)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmpzadjii.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmpzadjii.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = text.filter(x => x.length > 0)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqw_0bxb3.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqw_0bxb3.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqw_0bxb3.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqw_0bxb3.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqw_0bxb3.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.startsWith(\"\\\"\"))\n        val text3 = text2.filter(x => x.endsWith(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5zr78k4p.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5zr78k4p.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5zr78k4p.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5zr78k4p.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5zr78k4p.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.contains(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsf60c2e8.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsf60c2e8.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsf60c2e8.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsf60c2e8.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsf60c2e8.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(_.length > 0)\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeo8efn06.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeo8efn06.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeo8efn06.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeo8efn06.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeo8efn06.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val matches = pattern.findAllIn(text1)\n        matches.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_svha8e.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_svha8e.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_svha8e.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_svha8e.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_svha8e.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                result += temp(1)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:17:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:18:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxkor741k.scala:19:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:17:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxkor741k.scala:18:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu23tzxsi.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu23tzxsi.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu23tzxsi.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu23tzxsi.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu23tzxsi.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpum1p_7.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptpum1p_7.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.replaceAll(\"\\\"\", \"\")\n        val text3 = text2.split(\" \")\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsypq7n9i.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsypq7n9i.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsypq7n9i.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsypq7n9i.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsypq7n9i.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (i % 2 != 0) {\n                result += text(i)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp71ibk2g.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp71ibk2g.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp71ibk2g.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp71ibk2g.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp71ibk2g.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArrayFiltered = textArray.filter(x => x.contains(\"\\\"\"))\n        textArrayFiltered.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6yvaotlv.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6yvaotlv.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6yvaotlv.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6yvaotlv.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6yvaotlv.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                val temp = text(i).substring(1, text(i).length)\n                if (temp.endsWith(\"\\\"\")) {\n                    result += temp.substring(0, temp.length - 1)\n                } else {\n                    var j = i + 1\n                    while (j < text.length && !text(j).endsWith(\"\\\"\")) {\n                        temp += \" \" + text(j)\n                        j += 1\n                    }\n                    if (j < text.length) {\n                        temp += \" \" + text(j).substring(0, text(j).length - 1)\n                        result += temp\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmyy1nzch.scala:29:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmyy1nzch.scala:30:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmyy1nzch.scala:31:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmyy1nzch.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                        temp += \u001b[31m\" \"\u001b[0m + text(j)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of String - did you mean temp.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmyy1nzch.scala:20:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                        temp += \u001b[31m\" \"\u001b[0m + text(j).substring(\u001b[31m0\u001b[0m, text(j).length - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of String - did you mean temp.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmyy1nzch.scala:29:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m2",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        text.filter(_.contains(\"\\\"\")).foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqjbbjnuu.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqjbbjnuu.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqjbbjnuu.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjbbjnuu.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjbbjnuu.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9byb7a4x.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9byb7a4x.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9byb7a4x.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9byb7a4x.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9byb7a4x.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        val text4 = text3.map(_.replaceAll(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyha6rbxf.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyha6rbxf.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyha6rbxf.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyha6rbxf.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyha6rbxf.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        val text2 = text.filter(x => x != '\"')\n        val text3 = text2.mkString\n        val text4 = text3.split(\" \")\n        val text5 = text4.filter(x => x != \"\")\n        text5\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqun2r7e7.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqun2r7e7.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqun2r7e7.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqun2r7e7.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqun2r7e7.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        var result = List[Char]()\n        var flag = false\n        for (i <- text) {\n            if (i == '\"') {\n                if (flag) flag = false\n                else flag = true\n            }\n            else if (flag) result = result :+ i\n        }\n        result.mkString\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp01dln62w.scala:19:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp01dln62w.scala:20:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp01dln62w.scala:21:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp01dln62w.scala:19:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp01dln62w.scala:20:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        result.foreach(x => println(x))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp38_dazc8.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp38_dazc8.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp38_dazc8.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38_dazc8.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38_dazc8.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(_.startsWith(\"\\\"\"))\n        val text3 = text2.filter(_.endsWith(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn9n31ni1.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn9n31ni1.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpn9n31ni1.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn9n31ni1.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn9n31ni1.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"\"(.*?)\"\"\"\".r\n        val result = pattern.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvfj5rln6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvfj5rln6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvfj5rln6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfj5rln6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfj5rln6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]*\\\"([^\\\"]*)\\\"[^\\\"]*\", \"$1\")\n        return text\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv_vetolw.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv_vetolw.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv_vetolw.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_vetolw.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_vetolw.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray3 = textArray2.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(_.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt29p2e09.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt29p2e09.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\"\"(?<=\").*?(?=\")\"\"\".r\n        pattern.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6wznny1.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6wznny1.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val regex = \"\"\"\"(.*?)\"\"\"\".r\n        val result = regex.findAllIn(text1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpejdbreau.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpejdbreau.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpejdbreau.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpejdbreau.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpejdbreau.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = text.filter(_.length > 0)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgdlpisr.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgdlpisr.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgdlpisr.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcgdlpisr.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcgdlpisr.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = text.filter(x => x.startsWith(\"\\\"\") && x.endsWith(\"\\\"\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvzury2lm.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvzury2lm.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvzury2lm.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvzury2lm.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvzury2lm.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (i % 2 != 0) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw1ikw560.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw1ikw560.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw1ikw560.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw1ikw560.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw1ikw560.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\"\\\"\")\n        val text3 = text2.filter(_.length > 0)\n        val text4 = text3.filter(_.length > 0)\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxi3knho5.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxi3knho5.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replaceAll(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskbdi0vz.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskbdi0vz.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        var text = text1\n        var result = \"\"\n        var i = 0\n        while (i < text.length) {\n            if (text(i) == '\"') {\n                result += text(i)\n                i += 1\n                while (i < text.length && text(i) != '\"') {\n                    result += text(i)\n                    i += 1\n                }\n                if (i < text.length) result += text(i)\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4runxkcp.scala:24:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4runxkcp.scala:25:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4runxkcp.scala:26:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4runxkcp.scala:24:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4runxkcp.scala:25:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwkg8iblu.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkg8iblu.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.map(x => x.replace(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\\s+\", \"\")\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphq_2gnug.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphq_2gnug.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphq_2gnug.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphq_2gnug.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphq_2gnug.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"[^\\\"]*\\\"([^\\\"]*)\\\"[^\\\"]*\", \"$1\")\n        val text2 = text.split(\"\\\"\")\n        text2\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzit4x5qk.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzit4x5qk.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzit4x5qk.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzit4x5qk.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzit4x5qk.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text2 = text1.split(\" \")\n        val text3 = text2.filter(_.startsWith(\"\\\"\"))\n        val text4 = text3.map(_.replace(\"\\\"\", \"\"))\n        text4\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0globag.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0globag.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0globag.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0globag.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0globag.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val regex = \"\"\"\"(.*?)\"\"\"\".r\n        regex.findAllIn(text1).toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4oy757c8.scala:10:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4oy757c8.scala:11:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4oy757c8.scala:12:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4oy757c8.scala:10:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4oy757c8.scala:11:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replaceAll(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpskbdi0vz.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskbdi0vz.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskbdi0vz.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\")) {\n                val temp = text(i).substring(1)\n                if (temp.endsWith(\"\\\"\")) {\n                    result += temp.substring(0, temp.length - 1)\n                } else {\n                    var j = i + 1\n                    while (!text(j).endsWith(\"\\\"\")) {\n                        temp += \" \" + text(j)\n                        j += 1\n                    }\n                    result += temp + \" \" + text(j).substring(0, text(j).length - 1)\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123345,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqi3v886e.scala:26:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqi3v886e.scala:27:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqi3v886e.scala:28:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqi3v886e.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                        temp += \u001b[31m\" \"\u001b[0m + text(j)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              value += is not a member of String - did you mean temp.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqi3v886e.scala:26:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not f",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray1 = textArray.filter(x => x.contains(\"\\\"\"))\n        textArray1.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp64o093c3.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp64o093c3.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp64o093c3.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.toList\n        val text2 = text.filter(_ != '\"')\n        val text3 = text2.filter(_ != ' ')\n        val text4 = text3.mkString\n        val text5 = text4.split(\",\")\n        text5\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptmd4gcw2.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptmd4gcw2.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptmd4gcw2.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmd4gcw2.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmd4gcw2.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (i % 2 == 1) result += text(i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ngeb667.scala:14:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ngeb667.scala:15:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5ngeb667.scala:16:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ngeb667.scala:14:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ngeb667.scala:15:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpprqqp352.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpprqqp352.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                val temp = text(i).split(\"\\\"\")\n                for (j <- 0 until temp.length) {\n                    if (temp(j).length > 0) {\n                        result += temp(j)\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeg3pxjo4.scala:21:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeg3pxjo4.scala:22:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpeg3pxjo4.scala:23:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg3pxjo4.scala:21:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg3pxjo4.scala:22:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\"\\\"\")\n        val result = text.filter(_.length > 0)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgdlpisr.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgdlpisr.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgdlpisr.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcgdlpisr.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcgdlpisr.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.map(x => x.replace(\"\\\"\", \"\"))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9rh_h2h6.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rh_h2h6.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val textArray = text.split(\" \")\n        val textArray2 = textArray.filter(x => x.contains(\"\\\"\"))\n        val textArray3 = textArray2.map(x => x.replaceAll(\"\\\"\", \"\"))\n        textArray3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:13:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:14:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgs8_ugb2.scala:15:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:13:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs8_ugb2.scala:14:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.replaceAll(\"\\\"\", \"\")\n        val text2 = text.split(\" \")\n        val text3 = text2.filter(x => x.contains(\"\\\"\"))\n        text3\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:12:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:13:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tzzo9d7.scala:14:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:12:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1tzzo9d7.scala:13:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val pattern = \"\\\"(.*?)\\\"\".r\n        val result = pattern.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8s60bsc_.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8s60bsc_.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ListBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).contains(\"\\\"\")) {\n                result += text(i).replace(\"\\\"\", \"\")\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz0ba63pw.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0ba63pw.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0ba63pw.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val text2 = text.filter(x => x.contains(\"\\\"\"))\n        text2.foreach(x => println(x.replaceAll(\"\\\"\", \"\")))\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqxhi9v0d.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqxhi9v0d.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqxhi9v0d.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxhi9v0d.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxhi9v0d.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val text = text1.split(\" \")\n        val result = new ArrayBuffer[String]()\n        for (i <- 0 until text.length) {\n            if (text(i).startsWith(\"\\\"\") && text(i).endsWith(\"\\\"\")) {\n                result += text(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1665510159,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:16:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:17:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq9ycrjbj.scala:18:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:16:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9ycrjbj.scala:17:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    def extractQuotation(text1 : String) : Any = {\n        val regex = \"\\\"(.*?)\\\"\".r\n        val result = regex.findAllIn(text1)\n        result.foreach(println)\n    }\n    def main(args: Array[String]) = {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((Any(\"A53\", \"multi\", \"Processor\"))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((Any(\"favorite\", \"apps\"))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((Any(\"4k Ultra HD\", \"HDR 10\"))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((Any())));\n    }\n\n}\n",
      "timestamp": 1666123344,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp11d1kykz.scala:11:38 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp11d1kykz.scala:12:41 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b[31m\"favorite\"\u001b[0m, \u001b[31m\"apps\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                         ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ')' expected, but string interpolator found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp11d1kykz.scala:13:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Watch content \"4\u001b[0mk Ultra \u001b[31mHD\" resolution with \"\u001b[0mHDR \u001b[31m10\" Support\"\u001b[0m)).equals((Any(\u001b[31m\"4k Ultra HD\"\u001b[0m, \u001b[31m\"HDR 10\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 ')' expected, but integer literal found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp11d1kykz.scala:11:88 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\"\u001b[0m)).equals((Any(\u001b[31m\"A53\"\u001b[0m, \u001b[31m\"multi\"\u001b[0m, \u001b[31m\"Processor\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp11d1kykz.scala:12:83 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(extractQuotation((\u001b[31m\"Cast your \"favorite\" entertainment \"apps\"\"\u001b[0m)).equals((Any(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
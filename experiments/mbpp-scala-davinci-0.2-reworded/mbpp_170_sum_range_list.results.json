{
  "name": "mbpp_170_sum_range_list",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        list1.slice(m.toInt, n.toInt + 1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        if (m == n) list1(m.toInt)\n        else list1(m.toInt) + sumRangeList(list1, m + 1, n)\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m until n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp492ad4y1.scala:13)\n\tat Problem.main(tmp492ad4y1.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        list1.slice(m.toInt, n.toInt + 1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        list1.slice(m.toInt, n.toInt + 1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        if (m > n) 0\n        else if (m == n) list1(m.toInt)\n        else list1(m.toInt) + sumRangeList(list1, m + 1, n)\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) sum += list1(i.toInt)\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        list1.slice(m.toInt, n.toInt + 1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510104,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum = 0L\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the sum of numbers in a list within a range specified by two indices.\n    def sumRangeList(list1 : List[Long], m : Long, n : Long) : Long = {\n        var sum : Long = 0\n        for (i <- m to n) {\n            sum += list1(i.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (8l), (10l)) == (29l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (5l), (7l)) == (16l));\n    assert(sumRangeList((List[Long](2l.toLong, 1l.toLong, 5l.toLong, 6l.toLong, 8l.toLong, 3l.toLong, 4l.toLong, 9l.toLong, 10l.toLong, 11l.toLong, 8l.toLong, 12l.toLong)), (7l), (10l)) == (38l));\n    }\n\n}\n",
      "timestamp": 1665510105,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
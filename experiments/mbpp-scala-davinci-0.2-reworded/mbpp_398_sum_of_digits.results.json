{
  "name": "mbpp_398_sum_of_digits",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : List[Int] => num.map(sumOfDigits(_)).sum\n            case num : List[Long] => num.map(sumOfDigits(_)).sum\n            case num : List[BigInt] => num.map(sumOfDigits(_)).sum\n            case num : List[BigDecimal] => num.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx2t47fdi.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx2t47fdi.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx2t47fdi.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => sum = num.toString.map(_.asDigit).sum\n            case nums : List[Int] => sum = nums.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpab29zfo0.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpab29zfo0.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpab29zfo0.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (num <- nums.toString) {\n            sum += num.toString.toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8t_obrta.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8t_obrta.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8t_obrta.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : Array[Int] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa6p539z9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa6p539z9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa6p539z9.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdb2yi5im.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdb2yi5im.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdb2yi5im.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t4lhanp.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t4lhanp.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t4lhanp.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdg_qnsxf.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdg_qnsxf.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdg_qnsxf.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1q983fq2.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1q983fq2.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1q983fq2.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfdtj_iw1.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        if (nums.isInstanceOf[List[Int]]) {\n            val numsList = nums.asInstanceOf[List[Int]]\n            numsList.map(x => x.toString.map(_.asDigit).sum).sum\n        } else {\n            0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpif1sndhy.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpif1sndhy.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpif1sndhy.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[Long] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : List[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp534797zs.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp534797zs.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp534797zs.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val list = nums.asInstanceOf[List[Int]]\n        list.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdb2yi5im.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdb2yi5im.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdb2yi5im.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString\n        for (i <- 0 until num.length) {\n            sum += num(i).asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (n <- nums.toString) {\n            sum += n.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4bzc5fk.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4bzc5fk.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4bzc5fk.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Long] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[BigInt] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[String] => nums.foreach(n => sum += n.map(_.asDigit).sum)\n            case nums : List[Double] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Float] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[BigDecimal] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[BigInteger] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Short] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Byte] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Char] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Boolean] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Unit] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List[Any] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n            case nums : List\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123678,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwreymzob.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwreymzob.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwreymzob.scala:15:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.foreach(n => sum += n.toString.map(_.asDigit).sum)\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigInteger\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E056] Syntax Error: /tmp/tmpwreymzob.scala:22:24 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Missing type parameter for List\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwreymzob.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwreymzob.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwreymzob.scala:27:24 --------------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : Array[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : Set[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : Map[Int, Int] => {\n                for (num <- nums.keys) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : Vector[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : ArrayBuffer[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : HashSet[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : HashMap[Int, Int] => {\n                for (num <- nums.keys) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : LinkedHashSet[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : LinkedHashMap[Int, Int] => {\n                for (num <- nums.keys) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : ListBuffer[Int] => {\n                for (num <- nums) {\n                    sum +=\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp86gxuh8i.scala:60:26 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m                    sum +=\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp86gxuh8i.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86gxuh8i.scala:9:16 ---------------------\u001b[0m\u001b[0m\n\u001b[31m 9 |\u001b[0m                \u001b[33mfor\u001b[0m (num <- nums) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    Unit\n\u001b[31m   |\u001b[0m                Required: Long\n\u001b[31m10 |\u001b[0m                    sum += num.toString.map(_.asDigit).sum\n\u001b[31m11 |\u001b[0m                }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86gxuh8i.scala:14:16 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                \u001b[33mfor\u001b[0m (num <- nums) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    Unit\n\u001b[31m   |\u001b[0m                Required: Long\n\u001b[31m15 |\u001b[0m                    sum += num.toString.map(_.asDigit).sum\n\u001b[31m16 |\u001b[0m                }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86gxuh8i.scala:19:16 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                \u001b[33mfor\u001b[0m (num <- nums) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    Unit\n\u001b[31m   |\u001b[0m                Required: Long\n\u001b[31m20 |\u001b[0m                    sum += num.toString.map(_.asDigit).sum\n\u001b[31m21 |\u001b[0m                }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86gxuh8i.scala:24:16 -------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var num_ = num\n                    while (num_ > 0) {\n                        sum += num_ % 10\n                        num_ /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var num_ = num\n                    while (num_ > 0) {\n                        sum += num_ % 10\n                        num_ /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var num_ = num\n                    while (num_ > 0) {\n                        sum += num_ % 10\n                        num_ /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_o5f94d.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += num_ % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe_o5f94d.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe_o5f94d.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe_o5f94d.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0\n        nums match {\n            case num : Int => sum += num\n            case num : Long => sum += num\n            case num : Double => sum += num\n            case num : Float => sum += num\n            case num : String => sum += num.toInt\n            case num : Array[Int] => for (i <- num) sum += i\n            case num : Array[Long] => for (i <- num) sum += i\n            case num : Array[Double] => for (i <- num) sum += i\n            case num : Array[Float] => for (i <- num) sum += i\n            case num : Array[String] => for (i <- num) sum += i.toInt\n            case _ => sum += 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwn6v0uhy.scala:9:35 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m num : Long => sum += num\n\u001b[31m\u001b[31m  |\u001b[0m                               ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwn6v0uhy.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mcase\u001b[0m num : Double => sum += num\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwn6v0uhy.scala:11:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mcase\u001b[0m num : Float => sum += num\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwn6v0uhy.scala:14:57 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m num : Array[Long] => \u001b[33mfor\u001b[0m (i <- num) sum += i\n\u001b[31m\u001b[31m   |\u001b[0m                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwn6v0uhy.scala:15:59 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mcase\u001b[0m num : Array[Double] => \u001b[33mfor\u001b[0m (i <- num) sum += i\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwn6v0uhy.scala:16:58 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mcase\u001b[0m num : Array[Float] => \u001b[33mfor\u001b[0m (i <- num) sum += i\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        val sumOfDigitsList = numsList.map(x => x.toString.map(_.asDigit).sum)\n        sumOfDigitsList.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_e0f1ep.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_e0f1ep.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_e0f1ep.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:14:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigInteger\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val list = nums.asInstanceOf[List[Int]]\n        var sum = 0\n        for (i <- list) {\n            var num = i\n            while (num > 0) {\n                sum += num % 10\n                num /= 10\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ll9fvnn.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ll9fvnn.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ll9fvnn.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2e0arn7.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2e0arn7.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2e0arn7.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsuwzgpzx.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuwzgpzx.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuwzgpzx.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsuwzgpzx.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        def sumOfDigits(n : Long) : Long = {\n            if (n == 0) 0\n            else n % 10 + sumOfDigits(n / 10)\n        }\n        nums match {\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : List[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigDecimal] => nums.map(sumOfDigits(_)).sum\n            case nums : List[String] => nums.map(sumOfDigits(_)).sum\n            case nums : Array[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : Array[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : Array[BigInt] => nums.map(sumOfDigits(_)).sum\n            case nums : Array[BigDecimal] => nums.map(sumOfDigits(_)).sum\n            case nums : Array[String] => nums.map(sumOfDigits(_)).sum\n            case nums : Vector[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : Vector[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : Vector[BigInt] => nums.map(sumOfDigits(_)).sum\n            case nums : Vector[BigDecimal] => nums.map(sumOfDigits(_)).sum\n            case nums : Vector[String] => nums.map(sumOfDigits(_)).sum\n            case nums : Seq[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : Seq[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : Seq[BigInt] => nums.map(sumOfDigits(_)).sum\n            case nums : Seq[BigDecimal] => nums.map(sumOfDigits(_)).sum\n            case nums : Seq[\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi1vv6bjj.scala:31:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi1vv6bjj.scala:39:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1vv6bjj.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Found:    (_$3 : BigInt)\n\u001b[31m   |\u001b[0m                                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1vv6bjj.scala:14:65 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigDecimal] => nums.map(sumOfDigits(_)).sum\n\u001b[31m\u001b[31m   |\u001b[0m                                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (_$4 : BigDecimal)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1vv6bjj.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[String] => nums.map(sumOfDigits(_)).sum\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Found:    (_$5 : String)\n\u001b[31m   |\u001b[0m                                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1vv6bjj.scala:18:62 --------------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : Double => x.toString.map(_.asDigit).sum\n            case x : String => x.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1hsgcg5.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1hsgcg5.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1hsgcg5.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits).sum\n            case nums : List[Long] => nums.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxtdx4ms4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxtdx4ms4.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxtdx4ms4.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfdtj_iw1.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : Double => num.toString.map(_.asDigit).sum\n            case num : Float => num.toString.map(_.asDigit).sum\n            case num : String => num.map(_.asDigit).sum\n            case num : List[Any] => num.map(sumOfDigits).sum\n            case num : Array[Any] => num.map(sumOfDigits).sum\n            case num : ArrayBuffer[Any] => num.map(sumOfDigits).sum\n            case num : Vector[Any] => num.map(sumOfDigits).sum\n            case num : Set[Any] => num.map(sumOfDigits).sum\n            case num : Map[Any, Any] => num.map(sumOfDigits).sum\n            case num : HashMap[Any, Any] => num.map(sumOfDigits).sum\n            case num : LinkedHashMap[Any, Any] => num.map(sumOfDigits).sum\n            case num : SortedMap[Any, Any] => num.map(sumOfDigits).sum\n            case num : TreeMap[Any, Any] => num.map(sumOfDigits).sum\n            case num : HashSet[Any] => num.map(sumOfDigits).sum\n            case num : LinkedHashSet[Any] => num.map(sumOfDigits).sum\n            case num : SortedSet[Any] => num.map(sumOfDigits).sum\n            case num : TreeSet[Any] => num.map(sumOfDigits).sum\n            case num : Queue[Any] => num.map(sumOfDigits).sum\n            case num : Stack[Any] => num.map(sumOfDigits).sum\n            case num : PriorityQueue[Any] => num.map(sumOfDigits).\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_gpul274.scala:31:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_gpul274.scala:39:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_gpul274.scala:33:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_gpul274.scala:34:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_gpul274.scala:35:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gpul274.scala:38:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp_gpul274.scala:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        def sumOfDigits(n : Long) : Long = {\n            if (n == 0) 0\n            else n % 10 + sumOfDigits(n / 10)\n        }\n        nums match {\n            case nums : List[Int] => nums.map(x => sumOfDigits(x)).sum\n            case nums : List[Long] => nums.map(x => sumOfDigits(x)).sum\n            case nums : List[BigInt] => nums.map(x => sumOfDigits(x.toLong)).sum\n            case nums : List[BigDecimal] => nums.map(x => sumOfDigits(x.toLong)).sum\n            case nums : List[Double] => nums.map(x => sumOfDigits(x.toLong)).sum\n            case nums : List[Float] => nums.map(x => sumOfDigits(x.toLong)).sum\n            case nums : List[String] => nums.map(x => sumOfDigits(x.toLong)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn8zontph.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn8zontph.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn8zontph.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var n = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7q1cytnm.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7q1cytnm.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        var num : Long = 0\n        nums match {\n            case x : List[Int] => {\n                for (i <- x) {\n                    num = i\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case x : List[Long] => {\n                for (i <- x) {\n                    num = i\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case x : List[Double] => {\n                for (i <- x) {\n                    num = i.toLong\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case x : List[Float] => {\n                for (i <- x) {\n                    num = i.toLong\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case x : List[BigInt] => {\n                for (i <- x) {\n                    num = i.toLong\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case x : List[BigDecimal] => {\n                for (i <- x) {\n                    num = i.toLong\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case _ => {\n                println(\"Error: Invalid input\")\n                return -1\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38rqzhjd.scala:71:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38rqzhjd.scala:72:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp38rqzhjd.scala:73:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case num : Int => {\n                var n : Int = num\n                while (n > 0) {\n                    sum += n % 10\n                    n /= 10\n                }\n            }\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var n : Int = num\n                    while (n > 0) {\n                        sum += n % 10\n                        n /= 10\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbozuedm9.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbozuedm9.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbozuedm9.scala:30:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : List[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n            case _ => throw new Exception(\"Invalid input\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqvk7dm7o.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqvk7dm7o.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqvk7dm7o.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : List[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa06s8wn4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa06s8wn4.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa06s8wn4.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[List[Int]] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgzsms_r.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgzsms_r.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgzsms_r.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8k2b7g5l.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpytb1rix4.scala:30:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpytb1rix4.scala:31:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpytb1rix4.scala:32:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        val sumOfDigits = numsList.map(x => x.toString.map(_.asDigit).sum)\n        sumOfDigits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_vc24ro.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_vc24ro.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc_vc24ro.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Any] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfavonjav.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfavonjav.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfavonjav.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnooqsjwi.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnooqsjwi.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnooqsjwi.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwcl9rmz.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwcl9rmz.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwcl9rmz.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 until nums.toString.length) {\n            sum += nums.toString.charAt(i).toInt - 48\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1kmbxen4.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1kmbxen4.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1kmbxen4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf9yb_sdy.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf9yb_sdy.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf9yb_sdy.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Boolean] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6s5t6nwh.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6s5t6nwh.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6s5t6nwh.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until nums.toString.length) {\n            sum += nums.toString.charAt(i).asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplst6k7io.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplst6k7io.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplst6k7io.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.asDigit).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.asDigit).sum\n            case nums : Int => nums.toString.map(x => x.asDigit).\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8x8wdnf2.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8x8wdnf2.scala:30:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8x8wdnf2.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8x8wdnf2.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8x8wdnf2.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8x8wdnf2.scala:29:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp8x8wdnf2.scala:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigDecimal] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Double] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Float] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[String] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwis4zk06.scala:50:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwis4zk06.scala:51:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwis4zk06.scala:52:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphoy73p4h.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphoy73p4h.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphoy73p4h.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.asDigit).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123704,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdve9x5lc.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdve9x5lc.scala:31:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdve9x5lc.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdve9x5lc.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdve9x5lc.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdve9x5lc.scala:30:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpdve9x5lc.scala:24:4 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0ixq8061.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6pr9ic0.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6pr9ic0.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6pr9ic0.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case n : Int => n.toString.map(_.asDigit).sum\n            case n : Long => n.toString.map(_.asDigit).sum\n            case n : Double => n.toString.map(_.asDigit).sum\n            case n : String => n.map(_.asDigit).sum\n            case n : List[Any] => n.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzeial85.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzeial85.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkzeial85.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(x => x.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwjfsmr3n.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwjfsmr3n.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwjfsmr3n.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var result : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp : Long = 0\n                    var n : Int = num\n                    while (n > 0) {\n                        temp += n % 10\n                        n /= 10\n                    }\n                    result += temp\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp : Long = 0\n                    var n : Long = num\n                    while (n > 0) {\n                        temp += n % 10\n                        n /= 10\n                    }\n                    result += temp\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp : Long = 0\n                    var n : BigInt = num\n                    while (n > 0) {\n                        temp += n % 10\n                        n /= 10\n                    }\n                    result += temp\n                }\n            }\n            case _ => result = -1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123704,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdboluy_2.scala:35:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m                        temp += n % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdboluy_2.scala:46:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdboluy_2.scala:47:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdboluy_2.scala:48:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => sum = num.toString.map(_.asDigit).sum\n            case num : Long => sum = num.toString.map(_.asDigit).sum\n            case num : Double => sum = num.toString.map(_.asDigit).sum\n            case num : Float => sum = num.toString.map(_.asDigit).sum\n            case nums : List[Any] => nums.foreach(num => sum += sumOfDigits(num))\n            case nums : Array[Any] => nums.foreach(num => sum += sumOfDigits(num))\n            case nums : ArrayBuffer[Any] => nums.foreach(num => sum += sumOfDigits(num))\n            case nums : Vector[Any] => nums.foreach(num => sum += sumOfDigits(num))\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwqt2ev6.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwqt2ev6.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprwqt2ev6.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.toString.toLong\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqs92lztn.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqs92lztn.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqs92lztn.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.toString.toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3__pcqx3.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3__pcqx3.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3__pcqx3.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123702,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8m1bnl6.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8m1bnl6.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf8m1bnl6.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val list = nums.asInstanceOf[List[Int]]\n        list.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkov9dib6.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : List[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu0wfy9ce.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu0wfy9ce.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu0wfy9ce.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case num : String => num.map(_.asDigit).sum\n            case nums : List[Any] => nums.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123702,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki2roonz.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki2roonz.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki2roonz.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val digits = nums.toString.map(_.asDigit)\n        digits.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplsuxsbzc.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplsuxsbzc.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplsuxsbzc.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case nums : List[Int] => nums.map(sumOfDigits(_)).sum\n            case nums : List[Long] => nums.map(sumOfDigits(_)).sum\n            case nums : List[BigInt] => nums.map(sumOfDigits(_)).sum\n            case _ => throw new IllegalArgumentException\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123702,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfpwhs5p8.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfpwhs5p8.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfpwhs5p8.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case nums : List[Any] => nums.map(sumOfDigits(_)).sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c6l7h8o.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c6l7h8o.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7c6l7h8o.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : Long => sum = x.toString.map(_.asDigit).sum\n            case x : List[Any] => sum = x.map(sumOfDigits(_)).sum\n            case _ => sum = 0\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123705,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe5s8f36.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe5s8f36.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfe5s8f36.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp : Long = num\n                    while (temp != 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp : Long = num\n                    while (temp != 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp : BigInt = num\n                    while (temp != 0) {\n                        sum += (temp % 10).toLong\n                        temp /= 10\n                    }\n                }\n            }\n            case _ => {\n                println(\"Invalid input.\")\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123705,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6dxv0byr.scala:42:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6dxv0byr.scala:43:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6dxv0byr.scala:44:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq85jjacq.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq85jjacq.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq85jjacq.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn3pfxxgn.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn3pfxxgn.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn3pfxxgn.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123710,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpevxywn5g.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpevxywn5g.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpevxywn5g.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123718,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3q9e_c2t.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3q9e_c2t.scala:30:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3q9e_c2t.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3q9e_c2t.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3q9e_c2t.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3q9e_c2t.scala:29:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp3q9e_c2t.scala:23:4 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr8ca2w90.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(x => x.asDigit).sum\n            case x : Long => x.toString.map(x => x.asDigit).sum\n            case x : List[Int] => x.map(x => sumOfDigits(x)).sum\n            case x : List[Long] => x.map(x => sumOfDigits(x)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxg7k5bjt.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxg7k5bjt.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxg7k5bjt.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9x6v01b7.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9x6v01b7.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9x6v01b7.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => {\n                while (num != 0) {\n                    sum += num % 10\n                    num /= 10\n                }\n            }\n            case num : Long => {\n                while (num != 0) {\n                    sum += num % 10\n                    num /= 10\n                }\n            }\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp != 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp != 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123719,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpluh1ppfc.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value /= is not a member of Int - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpluh1ppfc.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                    num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value /= is not a member of Long - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpluh1ppfc.scala:42:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpluh1ppfc.scala:43:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpluh1ppfc.scala:44:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val list = nums.asInstanceOf[List[Int]]\n        list.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa589dpuw.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : List[Long] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5zce5sx.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(n => n.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbrkg6d8.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbrkg6d8.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbrkg6d8.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu_v345az.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu_v345az.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu_v345az.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi_72we_s.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi_72we_s.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi_72we_s.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi_72we_s.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi_72we_s.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_72we_s.scala:28:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpi_72we_s.scala:22:4 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (n <- nums.toString) {\n            sum += n.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9cruqr_w.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9cruqr_w.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9cruqr_w.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : Double => num.toString.map(_.asDigit).sum\n            case num : String => num.map(_.asDigit).sum\n            case num : List[Int] => num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[Long] => num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[Double] => num.map(_.toString.map(_.asDigit).sum).sum\n            case num : List[String] => num.map(_.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123716,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbyoqruas.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbyoqruas.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbyoqruas.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        var num : Long = nums.asInstanceOf[Long]\n        while (num > 0) {\n            sum += num % 10\n            num /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_hmw_akq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_hmw_akq.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_hmw_akq.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoie5nyk6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123717,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkasioxb.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkasioxb.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkasioxb.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.toString.toInt\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123715,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jaewkm9.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jaewkm9.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jaewkm9.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case num : Int => num.toString.map(_.asDigit).sum\n            case num : Long => num.toString.map(_.asDigit).sum\n            case num : BigInt => num.toString.map(_.asDigit).sum\n            case num : BigDecimal => num.toString.map(_.asDigit).sum\n            case nums : List[Any] => nums.map(sumOfDigits).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123717,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkgbp1ftu.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkgbp1ftu.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkgbp1ftu.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : List[Int] => sum = x.map(_.toString.map(_.asDigit).sum).sum\n            case _ => sum = 0\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa06s8wn4.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa06s8wn4.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa06s8wn4.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (i <- nums) {\n                    var temp = i\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (i <- nums) {\n                    var temp = i\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (i <- nums) {\n                    var temp = i\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkwd_7h5z.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkwd_7h5z.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkwd_7h5z.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkwd_7h5z.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6pr9ic0.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6pr9ic0.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6pr9ic0.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Set[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Map[Int, Int] => nums.map(x => x._1.toString.map(_.asDigit).sum + x._2.toString.map(_.asDigit).sum).sum\n            case nums : Vector[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case nums : String => nums.map(_.asDigit).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2vqfgj4.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2vqfgj4.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2vqfgj4.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case x : Int => sum += x\n            case x : Long => sum += x\n            case x : Double => sum += x.toLong\n            case x : String => sum += x.toLong\n            case x : List[Any] => for (i <- x) sum += sumOfDigits(i)\n            case x : Array[Any] => for (i <- x) sum += sumOfDigits(i)\n            case x : Map[Any, Any] => for (i <- x) sum += sumOfDigits(i)\n            case _ => sum += 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123718,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyd3m7uvs.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyd3m7uvs.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyd3m7uvs.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Long]]\n        var sum = 0L\n        for (num <- numsList) {\n            var n = num\n            while (n > 0) {\n                sum += n % 10\n                n /= 10\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123718,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaw3okslu.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaw3okslu.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaw3okslu.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case x : Int => sum = x.toString.map(_.asDigit).sum\n            case x : Long => sum = x.toString.map(_.asDigit).sum\n            case x : Double => sum = x.toString.map(_.asDigit).sum\n            case x : Float => sum = x.toString.map(_.asDigit).sum\n            case x : BigInt => sum = x.toString.map(_.asDigit).sum\n            case x : BigDecimal => sum = x.toString.map(_.asDigit).sum\n            case x : List[Any] => sum = x.map(sumOfDigits(_)).sum\n            case x : Array[Any] => sum = x.map(sumOfDigits(_)).sum\n            case x : ArrayBuffer[Any] => sum = x.map(sumOfDigits(_)).sum\n            case x : Vector[Any] => sum = x.map(sumOfDigits(_)).sum\n            case x : Set[Any] => sum = x.map(sumOfDigits(_)).sum\n            case x : Map[Any, Any] => sum = x.map(sumOfDigits(_)).sum\n            case _ => sum = 0\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2d0koyn1.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2d0koyn1.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2d0koyn1.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case num : Int => {\n                while (num > 0) {\n                    sum += num % 10\n                    num /= 10\n                }\n            }\n            case num : Long => {\n                while (num > 0) {\n                    sum += num % 10\n                    num /= 10\n                }\n            }\n            case num : BigInt => {\n                while (num > 0) {\n                    sum += num % 10\n                    num /= 10\n                }\n            }\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    while (num > 0) {\n                        sum += num % 10\n                        num /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value /= is not a member of Int - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                    num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value /= is not a member of Long - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                    sum += num % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                    num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value /= is not a member of BigInt - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value /= is not a member of Int - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:38:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m                        num /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 value /= is not a member of Long - did you mean num.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4k8uddg.scala:45:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m                        sum += num % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123722,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vj0jl6w.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vj0jl6w.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vj0jl6w.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Array[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Vector[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Set[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : Map[Int, Int] => nums.map(x => x._1.toString.map(_.asDigit).sum + x._2.toString.map(_.asDigit).sum).sum\n            case nums : Int => nums.toString.map(_.asDigit).sum\n            case nums : Long => nums.toString.map(_.asDigit).sum\n            case nums : Double => nums.toString.map(_.asDigit).sum\n            case nums : String => nums.map(_.asDigit).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2mhdw9on.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2mhdw9on.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2mhdw9on.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpahw8c2k6.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpahw8c2k6.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpahw8c2k6.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : List[Int] => x.map(sumOfDigits(_)).sum\n            case x : Array[Int] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa6p539z9.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa6p539z9.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa6p539z9.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case _ => {\n                println(\"Invalid input\")\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpleh62si6.scala:30:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpleh62si6.scala:31:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpleh62si6.scala:32:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123685,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq7pzasm7.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Long]]\n        numsList.map(num => num.toString.map(x => x.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7m996icx.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7m996icx.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7m996icx.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) sum += i.asDigit\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp84a6k5l_.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Byte] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Short] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Char] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:14:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigInteger\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:22:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:23:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_nqkm8a4.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(x => x.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case nums : List[BigInteger] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp80n2jvwe.scala:14:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigInteger] => nums.map(x => x.toString.map(x => x.asDigit).sum).sum\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: type BigInteger\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp80n2jvwe.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp80n2jvwe.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp80n2jvwe.scala:21:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- 0 until nums.toString.length) {\n            sum += nums.toString.charAt(i).asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy9f9zw5u.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy9f9zw5u.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy9f9zw5u.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    var temp = num\n                    while (temp > 0) {\n                        sum += temp % 10\n                        temp /= 10\n                    }\n                }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfdtj_iw1.scala:30:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                        sum += temp % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:39:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:40:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfdtj_iw1.scala:41:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2e0arn7.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2e0arn7.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl2e0arn7.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptwx1av7r.scala:20:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfnymmd46.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) sum += i.toString.toLong\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn19p3zxy.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn19p3zxy.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn19p3zxy.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoiv0hi1y.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123671,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqosdesrb.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        if (nums.isInstanceOf[List[Int]]) {\n            var sum = 0\n            for (num <- nums.asInstanceOf[List[Int]]) {\n                var temp = num\n                while (temp > 0) {\n                    sum += temp % 10\n                    temp /= 10\n                }\n            }\n            sum\n        } else {\n            var sum = 0\n            var temp = nums.asInstanceOf[Int]\n            while (temp > 0) {\n                sum += temp % 10\n                temp /= 10\n            }\n            sum\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplz7n4olb.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplz7n4olb.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplz7n4olb.scala:29:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        numsList.map(x => x.toString.map(_.asDigit).sum).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrq48xje.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case x : Int => x.toString.map(_.asDigit).sum\n            case x : Long => x.toString.map(_.asDigit).sum\n            case x : List[Any] => x.map(sumOfDigits(_)).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1r8se_f1.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123672,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9z9azogj.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString\n        for (i <- 0 until num.length) {\n            sum += num(i).asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy65w51rh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[String] => nums.map(x => x.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Double] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Float] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDig\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmywvs9my.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmywvs9my.scala:30:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmywvs9my.scala:21:75 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mcase\u001b[0m nums : List[BigDecimal] => nums.map(x => x.toString.map(_.asDig\n\u001b[31m\u001b[31m   |\u001b[0m                                                                         ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value asDig is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmywvs9my.scala:24:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmywvs9my.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmywvs9my.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer ex",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        var num = nums.toString\n        for (i <- 0 until num.length) {\n            sum += num(i).asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsaopwpe8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsaopwpe8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsaopwpe8.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflx47xfg.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum = 0L\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123670,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyfq97c8.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.asDigit\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa99mecq1.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case num : Int => {\n                var numStr : String = num.toString\n                for (i <- 0 until numStr.length) {\n                    sum += numStr(i).toString.toInt\n                }\n            }\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    var numStr : String = num.toString\n                    for (i <- 0 until numStr.length) {\n                        sum += numStr(i).toString.toInt\n                    }\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yagbhiw.scala:26:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yagbhiw.scala:27:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3yagbhiw.scala:28:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        nums match {\n            case nums : List[Int] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Long] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigDecimal] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[BigInt] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Double] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Float] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Short] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Byte] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n            case nums : List[Char] => {\n                for (num <- nums) {\n                    sum += num.toString.map(_.asDigit).sum\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9fc3kjs.scala:62:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9fc3kjs.scala:63:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9fc3kjs.scala:64:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        val numsList = nums.asInstanceOf[List[Int]]\n        var sum = 0L\n        for (num <- numsList) {\n            var numStr = num.toString\n            for (i <- 0 until numStr.length) {\n                sum += numStr(i).asDigit\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpot_8xfmj.scala:17:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpot_8xfmj.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpot_8xfmj.scala:19:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        nums match {\n            case nums : List[Int] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[Long] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case nums : List[BigInt] => nums.map(x => x.toString.map(_.asDigit).sum).sum\n            case _ => 0\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6kptoxwh.scala:16:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to compute the sum of digits of each number of a given list.\n    def sumOfDigits(nums : Any) : Long = {\n        var sum : Long = 0\n        for (i <- nums.toString) {\n            sum += i.toString.toInt\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumOfDigits((Any(10l.toLong, 2l.toLong, 56l.toLong))) == (14l));\n    assert(sumOfDigits((Any(List[Any](10l, 20l, 4l, 5l, \"b\", 70l, \"a\")))) == (19l));\n    assert(sumOfDigits((Any(10l.toLong, 20l.toLong, -4l.toLong, 5l.toLong, -70l.toLong))) == (19l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:13:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m56l\u001b[0m.toLong))) == (\u001b[31m14l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sumOfDigits((Any(List[\u001b[35mAny\u001b[0m](\u001b[31m10l\u001b[0m, \u001b[31m20l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m70l\u001b[0m, \u001b[31m\"a\"\u001b[0m)))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyybqj5ao.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sumOfDigits((Any(\u001b[31m10l\u001b[0m.toLong, \u001b[31m20l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, -\u001b[31m70l\u001b[0m.toLong))) == (\u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
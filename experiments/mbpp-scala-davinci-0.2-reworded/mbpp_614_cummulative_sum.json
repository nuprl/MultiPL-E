{
  "name": "mbpp_614_cummulative_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the cumulative sum of all the values that are present in the given tuple list.\n    def cummulativeSum(test_list : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_614_cummulative_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(cummulativeSum((List[Long]((1l, 3l), (5l, 6l, 7l), (2l, 6l)))) == (30l));\n    assert(cummulativeSum((List[Long]((2l, 4l), (6l, 7l, 8l), (3l, 7l)))) == (37l));\n    assert(cummulativeSum((List[Long]((3l, 5l), (7l, 8l, 9l), (4l, 8l)))) == (44l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        test_list.foldLeft(0L)(_ + _)",
    "        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        return test_list.foldLeft(0L)((x, y) => x + y)",
    "        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- test_list) {\n            sum += i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 until test_list.length) {\n            sum += test_list(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to test_list.length - 1) {\n            sum += test_list(i)\n        }\n        return sum"
  ]
}
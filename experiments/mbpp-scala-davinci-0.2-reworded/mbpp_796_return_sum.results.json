{
  "name": "mbpp_796_return_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_796_return_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (x <- dict) {\n            sum += x._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keySet) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (x <- dict) {\n            sum += x._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for ((k,v) <- dict) {\n            sum += v\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) sum += i._2\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (x <- dict) {\n            sum += x._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for ((k,v) <- dict) sum += v\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) sum += i._2\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.foldLeft(0L)((acc,x) => acc + x._2)\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (x <- dict) {\n            sum += x._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) sum += i._2\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for ((k,v) <- dict) {\n            sum += v\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for ((k,v) <- dict) {\n            sum += v\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for ((k,v) <- dict) {\n            sum += v\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) {\n            sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict.values) sum += i\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.foldLeft(0L)(_ + _._2)\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) sum += dict(key)\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (x <- dict) {\n            sum += x._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        dict.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum = 0L\n        for (i <- dict.values) sum += i\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (key <- dict.keys) {\n            sum += dict(key)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write function to find the sum of all items in the given map.\n    def returnSum(dict : Map[String,Long]) : Long = {\n        var sum : Long = 0\n        for (i <- dict) {\n            sum += i._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(returnSum((Map[String,Long](\"a\" -> 100l, \"b\" -> 200l, \"c\" -> 300l))) == (600l));\n    assert(returnSum((Map[String,Long](\"a\" -> 25l, \"b\" -> 18l, \"c\" -> 45l))) == (88l));\n    assert(returnSum((Map[String,Long](\"a\" -> 36l, \"b\" -> 39l, \"c\" -> 49l))) == (124l));\n    }\n\n}\n",
      "timestamp": 1665509987,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
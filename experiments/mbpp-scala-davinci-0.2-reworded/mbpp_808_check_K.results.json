{
  "name": "mbpp_808_check_K",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_808_check_K.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_ceil = ceil(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_floor = floor(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_ceil_sum = 0\n        var test_tup_str_arr_len_half_floor_sum = 0\n        var test_tup_str_arr_len_half_ceil_sum_str = \"\"\n        var test_tup_str_arr_len_half_floor_sum_str = \"\"\n        var test_tup_str_arr_len_half_ceil_sum_str_arr = Array[Char]()\n        var test_tup_str_arr_len_half_floor_sum_str_arr = Array[Char]()\n        var test_tup_str_arr_len_half_ceil_sum_str_arr_len = 0\n        var test_tup_str_arr_len_half_floor_sum_str_arr_len = 0\n        var test_tup_str_arr_len_half_ceil_sum_str_arr_len_half = 0\n        var test_tup_str_arr_len_half_floor_sum_str_arr_len_half = 0\n        var test_tup_str_arr_len_half_ceil_sum_str_arr_len_half_ceil = 0\n        var test_tup_str_arr_len_half_floor_sum_str_arr_len_half_floor = 0\n       \n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwfe4g4l.scala:26:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwfe4g4l.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwfe4g4l.scala:29:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwwfe4g4l.scala:30:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- test_tup.toString) {\n            if (i.toString.toLong == K) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2lnn049.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2lnn049.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl2lnn049.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var result = false\n        if (test_tup % K == 0) {\n            result = true\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplld5e_tw.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplld5e_tw.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplld5e_tw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        for (i <- 0 until test_tup.toString.length) {\n            sum += pow(test_tup.toString.charAt(i).asDigit, 2).toLong\n        }\n        if (sum == K) return true\n        else if (sum < K) return false\n        else return checkK(sum, K)\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7r_e99.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7r_e99.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7r_e99.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_arr = test_tup_str.split(\"\")\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_sum = 0\n        for (i <- 0 until test_tup_str_arr_len) {\n            test_tup_str_arr_sum += test_tup_str_arr(i).toInt\n        }\n        if (test_tup_str_arr_sum == K) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84zd8qqo.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84zd8qqo.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84zd8qqo.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_str_len = tup_str.length\n        var tup_str_arr = tup_str.toCharArray\n        var tup_str_arr_len = tup_str_arr.length\n        var tup_str_arr_len_half = tup_str_arr_len / 2\n        var tup_str_arr_len_half_1 = tup_str_arr_len_half + 1\n        var tup_str_arr_len_half_1_arr = new Array[Char](tup_str_arr_len_half_1)\n        var tup_str_arr_len_half_arr = new Array[Char](tup_str_arr_len_half)\n        var tup_str_arr_len_half_1_str = \"\"\n        var tup_str_arr_len_half_str = \"\"\n        var tup_str_arr_len_half_1_int = 0\n        var tup_str_arr_len_half_int = 0\n        var tup_str_arr_len_half_1_int_sq = 0\n        var tup_str_arr_len_half_int_sq = 0\n        var tup_str_arr_len_half_1_int_sq_sum = 0\n        var tup_str_arr_len_half_int_sq_sum = 0\n        var tup_str_arr_len_half_1_int_sq_sum_sqrt = 0\n        var tup_str_arr_len_half_int_sq_sum_sqrt = 0\n        var tup_str_arr_len_half_1_int_sq_sum_sqrt_str = \"\"\n        var tup_str_arr_len_half_int_sq_sum_sqrt_str = \"\"\n        var tup_str_arr_len_half_1_int_sq_sum_sqrt_str_len = 0\n        var tup_str_arr_len_half_int_sq_sum_sqrt_str_len = 0\n        var tup\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppg3hshoh.scala:29:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppg3hshoh.scala:29:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppg3hshoh.scala:31:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppg3hshoh.scala:32:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppg3hshoh.scala:33:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 1 to test_tup.toString.length) {\n            if (test_tup.toString.charAt(i - 1).asDigit == K) {\n                flag = true\n                return flag\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8yvi084.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8yvi084.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8yvi084.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.split(\"\")\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_int = new Array[Int](test_tup_str_arr_len)\n        for (i <- 0 until test_tup_str_arr_len) {\n            test_tup_str_arr_int(i) = test_tup_str_arr(i).toInt\n        }\n        var test_tup_str_arr_int_sum = test_tup_str_arr_int.sum\n        if (test_tup_str_arr_int_sum == K) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ya3_1lz.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ya3_1lz.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ya3_1lz.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_rev = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_rev_arr = new Array[Int](test_tup_str_arr_len_half_int)\n        for (i <- 0 to test_tup_str_arr_len_half_int_rev) {\n            test_tup_str_arr_len_half_int_rev_arr(i) = test_tup_str_arr_len_half_int_rev - i\n        }\n        var test_tup_str_arr_len_half_int_rev_arr_len = test_tup_str_arr_len_half_int_rev_arr.length\n        var test_tup_str_arr_len_half_int_rev_arr_len_half = test_tup_str_arr_len_half_int_rev_arr_len / 2\n        var test_tup_str_arr_len_half_int_rev_arr_len_half_int = test_tup_str_arr_len_half_int_rev_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_rev_arr_len_half_int_rev = test_tup_str_arr_len_half_int_rev_arr_len_half_int - 1\n        for (i <- 0 to test_tup_str_arr_len\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu_7w2etw.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_7w2etw.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_7w2etw.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_7w2etw.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_len = test_tup_str.length\n        var test_tup_arr = new Array[Long](test_tup_len)\n        for (i <- 0 until test_tup_len) {\n            test_tup_arr(i) = test_tup_str(i).toString.toLong\n        }\n        var sum = 0L\n        for (i <- 0 until test_tup_len) {\n            sum += pow(test_tup_arr(i), K).toLong\n        }\n        if (sum == test_tup) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgwqv2iyf.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgwqv2iyf.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgwqv2iyf.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_str_len = test_str.length\n        var i = 0\n        while (i < test_str_len) {\n            if (test_str(i) == K.toString.charAt(0)) return true\n            i += 1\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0xitbl7.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0xitbl7.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0xitbl7.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_1 = test_tup_str_arr_len_half + 1\n        var test_tup_str_arr_len_half_2 = test_tup_str_arr_len_half - 1\n        var test_tup_str_arr_len_half_1_to_end = test_tup_str_arr.slice(test_tup_str_arr_len_half_1, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_2_to_end = test_tup_str_arr.slice(test_tup_str_arr_len_half_2, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_1_to_end_str = test_tup_str_arr_len_half_1_to_end.mkString\n        var test_tup_str_arr_len_half_2_to_end_str = test_tup_str_arr_len_half_2_to_end.mkString\n        var test_tup_str_arr_len_half_1_to_end_str_int = test_tup_str_arr_len_half_1_to_end_str.toInt\n        var test_tup_str_arr_len_half_2_to_end_str_int = test_tup_str_arr_len_half_2_to_end_str.toInt\n        var test_tup_str_arr_len_half_1_to_end_str_int_sqrt = sqrt(test_tup_str_arr_len_half_1_to_end_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_vr18kuq.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_vr18kuq.scala:18:67 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup_str_arr_len_half_1_to_end_str_int_sqrt\u001b[0m = sqrt(test_tup_str_arr_len_half_1_to_end_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Not found: test_tup_str_arr_len_half_1_to_end_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_vr18kuq.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_vr18kuq.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_vr18kuq.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-expl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag : Boolean = false\n        var temp : Long = test_tup\n        while(temp != 0) {\n            if(temp % 10 == K) {\n                flag = true\n                return flag\n            }\n            temp /= 10\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6zwtc5x.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6zwtc5x.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6zwtc5x.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        for (i <- 0 to test_tup.toString.length - 1) {\n            sum += pow(test_tup.toString.charAt(i).asDigit, 2).toLong\n        }\n        if (sum == K) return true\n        else if (sum < K) return false\n        else return checkK(sum, K)\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509945,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1pizt20x.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1pizt20x.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1pizt20x.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_rev = test_tup_str_arr.reverse\n        var test_tup_str_arr_rev_len = test_tup_str_arr_rev.length\n        var test_tup_str_arr_rev_str = test_tup_str_arr_rev.mkString\n        var test_tup_str_arr_rev_str_len = test_tup_str_arr_rev_str.length\n        var test_tup_str_arr_rev_str_to_long = test_tup_str_arr_rev_str.toLong\n        var test_tup_str_arr_rev_str_to_long_str = test_tup_str_arr_rev_str_to_long.toString\n        var test_tup_str_arr_rev_str_to_long_str_len = test_tup_str_arr_rev_str_to_long_str.length\n        var test_tup_str_arr_rev_str_to_long_str_to_long = test_tup_str_arr_rev_str_to_long_str.toLong\n        var test_tup_str_arr_rev_str_to_long_str_to_long_str = test_tup_str_arr_rev_str_to_long_str_to_long.toString\n        var test_tup_str_arr_rev_str_to_long_str_to_long_str_len = test_tup_str_arr_rev_str_to_long_str_to_long_str.length\n        var test_tup_str_arr_rev_str_to_long_str_to_long_str_to_long = test_tup_str_arr\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvidd4dp.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvidd4dp.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvidd4dp.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvidd4dp.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 1 to test_tup.toString.length) {\n            if (test_tup.toString.charAt(i - 1).toString.toLong == K) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63lyq28u.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63lyq28u.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63lyq28u.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var temp = test_tup\n        while(temp != 0) {\n            if(temp % 10 == K) {\n                flag = true\n                return flag\n            }\n            temp /= 10\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1umio21l.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1umio21l.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1umio21l.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val tup_list = new ListBuffer[Long]()\n        var tup = test_tup\n        while (tup > 0) {\n            tup_list += tup % 10\n            tup /= 10\n        }\n        tup_list.contains(K)\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpox1pgsqz.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpox1pgsqz.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpox1pgsqz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 until test_tup.toString.length) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgt71hqk.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgt71hqk.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgt71hqk.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122567,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5ydft__.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5ydft__.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5ydft__.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_copy = test_tup\n        while (test_tup_copy > 0) {\n            if (test_tup_copy % 10 == K) return true\n            test_tup_copy /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpapm5e13j.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpapm5e13j.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpapm5e13j.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_floor = floor(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_ceil = ceil(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_floor_arr = test_tup_str_arr.slice(0, test_tup_str_arr_len_half_floor)\n        var test_tup_str_arr_len_half_ceil_arr = test_tup_str_arr.slice(test_tup_str_arr_len_half_ceil, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_floor_arr_str = test_tup_str_arr_len_half_floor_arr.mkString\n        var test_tup_str_arr_len_half_ceil_arr_str = test_tup_str_arr_len_half_ceil_arr.mkString\n        var test_tup_str_arr_len_half_floor_arr_str_num = test_tup_str_arr_len_half_floor_arr_str.toLong\n        var test_tup_str_arr_len_half_ceil_arr_str_num = test_tup_str_arr_len_half_ceil_arr_str.toLong\n        var test_tup_str_arr_len_half_floor_arr_str_num_sum = test_tup_str_arr_len_half_floor_arr_str_num +\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpu5ojo99f.scala:19:107 --------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup_str_arr_len_half_floor_arr_str_num_sum\u001b[0m = test_tup_str_arr_len_half_floor_arr_str_num +\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5ojo99f.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5ojo99f.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5ojo99f.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5ojo99f.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        var i = 0\n        while (i < test_tup_str_len) {\n            if (test_tup_str(i) == K.toString()(0)) return true\n            i += 1\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zmupp1v.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zmupp1v.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zmupp1v.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_arr = test_tup.toString.toCharArray\n        val test_arr_int = test_arr.map(x => x.toString.toInt)\n        val test_arr_int_sum = test_arr_int.sum\n        if (test_arr_int_sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr1r9j5j9.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr1r9j5j9.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr1r9j5j9.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_len_half = test_tup_arr_len / 2\n        var test_tup_arr_len_half_ceil = ceil(test_tup_arr_len_half).toInt\n        var test_tup_arr_len_half_floor = floor(test_tup_arr_len_half).toInt\n        var test_tup_arr_len_half_ceil_arr = new Array[Char](test_tup_arr_len_half_ceil)\n        var test_tup_arr_len_half_floor_arr = new Array[Char](test_tup_arr_len_half_floor)\n        var test_tup_arr_len_half_ceil_arr_str = \"\"\n        var test_tup_arr_len_half_floor_arr_str = \"\"\n        var test_tup_arr_len_half_ceil_arr_str_int = 0\n        var test_tup_arr_len_half_floor_arr_str_int = 0\n        var test_tup_arr_len_half_ceil_arr_str_int_rev = 0\n        var test_tup_arr_len_half_floor_arr_str_int_rev = 0\n        var test_tup_arr_len_half_ceil_arr_str_int_rev_str = \"\"\n        var test_tup_arr_len_half_floor_arr_str_int_rev_str = \"\"\n        var test_tup_arr_len_half_ceil_arr_str_int_rev_str_int = 0\n        var test_tup_arr_len_half_floor_arr_str_int_rev_str_int = 0\n        var test_tup_arr_len_half_ceil_arr_str_int_rev_str_int_rev = 0\n        var test_tup_arr_len_half_floor_arr_str_int_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfowp34m2.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfowp34m2.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfowp34m2.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfowp34m2.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfowp34m2.scala:29:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_sum = 0L\n        var tup_prod = 1L\n        var tup_str = test_tup.toString\n        for (i <- 0 until tup_str.length) {\n            tup_sum += tup_str(i).toString.toInt\n            tup_prod *= tup_str(i).toString.toInt\n        }\n        if (tup_sum == K || tup_prod == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctyzsx6w.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctyzsx6w.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctyzsx6w.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_arr = test_tup_str.toCharArray\n        val test_tup_arr_int = test_tup_arr.map(x => x.toString.toInt)\n        val test_tup_arr_int_sum = test_tup_arr_int.sum\n        if (test_tup_arr_int_sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcb9advd.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcb9advd.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcb9advd.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var temp : Long = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return (sum == K)\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0clgzyv.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0clgzyv.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0clgzyv.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        for (i <- 0 until test_tup_str.length) {\n            if (test_tup_str(i) == K.toString()(0)) return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3mrrrou.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3mrrrou.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3mrrrou.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        var i = 0\n        var flag = false\n        while (i < test_tup_str_len) {\n            if (test_tup_str.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvpp06po.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvpp06po.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvpp06po.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n                break\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmkh5in0l.scala:10:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkh5in0l.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkh5in0l.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkh5in0l.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_list = List[Long]()\n        for (i <- 1 to test_tup.toString.length) {\n            tup_list = tup_list :+ test_tup.toString.substring(0, i).toLong\n        }\n        if (tup_list.contains(K)) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8e04ap0.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8e04ap0.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8e04ap0.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_sum = 0L\n        for (i <- 1 to test_tup.toString.length) {\n            tup_sum += pow(test_tup.toString.charAt(i - 1).toString.toInt, 2).toLong\n        }\n        if (tup_sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpck__vho2.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpck__vho2.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpck__vho2.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_list = test_tup.toString.split(\"\").map(_.toInt).toList\n        var test_tup_list_sum = test_tup_list.sum\n        if (test_tup_list_sum == K) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8hzxa1z9.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8hzxa1z9.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8hzxa1z9.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_plus_1 = test_tup_str_arr_len_half_int + 1\n        var test_tup_str_arr_len_half_int_plus_1_minus_1 = test_tup_str_arr_len_half_int_plus_1 - 1\n        var test_tup_str_arr_len_half_int_plus_1_minus_1_int = test_tup_str_arr_len_half_int_plus_1_minus_1.toInt\n        var test_tup_str_arr_len_half_int_plus_1_minus_1_int_minus_1 = test_tup_str_arr_len_half_int_plus_1_minus_1_int - 1\n        var test_tup_str_arr_len_half_int_plus_1_minus_1_int_minus_1_int = test_tup_str_arr_len_half_int_plus_1_minus_1_int_minus_1.toInt\n        var test_tup_str_arr_len_half_int_plus_1_minus_1_int_minus_1_int_plus_1 = test_tup_str_arr_len_half_int_plus_1_minus_1_int_minus_1_int + 1\n        var test_tup_str_arr_len_half_int_plus_1_minus_1_int_minus_1_int_plus_1_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpruar6rhh.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpruar6rhh.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpruar6rhh.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpruar6rhh.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpruar6rhh.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup != 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62fz_8lq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62fz_8lq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62fz_8lq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_str_len = test_str.length\n        for (i <- 0 until test_str_len) {\n            val test_num = test_str.substring(i, i + 1).toInt\n            if (test_num == K) return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122582,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38ck9um5.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38ck9um5.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38ck9um5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq18r_6vc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq18r_6vc.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq18r_6vc.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup = test_tup\n        while (tup > 0) {\n            if (tup % 10 == K) return true\n            tup /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c7ioqz1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c7ioqz1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c7ioqz1.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_len = test_tup_str.length\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_rev = test_tup_arr.reverse\n        var test_tup_arr_rev_str = test_tup_arr_rev.mkString\n        var test_tup_arr_rev_int = test_tup_arr_rev_str.toLong\n        if (test_tup_arr_rev_int == K) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpezm161xc.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpezm161xc.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpezm161xc.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_minus_one = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_plus_one = test_tup_str_arr_len_half_int + 1\n        var test_tup_str_arr_len_half_int_plus_two = test_tup_str_arr_len_half_int + 2\n        var test_tup_str_arr_len_half_int_plus_three = test_tup_str_arr_len_half_int + 3\n        var test_tup_str_arr_len_half_int_plus_four = test_tup_str_arr_len_half_int + 4\n        var test_tup_str_arr_len_half_int_plus_five = test_tup_str_arr_len_half_int + 5\n        var test_tup_str_arr_len_half_int_plus_six = test_tup_str_arr_len_half_int + 6\n        var test_tup_str_arr_len_half_int_plus_seven = test_tup_str_arr_len_half_int + 7\n        var test_tup_str_arr_len_half_int_plus_eight = test_tup_str_arr_len_half_int + 8\n        var test_tup_str_arr_len_half_int_plus_nine = test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv9ir2kr.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv9ir2kr.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv9ir2kr.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkv9ir2kr.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        if (test_tup_str.contains(K.toString)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjvxp1uus.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjvxp1uus.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjvxp1uus.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_plus = test_tup_str_arr_len_half + 1\n        var test_tup_str_arr_len_half_minus = test_tup_str_arr_len_half - 1\n        var test_tup_str_arr_len_half_plus_arr = test_tup_str_arr.slice(0, test_tup_str_arr_len_half_plus)\n        var test_tup_str_arr_len_half_minus_arr = test_tup_str_arr.slice(test_tup_str_arr_len_half_minus, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_plus_arr_str = test_tup_str_arr_len_half_plus_arr.mkString\n        var test_tup_str_arr_len_half_minus_arr_str = test_tup_str_arr_len_half_minus_arr.mkString\n        var test_tup_str_arr_len_half_plus_arr_str_int = test_tup_str_arr_len_half_plus_arr_str.toInt\n        var test_tup_str_arr_len_half_minus_arr_str_int = test_tup_str_arr_len_half_minus_arr_str.toInt\n        var test_tup_str_arr_len_half_plus_arr_str_int_sqrt = sqrt(test_tup_str_arr_len_half_plus_arr_str_int)\n        var test_tup_str_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpoel1e7ju.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoel1e7ju.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoel1e7ju.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoel1e7ju.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoel1e7ju.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxpknizd.scala:9:18 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                  Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxpknizd.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxpknizd.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val tup_arr = test_tup.toString.toCharArray\n        val tup_arr_len = tup_arr.length\n        var i = 0\n        var flag = false\n        while (i < tup_arr_len) {\n            if (tup_arr(i) == K.toString.toCharArray()(0)) {\n                flag = true\n                return flag\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp290p3pvw.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp290p3pvw.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp290p3pvw.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.split(\"\")\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_floor = floor(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_ceil = ceil(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_floor_arr = test_tup_str_arr.slice(0, test_tup_str_arr_len_half_floor)\n        var test_tup_str_arr_len_half_ceil_arr = test_tup_str_arr.slice(test_tup_str_arr_len_half_ceil, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_floor_arr_len = test_tup_str_arr_len_half_floor_arr.length\n        var test_tup_str_arr_len_half_ceil_arr_len = test_tup_str_arr_len_half_ceil_arr.length\n        var test_tup_str_arr_len_half_floor_arr_sum = 0\n        var test_tup_str_arr_len_half_ceil_arr_sum = 0\n        for (i <- 0 until test_tup_str_arr_len_half_floor_arr_len) {\n            test_tup_str_arr_len_half_floor_arr_sum += test_tup_str_arr_len_half_floor_arr(i).toInt\n        }\n        for (i <- 0 until test_tup_str_arr_len_half\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwle0d_39.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwle0d_39.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwle0d_39.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwle0d_39.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_str_len = test_str.length\n        var i = 0\n        while (i < test_str_len) {\n            if (test_str(i) == K + 48) return true\n            i += 1\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph7e0uodq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph7e0uodq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph7e0uodq.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup = test_tup\n        while (tup > 0) {\n            if (tup % 10 == K) return true\n            tup /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while(temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if(sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3_xj0ju.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3_xj0ju.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3_xj0ju.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var flag = false\n        for (i <- 0 to test_tup_str.length - 1) {\n            if (test_tup_str(i) == K.toString()(0)) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a04jmns.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a04jmns.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a04jmns.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.split(\"\").map(_.toInt)\n        var K_arr = K.toString.split(\"\").map(_.toInt)\n        var flag = true\n        for (i <- 0 until K_arr.length) {\n            if (!test_tup_arr.contains(K_arr(i))) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3agw9ghp.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3agw9ghp.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3agw9ghp.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- test_tup.toString.toList) {\n            if (i.toString.toLong == K) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrg69no4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrg69no4.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrg69no4.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var t = test_tup\n        while (t > 0) {\n            sum += t % 10\n            t /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__95c3hs.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__95c3hs.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__95c3hs.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_1 = test_tup_str_arr_len_half + 1\n        var test_tup_str_arr_len_half_1_arr = test_tup_str_arr.slice(0, test_tup_str_arr_len_half_1)\n        var test_tup_str_arr_len_half_1_arr_str = test_tup_str_arr_len_half_1_arr.mkString\n        var test_tup_str_arr_len_half_1_arr_str_num = test_tup_str_arr_len_half_1_arr_str.toLong\n        var test_tup_str_arr_len_half_arr = test_tup_str_arr.slice(test_tup_str_arr_len_half_1, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_arr_str = test_tup_str_arr_len_half_arr.mkString\n        var test_tup_str_arr_len_half_arr_str_num = test_tup_str_arr_len_half_arr_str.toLong\n        var test_tup_str_arr_len_half_1_arr_str_num_sq = test_tup_str_arr_len_half_1_arr_str_num * test_tup_str_arr_len_half_1_arr_str_num\n        var test_tup_str_arr_len_half_arr_str_num_sq = test_tup_str_arr_len_half_arr_str_num * test_tup_str_arr_len_half\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhrmul9h.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhrmul9h.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhrmul9h.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhrmul9h.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.split(\"\").map(_.toInt)\n        var sum = 0\n        for (i <- 0 to test_tup_arr.length - 1) {\n            sum += test_tup_arr(i)\n        }\n        if (sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehu26nzd.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehu26nzd.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehu26nzd.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_arr = test_tup_str.toCharArray\n        var sum = 0L\n        for (i <- 0 until test_tup_str_len) {\n            sum += pow(test_tup_str_arr(i).toLong - '0'.toLong, 2).toLong\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp83gx7g7i.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp83gx7g7i.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp83gx7g7i.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_len = test_tup_str.length\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_sum = 0\n        for (i <- 0 until test_tup_arr_len) {\n            test_tup_arr_sum += test_tup_arr(i).toInt - '0'.toInt\n        }\n        if (test_tup_arr_sum == K) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84tg9ohu.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84tg9ohu.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84tg9ohu.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_temp = test_tup\n        var K_temp = K\n        while (test_tup_temp > 0) {\n            if (test_tup_temp % 10 == K_temp) return true\n            test_tup_temp /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcfq1oivq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcfq1oivq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcfq1oivq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup != 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var K_arr = K.toString.toCharArray\n        var flag = false\n        for (i <- 0 until test_tup_arr.length) {\n            if (test_tup_arr(i) == K_arr(0)) {\n                flag = true\n                for (j <- 1 until K_arr.length) {\n                    if (test_tup_arr(i + j) != K_arr(j)) {\n                        flag = false\n                        break\n                    }\n                }\n                if (flag) return true\n            }\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2dbh_rq.scala:15:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2dbh_rq.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2dbh_rq.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2dbh_rq.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i).toString.toLong == K) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1b_4tqq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1b_4tqq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1b_4tqq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var k_found = false\n        var i = 0\n        while(i < test_tup.toString.length && !k_found) {\n            if(test_tup.toString.charAt(i).asDigit == K) k_found = true\n            i += 1\n        }\n        return k_found\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nxus2_e.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nxus2_e.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nxus2_e.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_len_half = test_tup_arr_len / 2\n        var test_tup_arr_len_half_ceil = ceil(test_tup_arr_len_half).toInt\n        var test_tup_arr_len_half_floor = floor(test_tup_arr_len_half).toInt\n        var test_tup_arr_len_half_ceil_sum = 0\n        var test_tup_arr_len_half_floor_sum = 0\n        for (i <- 0 until test_tup_arr_len_half_ceil) {\n            test_tup_arr_len_half_ceil_sum += test_tup_arr(i).toInt - 48\n        }\n        for (i <- test_tup_arr_len_half_floor until test_tup_arr_len) {\n            test_tup_arr_len_half_floor_sum += test_tup_arr(i).toInt - 48\n        }\n        if (test_tup_arr_len_half_ceil_sum == K || test_tup_arr_len_half_floor_sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122597,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5nvr4bl.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5nvr4bl.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5nvr4bl.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var k_str = K.toString\n        var k_str_len = k_str.length\n        var k_str_arr = k_str.toCharArray\n        var k_str_arr_rev = k_str_arr.reverse\n        var k_str_arr_rev_str = k_str_arr_rev.mkString\n        var k_str_arr_rev_str_len = k_str_arr_rev_str.length\n        var k_str_arr_rev_str_arr = k_str_arr_rev_str.toCharArray\n        var test_tup_str_arr_rev = test_tup_str_arr.reverse\n        var test_tup_str_arr_rev_str = test_tup_str_arr_rev.mkString\n        var test_tup_str_arr_rev_str_len = test_tup_str_arr_rev_str.length\n        var test_tup_str_arr_rev_str_arr = test_tup_str_arr_rev_str.toCharArray\n        var test_tup_str_arr_rev_str_arr_sub = test_tup_str_arr_rev_str_arr.slice(0, k_str_arr_rev_str_len)\n        var test_tup_str_arr_rev_str_arr_sub_str = test_tup_str_arr_rev_str_arr_sub.mkString\n        if (test_tup_str_arr_rev_str_arr_sub_str == k_str_arr_rev_str) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxtc8kfb.scala:30:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxtc8kfb.scala:31:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxtc8kfb.scala:32:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp != 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyuhjlphb.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyuhjlphb.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyuhjlphb.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while(temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if(sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3_xj0ju.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3_xj0ju.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq3_xj0ju.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_rev = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_rev_arr = new Array[Char](test_tup_str_arr_len_half_int)\n        for (i <- 0 to test_tup_str_arr_len_half_int_rev) {\n            test_tup_str_arr_len_half_int_rev_arr(i) = test_tup_str_arr(test_tup_str_arr_len_half_int_rev - i)\n        }\n        var test_tup_str_arr_len_half_int_rev_arr_str = test_tup_str_arr_len_half_int_rev_arr.mkString\n        var test_tup_str_arr_len_half_int_rev_arr_str_long = test_tup_str_arr_len_half_int_rev_arr_str.toLong\n        var test_tup_str_arr_len_half_int_rev_arr_str_long_add = test_tup_str_arr_len_half_int_rev_arr_str_long + test_tup\n        if (test_tup_str_arr_len_half_int_rev_arr_str_long_add == K) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpab526xmy.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpab526xmy.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpab526xmy.scala:29:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup != 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphqkfo19f.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphqkfo19f.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphqkfo19f.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_len_half = test_tup_arr_len / 2\n        var test_tup_arr_len_half_plus = test_tup_arr_len_half + 1\n        var test_tup_arr_len_half_minus = test_tup_arr_len_half - 1\n        var test_tup_arr_len_half_plus_minus = test_tup_arr_len_half_plus - 1\n        var test_tup_arr_len_half_minus_plus = test_tup_arr_len_half_minus + 1\n        var test_tup_arr_len_half_plus_minus_plus = test_tup_arr_len_half_plus_minus + 1\n        var test_tup_arr_len_half_minus_plus_minus = test_tup_arr_len_half_minus_plus - 1\n        var test_tup_arr_len_half_plus_minus_plus_minus = test_tup_arr_len_half_plus_minus_plus - 1\n        var test_tup_arr_len_half_minus_plus_minus_plus = test_tup_arr_len_half_minus_plus_minus + 1\n        var test_tup_arr_len_half_plus_minus_plus_minus_plus = test_tup_arr_len_half_plus_minus_plus_minus + 1\n        var test_tup_arr_len_half_minus_plus_minus_plus_minus = test_tup_arr_len_half_minus_plus_minus_plus - 1\n        var test_tup_arr_len_half_plus_minus_plus_minus_plus_minus = test_tup_arr_len_half_plus_minus_plus_minus_plus - 1\n        var test_tup_arr_len_half_minus_plus_minus_plus_minus\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6r9ijli7.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r9ijli7.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r9ijli7.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r9ijli7.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r9ijli7.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcv2lr50k.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_len_half = test_tup_arr_len / 2\n        var test_tup_arr_len_half_1 = test_tup_arr_len_half + 1\n        var test_tup_arr_len_half_2 = test_tup_arr_len_half - 1\n        var test_tup_arr_len_half_3 = test_tup_arr_len_half + 2\n        var test_tup_arr_len_half_4 = test_tup_arr_len_half - 2\n        var test_tup_arr_len_half_5 = test_tup_arr_len_half + 3\n        var test_tup_arr_len_half_6 = test_tup_arr_len_half - 3\n        var test_tup_arr_len_half_7 = test_tup_arr_len_half + 4\n        var test_tup_arr_len_half_8 = test_tup_arr_len_half - 4\n        var test_tup_arr_len_half_9 = test_tup_arr_len_half + 5\n        var test_tup_arr_len_half_10 = test_tup_arr_len_half - 5\n        var test_tup_arr_len_half_11 = test_tup_arr_len_half + 6\n        var test_tup_arr_len_half_12 = test_tup_arr_len_half - 6\n        var test_tup_arr_len_half_13 = test_tup_arr_len_half + 7\n        var test_tup_arr_len_half_14 = test_tup_arr_len_half - 7\n        var test_tup_arr_len_half_15 = test_tup_arr_len_half + 8\n        var test_tup_arr_len\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmi3ve4qr.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi3ve4qr.scala:26:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi3ve4qr.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi3ve4qr.scala:29:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi3ve4qr.scala:30:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_len_half = test_tup_str_len / 2\n        val test_tup_str_len_half_plus_one = test_tup_str_len_half + 1\n        val test_tup_str_len_half_minus_one = test_tup_str_len_half - 1\n        val test_tup_str_len_half_minus_one_plus_one = test_tup_str_len_half_minus_one + 1\n        val test_tup_str_len_half_minus_one_minus_one = test_tup_str_len_half_minus_one - 1\n        val test_tup_str_len_half_minus_one_minus_one_plus_one = test_tup_str_len_half_minus_one_minus_one + 1\n        val test_tup_str_len_half_minus_one_minus_one_minus_one = test_tup_str_len_half_minus_one_minus_one - 1\n        val test_tup_str_len_half_minus_one_minus_one_minus_one_plus_one = test_tup_str_len_half_minus_one_minus_one_minus_one + 1\n        val test_tup_str_len_half_minus_one_minus_one_minus_one_minus_one = test_tup_str_len_half_minus_one_minus_one_minus_one - 1\n        val test_tup_str_len_half_minus_one_minus_one_minus_one_minus_one_plus_one = test_tup_str_len_half_minus_one_minus_one_minus_one_minus_one + 1\n        val test_tup_str_len_half_minus_one_minus_one_minus_one_minus_one_minus_one = test_tup_str_len_half_minus_one_minus_one_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9rzftfuj.scala:18:86 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tup_str_len_half_minus_one_minus_one_minus_one_minus_one_minus_one\u001b[0m = test_tup_str_len_half_minus_one_minus_one_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   Not found: test_tup_str_len_half_minus_one_minus_one_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rzftfuj.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rzftfuj.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rzftfuj.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rzftfuj.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_len_half = test_tup_arr_len / 2\n        var test_tup_arr_len_half_plus = test_tup_arr_len_half + 1\n        var test_tup_arr_len_half_minus = test_tup_arr_len_half - 1\n        var test_tup_arr_len_half_minus_plus = test_tup_arr_len_half_minus + 1\n        var test_tup_arr_len_half_minus_minus = test_tup_arr_len_half_minus - 1\n        var test_tup_arr_len_half_minus_minus_plus = test_tup_arr_len_half_minus_minus + 1\n        var test_tup_arr_len_half_minus_minus_minus = test_tup_arr_len_half_minus_minus - 1\n        var test_tup_arr_len_half_minus_minus_minus_plus = test_tup_arr_len_half_minus_minus_minus + 1\n        var test_tup_arr_len_half_minus_minus_minus_minus = test_tup_arr_len_half_minus_minus_minus - 1\n        var test_tup_arr_len_half_minus_minus_minus_minus_plus = test_tup_arr_len_half_minus_minus_minus_minus + 1\n        var test_tup_arr_len_half_minus_minus_minus_minus_minus = test_tup_arr_len_half_minus_minus_minus_minus - 1\n        var test_tup_arr_len_half_minus_minus_minus_minus_minus_plus = test_tup_arr_len_half_minus_minus_minus_minus_minus + 1\n        var test_tup_arr_len_half_minus_minus_minus_minus_minus\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7notzhpg.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7notzhpg.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7notzhpg.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7notzhpg.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7notzhpg.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray.map(_.asDigit)\n        var test_tup_arr_rev = test_tup_arr.reverse\n        var test_tup_arr_rev_str = test_tup_arr_rev.mkString(\"\")\n        var test_tup_arr_rev_str_int = test_tup_arr_rev_str.toLong\n        if (test_tup_arr_rev_str_int == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzro__6_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzro__6_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxzro__6_.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf9v0q6y.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf9v0q6y.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf9v0q6y.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var temp = test_tup\n        while (temp > 0) {\n            if (temp % 10 == K) return true\n            temp /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl8by_2sd.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl8by_2sd.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl8by_2sd.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_rev = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_rev_arr = new Array[Char](test_tup_str_arr_len_half_int)\n        var test_tup_str_arr_len_half_int_rev_arr_len = test_tup_str_arr_len_half_int_rev_arr.length\n        var test_tup_str_arr_len_half_int_rev_arr_len_rev = test_tup_str_arr_len_half_int_rev_arr_len - 1\n        var test_tup_str_arr_len_half_int_rev_arr_len_rev_int = test_tup_str_arr_len_half_int_rev_arr_len_rev.toInt\n        var test_tup_str_arr_len_half_int_rev_arr_len_rev_int_rev = test_tup_str_arr_len_half_int_rev_arr_len_rev_int - 1\n        var test_tup_str_arr_len_half_int_rev_arr_len_rev_int_rev_arr = new Array[Char](test_tup_str_arr_len_half_int_rev_arr_len_rev_int)\n        var test_tup_str_arr_len_half_int_rev_arr_len_rev_int\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvy_np9ds.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy_np9ds.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy_np9ds.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy_np9ds.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy_np9ds.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var tup : Long = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevx5j84n.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevx5j84n.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevx5j84n.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        var sum = 0\n        for (i <- 0 until test_tup_str.length) {\n            sum += pow(test_tup_str(i).asDigit, 2).toInt\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9erawcy3.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9erawcy3.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9erawcy3.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 until test_tup.toString.length) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) flag = true\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr27z9e4f.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr27z9e4f.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr27z9e4f.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 until test_tup.toString.length) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuurv57zu.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuurv57zu.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuurv57zu.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpffdmji3i.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpffdmji3i.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpffdmji3i.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup != 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var i = 0\n        var flag = false\n        while (i < test_tup_str_arr_len) {\n            if (test_tup_str_arr(i) == K.toString.charAt(0)) {\n                flag = true\n                break\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpke1_taqb.scala:15:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke1_taqb.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke1_taqb.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpke1_taqb.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugmsuika.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 until test_tup.toString.length) {\n            if (test_tup.toString.charAt(i).asDigit == K) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp51qvtwp4.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp51qvtwp4.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp51qvtwp4.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_int = test_tup_arr.map(x => x.toInt - 48)\n        var test_tup_arr_int_sum = test_tup_arr_int.sum\n        if (test_tup_arr_int_sum == K) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvcbhqmu.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvcbhqmu.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvcbhqmu.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        for (i <- 0 until test_tup_str.length) {\n            if (test_tup_str(i) == K.toString()(0)) return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3mrrrou.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3mrrrou.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3mrrrou.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup = test_tup\n        var k = K\n        while (tup > 0) {\n            if (tup % 10 == k) return true\n            tup /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb1etkey.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb1etkey.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb1etkey.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var sum = 0\n        for (i <- 0 to test_tup_arr.length - 1) {\n            sum += pow(test_tup_arr(i).toString.toInt, 2).toInt\n        }\n        if (sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgaprhwgf.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgaprhwgf.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgaprhwgf.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_plus = test_tup_str_arr_len_half + 1\n        var test_tup_str_arr_len_half_minus = test_tup_str_arr_len_half - 1\n        var test_tup_str_arr_len_half_plus_minus = test_tup_str_arr_len_half_plus - 1\n        var test_tup_str_arr_len_half_minus_plus = test_tup_str_arr_len_half_minus + 1\n        var test_tup_str_arr_len_half_plus_minus_plus = test_tup_str_arr_len_half_plus_minus + 1\n        var test_tup_str_arr_len_half_minus_plus_minus = test_tup_str_arr_len_half_minus_plus - 1\n        var test_tup_str_arr_len_half_plus_minus_plus_minus = test_tup_str_arr_len_half_plus_minus_plus - 1\n        var test_tup_str_arr_len_half_minus_plus_minus_plus = test_tup_str_arr_len_half_minus_plus_minus + 1\n        var test_tup_str_arr_len_half_plus_minus_plus_minus_plus = test_tup_str_arr_len_half_plus_minus_plus_minus + 1\n        var test_tup_str_arr_len_half_minus_plus_minus_plus_minus = test_tup_str_arr_len_half_minus_plus_minus_plus - 1\n\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph2eglpxx.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph2eglpxx.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph2eglpxx.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph2eglpxx.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup != 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122580,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62fz_8lq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62fz_8lq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62fz_8lq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_minus_1 = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_plus_1 = test_tup_str_arr_len_half_int + 1\n        var test_tup_str_arr_len_half_int_plus_2 = test_tup_str_arr_len_half_int + 2\n        var test_tup_str_arr_len_half_int_plus_3 = test_tup_str_arr_len_half_int + 3\n        var test_tup_str_arr_len_half_int_plus_4 = test_tup_str_arr_len_half_int + 4\n        var test_tup_str_arr_len_half_int_plus_5 = test_tup_str_arr_len_half_int + 5\n        var test_tup_str_arr_len_half_int_plus_6 = test_tup_str_arr_len_half_int + 6\n        var test_tup_str_arr_len_half_int_plus_7 = test_tup_str_arr_len_half_int + 7\n        var test_tup_str_arr_len_half_int_plus_8 = test_tup_str_arr_len_half_int + 8\n        var test_tup_str_arr_len_half_int_plus_9 = test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_plus_one = test_tup_str_arr_len_half + 1\n        var test_tup_str_arr_len_half_minus_one = test_tup_str_arr_len_half - 1\n        var test_tup_str_arr_len_half_minus_two = test_tup_str_arr_len_half - 2\n        var test_tup_str_arr_len_half_minus_three = test_tup_str_arr_len_half - 3\n        var test_tup_str_arr_len_half_minus_four = test_tup_str_arr_len_half - 4\n        var test_tup_str_arr_len_half_minus_five = test_tup_str_arr_len_half - 5\n        var test_tup_str_arr_len_half_minus_six = test_tup_str_arr_len_half - 6\n        var test_tup_str_arr_len_half_minus_seven = test_tup_str_arr_len_half - 7\n        var test_tup_str_arr_len_half_minus_eight = test_tup_str_arr_len_half - 8\n        var test_tup_str_arr_len_half_minus_nine = test_tup_str_arr_len_half - 9\n        var test_tup_str_arr_len_half_minus_ten = test_tup_str_arr_len_half - 10\n        var test_tup_str_arr_len_half_minus_eleven = test_tup_str\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var temp = test_tup\n        while(temp > 0) {\n            if(temp % 10 == K) {\n                flag = true\n                temp = 0\n            }\n            else {\n                temp /= 10\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7h0jftp.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7h0jftp.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7h0jftp.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup != 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_h5j7bj.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqywbbkfy.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqywbbkfy.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqywbbkfy.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 until test_tup.toString.length) {\n            if (test_tup.toString.charAt(i).toString.toInt == K) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnyo43we3.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnyo43we3.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnyo43we3.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        val tup_list = List(test_tup)\n        for (i <- tup_list) {\n            if (i == K) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg5mwk9q.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg5mwk9q.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg5mwk9q.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup = test_tup\n        while (tup > 0) {\n            if (tup % 10 == K) return true\n            tup /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzz2epu5d.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var test_tup_copy = test_tup\n        while (test_tup_copy > 0) {\n            sum += test_tup_copy % 10\n            test_tup_copy /= 10\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_xx3bcav.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_xx3bcav.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_xx3bcav.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_len = test_tup_str.length\n        var i = 0\n        while (i < test_tup_len) {\n            if (test_tup_str(i) == K.toString()(0)) {\n                return true\n            }\n            i += 1\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2dgyk_8c.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2dgyk_8c.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2dgyk_8c.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var K_arr = K.toString.toCharArray\n        var K_arr_len = K_arr.length\n        var i = 0\n        var j = 0\n        var flag = false\n        while(i < test_tup_arr_len) {\n            if(test_tup_arr(i) == K_arr(j)) {\n                j += 1\n                if(j == K_arr_len) {\n                    flag = true\n                    break\n                }\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx5n5dimf.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    break\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5n5dimf.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5n5dimf.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5n5dimf.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var temp : Long = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_jrho798.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_jrho798.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_jrho798.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var temp : Long = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpprkc6_6n.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpprkc6_6n.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpprkc6_6n.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fxjqobr.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fxjqobr.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fxjqobr.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i).toString.toInt == K) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122615,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpinvjox4s.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpinvjox4s.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpinvjox4s.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var temp = test_tup\n        while(temp != 0) {\n            if(temp % 10 == K) {\n                flag = true\n                return flag\n            }\n            temp /= 10\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtgimbly.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtgimbly.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtgimbly.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        val tup_arr = test_tup.toString.toCharArray\n        for (i <- 0 to tup_arr.length - 1) {\n            if (tup_arr(i) == K.toString.toCharArray()(0)) {\n                flag = true\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122616,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0vp2fzz.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0vp2fzz.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0vp2fzz.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_len = test_tup_str.length\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_sum = 0\n        for (i <- 0 until test_tup_arr_len) {\n            test_tup_arr_sum += test_tup_arr(i).toInt - 48\n        }\n        if (test_tup_arr_sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122624,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppvq2yx33.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppvq2yx33.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppvq2yx33.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var i = 1\n        while(i <= test_tup) {\n            if(test_tup % i == 0) {\n                if(i == K) {\n                    flag = true\n                }\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122625,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw8t8o2wq.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw8t8o2wq.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw8t8o2wq.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        for (i <- 0 until test_tup.toString.length) {\n            sum += pow(test_tup.toString.charAt(i).asDigit, 2).toLong\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqnsads3y.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqnsads3y.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqnsads3y.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_minus_one = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_plus_one = test_tup_str_arr_len_half_int + 1\n        var test_tup_str_arr_len_half_int_plus_two = test_tup_str_arr_len_half_int + 2\n        var test_tup_str_arr_len_half_int_minus_two = test_tup_str_arr_len_half_int - 2\n        var test_tup_str_arr_len_half_int_plus_three = test_tup_str_arr_len_half_int + 3\n        var test_tup_str_arr_len_half_int_minus_three = test_tup_str_arr_len_half_int - 3\n        var test_tup_str_arr_len_half_int_plus_four = test_tup_str_arr_len_half_int + 4\n        var test_tup_str_arr_len_half_int_minus_four = test_tup_str_arr_len_half_int - 4\n        var test_tup_str_arr_len_half_int_plus_five = test_tup_str_arr_len_half_int + 5\n        var test_tup_str_arr_len_half_int_minus_five = test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj4letcci.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj4letcci.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj4letcci.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj4letcci.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var test_tup_copy = test_tup\n        while(test_tup_copy > 0) {\n            if(test_tup_copy % 10 == K) {\n                flag = true\n                return flag\n            }\n            test_tup_copy /= 10\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwwh_ces.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwwh_ces.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwwh_ces.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- test_tup.toString) {\n            if (i.toString.toLong == K) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122627,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1s2e_lq.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1s2e_lq.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1s2e_lq.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_len = test_tup_str.length\n        var test_tup_arr = test_tup_str.split(\"\")\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_int = new Array[Int](test_tup_arr_len)\n        for (i <- 0 until test_tup_arr_len) {\n            test_tup_arr_int(i) = test_tup_arr(i).toInt\n        }\n        var test_tup_arr_int_sum = test_tup_arr_int.sum\n        if (test_tup_arr_int_sum == K) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpup9lhh8x.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpup9lhh8x.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpup9lhh8x.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var sum = 0\n        for (i <- 0 until test_tup_arr.length) {\n            sum += pow(test_tup_arr(i).toInt - '0'.toInt, 2).toInt\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4sj5gcl3.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4sj5gcl3.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4sj5gcl3.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo12hyrql.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_arr = test_tup_str.toCharArray\n        for (i <- 0 until test_tup_str_len) {\n            if (test_tup_str_arr(i) == K.toString.charAt(0)) {\n                return true\n            }\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bxu65o5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bxu65o5.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bxu65o5.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var temp : Long = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbnes36y.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbnes36y.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbnes36y.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var temp = test_tup\n        while(temp > 0) {\n            if(temp % 10 == K) {\n                flag = true\n                return flag\n            }\n            temp /= 10\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3s32p7ep.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3s32p7ep.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3s32p7ep.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var temp = test_tup\n        while(temp > 0) {\n            if(temp % 10 == K) {\n                flag = true\n                return flag\n            }\n            temp = temp / 10\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwh7vrdg8.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwh7vrdg8.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwh7vrdg8.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_rev = test_tup_str_arr.reverse\n        var test_tup_str_arr_rev_str = test_tup_str_arr_rev.mkString\n        var test_tup_str_arr_rev_str_int = test_tup_str_arr_rev_str.toInt\n        var test_tup_str_arr_rev_str_int_long = test_tup_str_arr_rev_str_int.toLong\n        var test_tup_str_arr_rev_str_int_long_str = test_tup_str_arr_rev_str_int_long.toString\n        var test_tup_str_arr_rev_str_int_long_str_len = test_tup_str_arr_rev_str_int_long_str.length\n        var test_tup_str_arr_rev_str_int_long_str_arr = test_tup_str_arr_rev_str_int_long_str.toCharArray\n        var test_tup_str_arr_rev_str_int_long_str_arr_rev = test_tup_str_arr_rev_str_int_long_str_arr.reverse\n        var test_tup_str_arr_rev_str_int_long_str_arr_rev_str = test_tup_str_arr_rev_str_int_long_str_arr_rev.mkString\n        var test_tup_str_arr_rev_str_int_long_str_arr_rev_str_int = test_tup_str_arr_rev_str_int_long_str_arr_rev_str.toInt\n        var test_tup_str_arr_rev_str_int_long_str_arr_rev_str_int_long = test_tup_str_arr_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcmz6tuik.scala:19:73 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup_str_arr_rev_str_int_long_str_arr_rev_str_int_long\u001b[0m = test_tup_str_arr_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Not found: test_tup_str_arr_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmz6tuik.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmz6tuik.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmz6tuik.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmz6tuik.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var K_arr = K.toString.toCharArray\n        var K_arr_len = K_arr.length\n        var i = 0\n        var j = 0\n        var flag = false\n        while(i < test_tup_arr_len) {\n            if(test_tup_arr(i) == K_arr(j)) {\n                j += 1\n                if(j == K_arr_len) {\n                    flag = true\n                    break\n                }\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdjcuva1i.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                    break\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjcuva1i.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjcuva1i.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjcuva1i.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq18r_6vc.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq18r_6vc.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq18r_6vc.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122567,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var result = false\n        if (test_tup == K) {\n            result = true\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c61sw0t.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c61sw0t.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c61sw0t.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        for (i <- 0 until test_tup_str.length) {\n            if (test_tup_str(i) == '0') {\n                return false\n            }\n        }\n        var sum = 0L\n        for (i <- 0 until test_tup_str.length) {\n            sum += (test_tup_str(i) - '0')\n        }\n        if (sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0jqf6wc.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0jqf6wc.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg0jqf6wc.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_arr = test_tup_str.toCharArray\n        var sum = 0L\n        for (i <- 0 until test_tup_str_len) {\n            sum += pow(test_tup_str_arr(i).toString.toInt, test_tup_str_len).toLong\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122629,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvt8shr8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvt8shr8.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvt8shr8.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_sum = 0L\n        var tup_prod = 1L\n        var tup_str = test_tup.toString\n        for (i <- 0 until tup_str.length) {\n            tup_sum += tup_str(i).toString.toInt\n            tup_prod *= tup_str(i).toString.toInt\n        }\n        if (tup_sum == K || tup_prod == K) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctyzsx6w.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctyzsx6w.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctyzsx6w.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_sum = 0L\n        for (i <- 1 to test_tup.toString.length) {\n            tup_sum += pow(test_tup.toString.charAt(i - 1).asDigit, i).toLong\n        }\n        if (tup_sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdtg6ak9p.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdtg6ak9p.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdtg6ak9p.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var K_arr = K.toString.toCharArray\n        var K_arr_len = K_arr.length\n        var i = 0\n        var j = 0\n        var flag = false\n        while(i < test_tup_arr_len && j < K_arr_len) {\n            if(test_tup_arr(i) == K_arr(j)) {\n                flag = true\n                j += 1\n            }\n            i += 1\n        }\n        if(flag && j == K_arr_len) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjxmjb33b.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjxmjb33b.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjxmjb33b.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_floor = floor(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_ceil = ceil(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_floor_arr = test_tup_str_arr.slice(0, test_tup_str_arr_len_half_floor)\n        var test_tup_str_arr_len_half_ceil_arr = test_tup_str_arr.slice(test_tup_str_arr_len_half_floor, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_floor_arr_str = test_tup_str_arr_len_half_floor_arr.mkString\n        var test_tup_str_arr_len_half_ceil_arr_str = test_tup_str_arr_len_half_ceil_arr.mkString\n        var test_tup_str_arr_len_half_floor_arr_str_num = test_tup_str_arr_len_half_floor_arr_str.toLong\n        var test_tup_str_arr_len_half_ceil_arr_str_num = test_tup_str_arr_len_half_ceil_arr_str.toLong\n        var test_tup_str_arr_len_half_floor_arr_str_num_pow = pow(test_tup_str_arr_len_half_floor_arr_str\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj2pjn11_.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2pjn11_.scala:19:66 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup_str_arr_len_half_floor_arr_str_num_pow\u001b[0m = pow(test_tup_str_arr_len_half_floor_arr_str\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    (test_tup_str_arr_len_half_floor_arr_str : String)\n\u001b[31m   |\u001b[0m            Required: Double\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2pjn11_.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2pjn11_.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2pjn11_.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_arr = test_tup.toString.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_len_half = test_tup_arr_len / 2\n        var test_tup_arr_len_half_plus_one = test_tup_arr_len_half + 1\n        var test_tup_arr_len_half_minus_one = test_tup_arr_len_half - 1\n        var test_tup_arr_len_half_plus_one_minus_one = test_tup_arr_len_half_plus_one - 1\n        var test_tup_arr_len_half_minus_one_plus_one = test_tup_arr_len_half_minus_one + 1\n        var test_tup_arr_len_half_plus_one_minus_two = test_tup_arr_len_half_plus_one - 2\n        var test_tup_arr_len_half_minus_one_plus_two = test_tup_arr_len_half_minus_one + 2\n        var test_tup_arr_len_half_plus_one_minus_three = test_tup_arr_len_half_plus_one - 3\n        var test_tup_arr_len_half_minus_one_plus_three = test_tup_arr_len_half_minus_one + 3\n        var test_tup_arr_len_half_plus_one_minus_four = test_tup_arr_len_half_plus_one - 4\n        var test_tup_arr_len_half_minus_one_plus_four = test_tup_arr_len_half_minus_one + 4\n        var test_tup_arr_len_half_plus_one_minus_five = test_tup_arr_len_half_plus_one - 5\n        var test_tup_arr_len_half_minus_one_plus_five = test_tup_arr_len_half_minus_one + 5\n        var test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzkvbxkma.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzkvbxkma.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzkvbxkma.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzkvbxkma.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzkvbxkma.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122567,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwawaipjy.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_arr = test_tup_str.toCharArray\n        val test_tup_str_arr_rev = test_tup_str_arr.reverse\n        var test_tup_str_arr_rev_str = \"\"\n        for (i <- 0 until test_tup_str_len) {\n            test_tup_str_arr_rev_str += test_tup_str_arr_rev(i)\n        }\n        val test_tup_str_arr_rev_str_int = test_tup_str_arr_rev_str.toLong\n        if (test_tup_str_arr_rev_str_int == K) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsx1l5nwm.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsx1l5nwm.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsx1l5nwm.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        for (i <- 0 to test_tup.toString.length - 1) {\n            if (test_tup.toString.charAt(i) == K.toString.charAt(0)) {\n                flag = true\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptg8de2i4.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv8hszh8.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var tup = test_tup\n        while (tup > 0) {\n            sum += tup % 10\n            tup /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122584,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspzr635_.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val tup_list = List(test_tup)\n        val tup_list_set = tup_list.toSet\n        val tup_list_set_list = tup_list_set.toList\n        val tup_list_set_list_sorted = tup_list_set_list.sorted\n        val tup_list_set_list_sorted_length = tup_list_set_list_sorted.length\n        val tup_list_set_list_sorted_length_minus_1 = tup_list_set_list_sorted_length - 1\n        val tup_list_set_list_sorted_length_minus_1_index = tup_list_set_list_sorted_length_minus_1 - 1\n        val tup_list_set_list_sorted_length_minus_1_index_value = tup_list_set_list_sorted(tup_list_set_list_sorted_length_minus_1_index)\n        val tup_list_set_list_sorted_length_minus_1_index_value_plus_1 = tup_list_set_list_sorted_length_minus_1_index_value + 1\n        val tup_list_set_list_sorted_length_minus_1_index_value_plus_1_times_2 = tup_list_set_list_sorted_length_minus_1_index_value_plus_1 * 2\n        if (tup_list_set_list_sorted_length_minus_1_index_value_plus_1_times_2 == K) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnm_o9erh.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnm_o9erh.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnm_o9erh.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_str = test_tup.toString\n        val test_arr = test_str.toCharArray\n        val test_arr_int = test_arr.map(x => x.toInt - 48)\n        val sum = test_arr_int.sum\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c84ztj0.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c84ztj0.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c84ztj0.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val tup_list = List(test_tup)\n        val tup_set = tup_list.toSet\n        val tup_set_size = tup_set.size\n        if (tup_set_size == 1) {\n            return true\n        }\n        else {\n            val tup_list_sorted = tup_list.sorted\n            val tup_list_sorted_size = tup_list_sorted.size\n            val tup_list_sorted_max = tup_list_sorted(tup_list_sorted_size - 1)\n            val tup_list_sorted_min = tup_list_sorted(0)\n            val tup_list_sorted_max_min = tup_list_sorted_max - tup_list_sorted_min\n            if (tup_list_sorted_max_min == K) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxw4vsdj.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxw4vsdj.scala:28:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxw4vsdj.scala:29:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup % K == 0) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnptab2su.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnptab2su.scala:13:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnptab2su.scala:14:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_arr = test_tup.toString.toCharArray\n        val test_tup_arr_len = test_tup_arr.length\n        for (i <- 0 until test_tup_arr_len) {\n            if (test_tup_arr(i) == K.toString.toCharArray()(0)) {\n                return true\n            }\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaih1mn67.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaih1mn67.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaih1mn67.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if (test_tup == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbs6wnd7.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        for (i <- 0 until test_tup.toString.length) {\n            sum += pow(test_tup.toString.charAt(i).asDigit, 2).toLong\n        }\n        if (sum == K) return true\n        else if (sum < K) return false\n        else return checkK(sum, K)\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8flrpnyw.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8flrpnyw.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8flrpnyw.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_arr = test_tup_str.toCharArray\n        var test_tup_arr_len = test_tup_arr.length\n        var test_tup_arr_sum = 0\n        for (i <- 0 until test_tup_arr_len) {\n            test_tup_arr_sum += test_tup_arr(i).toInt - 48\n        }\n        if (test_tup_arr_sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfjqa7aw.scala:19:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfjqa7aw.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfjqa7aw.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_length = test_tup_str_arr.length\n        var test_tup_str_arr_length_half = test_tup_str_arr_length / 2\n        var test_tup_str_arr_length_half_arr = test_tup_str_arr.slice(0, test_tup_str_arr_length_half)\n        var test_tup_str_arr_length_half_arr_rev = test_tup_str_arr_length_half_arr.reverse\n        var test_tup_str_arr_length_half_arr_rev_str = test_tup_str_arr_length_half_arr_rev.mkString\n        var test_tup_str_arr_length_half_arr_rev_str_long = test_tup_str_arr_length_half_arr_rev_str.toLong\n        var test_tup_str_arr_length_half_arr_rev_str_long_sum = test_tup_str_arr_length_half_arr_rev_str_long + test_tup\n        if (test_tup_str_arr_length_half_arr_rev_str_long_sum == K) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9763czlw.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9763czlw.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9763czlw.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122583,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c7ioqz1.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c7ioqz1.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7c7ioqz1.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup = test_tup\n        while (tup > 0) {\n            if (tup % 10 == K) {\n                return true\n            }\n            tup /= 10\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1xs5br4w.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1xs5br4w.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1xs5br4w.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var i = 0\n        var j = 0\n        var k = 0\n        var flag = false\n        while(i < test_tup_str_arr_len) {\n            j = i + 1\n            while(j < test_tup_str_arr_len) {\n                k = j + 1\n                while(k < test_tup_str_arr_len) {\n                    if(test_tup_str_arr(i) != '0' && test_tup_str_arr(j) != '0' && test_tup_str_arr(k) != '0') {\n                        var test_tup_str_arr_i = test_tup_str_arr(i).toString.toInt\n                        var test_tup_str_arr_j = test_tup_str_arr(j).toString.toInt\n                        var test_tup_str_arr_k = test_tup_str_arr(k).toString.toInt\n                        if(test_tup_str_arr_i + test_tup_str_arr_j + test_tup_str_arr_k == K) {\n                            flag = true\n                        }\n                    }\n                    k += 1\n                }\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcyohcde.scala:36:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcyohcde.scala:37:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcyohcde.scala:38:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        if(test_tup % K == 0) return true\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp485yxl9i.scala:10:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp485yxl9i.scala:11:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp485yxl9i.scala:12:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_plus_one = test_tup_str_arr_len_half + 1\n        var test_tup_str_arr_len_half_minus_one = test_tup_str_arr_len_half - 1\n        var test_tup_str_arr_len_half_minus_two = test_tup_str_arr_len_half - 2\n        var test_tup_str_arr_len_half_minus_three = test_tup_str_arr_len_half - 3\n        var test_tup_str_arr_len_half_minus_four = test_tup_str_arr_len_half - 4\n        var test_tup_str_arr_len_half_minus_five = test_tup_str_arr_len_half - 5\n        var test_tup_str_arr_len_half_minus_six = test_tup_str_arr_len_half - 6\n        var test_tup_str_arr_len_half_minus_seven = test_tup_str_arr_len_half - 7\n        var test_tup_str_arr_len_half_minus_eight = test_tup_str_arr_len_half - 8\n        var test_tup_str_arr_len_half_minus_nine = test_tup_str_arr_len_half - 9\n        var test_tup_str_arr_len_half_minus_ten = test_tup_str_arr_len_half - 10\n        var test_tup_str_arr_len_half_minus_eleven = test_tup_str\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqv3g4g88.scala:27:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        var i = 0\n        while (i < test_tup_str_len) {\n            if (test_tup_str(i) == K.toString()(0)) return true\n            i += 1\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122568,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zmupp1v.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zmupp1v.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zmupp1v.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_ceil = ceil(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_floor = floor(test_tup_str_arr_len_half).toInt\n        var test_tup_str_arr_len_half_ceil_arr = test_tup_str_arr.slice(0, test_tup_str_arr_len_half_ceil)\n        var test_tup_str_arr_len_half_floor_arr = test_tup_str_arr.slice(test_tup_str_arr_len_half_floor, test_tup_str_arr_len)\n        var test_tup_str_arr_len_half_ceil_arr_str = test_tup_str_arr_len_half_ceil_arr.mkString(\"\")\n        var test_tup_str_arr_len_half_floor_arr_str = test_tup_str_arr_len_half_floor_arr.mkString(\"\")\n        var test_tup_str_arr_len_half_ceil_arr_str_int = test_tup_str_arr_len_half_ceil_arr_str.toInt\n        var test_tup_str_arr_len_half_floor_arr_str_int = test_tup_str_arr_len_half_floor_arr_str.toInt\n        var test_tup_str_arr_len_half_ceil_arr_str_int_sq = test_tup_str_arr_len_half_ceil_arr_str_int * test_tup_str_arr_len_half_\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpha5aefhb.scala:18:105 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup_str_arr_len_half_ceil_arr_str_int_sq\u001b[0m = test_tup_str_arr_len_half_ceil_arr_str_int * test_tup_str_arr_len_half_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Not found: test_tup_str_arr_len_half_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha5aefhb.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha5aefhb.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha5aefhb.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpha5aefhb.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(check",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum : Long = 0\n        var temp : Long = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        if (sum == K) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbnes36y.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbnes36y.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbnes36y.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var flag = false\n        var temp = test_tup\n        while(temp > 0) {\n            if(temp % 10 == K) {\n                flag = true\n                temp = 0\n            }\n            else {\n                temp /= 10\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7h0jftp.scala:20:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7h0jftp.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7h0jftp.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return (sum == K)\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0m2fo1s_.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0m2fo1s_.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0m2fo1s_.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp > 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1665509946,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71ww1y8g.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var tup_str = test_tup.toString\n        var tup_arr = tup_str.toCharArray\n        var tup_arr_int = tup_arr.map(_.toString.toInt)\n        var sum = 0\n        for (i <- 0 until tup_arr_int.length) {\n            sum += tup_arr_int(i)\n        }\n        if (sum == K) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtzv96_4.scala:21:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtzv96_4.scala:22:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtzv96_4.scala:23:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var sum = 0L\n        var temp = test_tup\n        while (temp != 0) {\n            sum += temp % 10\n            temp /= 10\n        }\n        return sum == K\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fw2siu5.scala:15:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fw2siu5.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fw2siu5.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        var test_tup_str = test_tup.toString\n        var test_tup_str_len = test_tup_str.length\n        var test_tup_str_arr = test_tup_str.toCharArray\n        var test_tup_str_arr_len = test_tup_str_arr.length\n        var test_tup_str_arr_len_half = test_tup_str_arr_len / 2\n        var test_tup_str_arr_len_half_int = test_tup_str_arr_len_half.toInt\n        var test_tup_str_arr_len_half_int_minus_1 = test_tup_str_arr_len_half_int - 1\n        var test_tup_str_arr_len_half_int_plus_1 = test_tup_str_arr_len_half_int + 1\n        var test_tup_str_arr_len_half_int_plus_2 = test_tup_str_arr_len_half_int + 2\n        var test_tup_str_arr_len_half_int_plus_3 = test_tup_str_arr_len_half_int + 3\n        var test_tup_str_arr_len_half_int_plus_4 = test_tup_str_arr_len_half_int + 4\n        var test_tup_str_arr_len_half_int_plus_5 = test_tup_str_arr_len_half_int + 5\n        var test_tup_str_arr_len_half_int_plus_6 = test_tup_str_arr_len_half_int + 6\n        var test_tup_str_arr_len_half_int_plus_7 = test_tup_str_arr_len_half_int + 7\n        var test_tup_str_arr_len_half_int_plus_8 = test_tup_str_arr_len_half_int + 8\n        var test_tup_str_arr_len_half_int_plus_9 = test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:24:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:25:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5gi44en3.scala:26:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given tuples contain the k or not.\n    def checkK(test_tup : Long, K : Long) : Boolean = {\n        val test_tup_str = test_tup.toString\n        val test_tup_str_len = test_tup_str.length\n        val test_tup_str_arr = test_tup_str.toCharArray\n        var sum = 0L\n        for (i <- 0 until test_tup_str_len) {\n            sum += pow(test_tup_str_arr(i).asDigit, test_tup_str_len).toLong\n        }\n        if (sum == K) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkK((10l, 4l, 5l, 6l, 8l), (6l)) == (true));\n    assert(checkK((1l, 2l, 3l, 4l, 5l, 6l), (7l)) == (false));\n    assert(checkK((7l, 8l, 9l, 44l, 11l, 12l), (11l)) == (true));\n    }\n\n}\n",
      "timestamp": 1666122640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphc_xrinb.scala:16:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkK((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m6l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphc_xrinb.scala:17:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkK((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m7l\u001b[0m)) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphc_xrinb.scala:18:18 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkK((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m44l\u001b[0m, \u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m11l\u001b[0m)) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Found:    (Long, Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
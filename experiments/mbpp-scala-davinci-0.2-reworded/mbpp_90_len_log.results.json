{
  "name": "mbpp_90_len_log",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max: Long = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > len) {\n                len = list1(i).length\n            }\n        }\n        return len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > len) {\n                len = list1(i).length\n            }\n        }\n        len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for (i <- list1) {\n            if (i.length > len) {\n                len = i.length\n            }\n        }\n        len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) max = i.length\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max)\n                max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for (i <- list1) {\n            if (i.length > len) {\n                len = i.length\n            }\n        }\n        return len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n      var max = 0\n      for (i <- 0 to list1.size - 1) {\n        if (list1(i).size > max) {\n          max = list1(i).size\n        }\n      }\n      max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length-1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length-1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1){\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var l = 0\n        for(i <- list1) {\n            if(i.length() > l) {\n                l = i.length()\n            }\n        }\n        return l\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length-1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.foldLeft(0L)((x,y) => if (x > y.length) x else y.length)\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(_.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var maxLen = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > maxLen) {\n                maxLen = list1(i).length\n            }\n        }\n        maxLen\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length-1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length-1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1){\n            if(list1(i).length > max){\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length-1) {\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > len) {\n                len = list1(i).length\n            }\n        }\n        return len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > max)\n                max = list1(i).length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for(i <- 0 until list1.length) {\n            if(list1(i).length > len) {\n                len = list1(i).length\n            }\n        }\n        len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        val list2 = list1.map(x => x.length)\n        list2.max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) max = i.length\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x => x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1)\n            if(i.length > max)\n                max = i.length\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var len = 0\n        for (i <- list1) {\n            if (i.length > len) {\n                len = i.length\n            }\n        }\n        return len\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max)\n                max = i.length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) max = i.length\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- 0 to list1.length - 1) {\n            if(list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for(i <- list1) {\n            if(i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(_.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- list1) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max = 0\n        for (i <- 0 to list1.length - 1) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1665509746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        list1.map(x=>x.length).max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124285,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest word.\n    def lenLog(list1 : List[String]) : Long = {\n        var max : Long = 0\n        for (i <- 0 until list1.length) {\n            if (list1(i).length > max) {\n                max = list1(i).length\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(lenLog((List[String](\"python\", \"PHP\", \"bigdata\"))) == (7l));\n    assert(lenLog((List[String](\"a\", \"ab\", \"abc\"))) == (3l));\n    assert(lenLog((List[String](\"small\", \"big\", \"tall\"))) == (5l));\n    }\n\n}\n",
      "timestamp": 1666124281,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
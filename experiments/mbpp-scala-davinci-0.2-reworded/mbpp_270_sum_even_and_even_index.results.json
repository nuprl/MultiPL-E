{
  "name": "mbpp_270_sum_even_and_even_index",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_270_sum_even_and_even_index.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0) {\n                if (arr(i) % 2 == 0) {\n                    sum += arr(i)\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        return arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4k1omoa5.scala:10)\n\tat Problem.main(tmp4k1omoa5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4k1omoa5.scala:10)\n\tat Problem.main(tmp4k1omoa5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to arr.length - 1) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4k1omoa5.scala:10)\n\tat Problem.main(tmp4k1omoa5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        return arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length if i % 2 == 0 && arr(i) % 2 == 0) {\n            sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for(i <- 0 until arr.length) {\n            if(i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4k1omoa5.scala:10)\n\tat Problem.main(tmp4k1omoa5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        return arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4k1omoa5.scala:10)\n\tat Problem.main(tmp4k1omoa5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- arr.indices) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum : Long = 0\n        for(i <- 0 until arr.length) {\n            if(i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0) {\n                if (arr(i) % 2 == 0) {\n                    sum += arr(i)\n                }\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to arr.length - 1) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Your code here\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4k1omoa5.scala:10)\n\tat Problem.main(tmp4k1omoa5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(x => x._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) sum += arr(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510073,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        arr.zipWithIndex.filter(x => x._2 % 2 == 0 && x._1 % 2 == 0).map(_._1).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1665510072,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of even numbers at even positions of a list.\n    def sumEvenAndEvenIndex(arr : List[Long]) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- 0 until arr.length) {\n            if (i % 2 == 0 && arr(i) % 2 == 0) {\n                sum += arr(i)\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong, 18l.toLong, 8l.toLong))) == (30l));\n    assert(sumEvenAndEvenIndex((List[Long](3l.toLong, 20l.toLong, 17l.toLong, 9l.toLong, 2l.toLong, 10l.toLong, 18l.toLong, 13l.toLong, 6l.toLong, 18l.toLong))) == (26l));\n    assert(sumEvenAndEvenIndex((List[Long](5l.toLong, 6l.toLong, 12l.toLong, 1l.toLong))) == (12l));\n    }\n\n}\n",
      "timestamp": 1666122402,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_444_trim_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) result += (test_list(i) - K).toString\n            else result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiheeowfh.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiheeowfh.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiheeowfh.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) result += test_list(i) + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqd2ruor.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqd2ruor.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqd2ruor.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybuosdww.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybuosdww.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybuosdww.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i)\n            }\n        }\n        return result.mkString(\",\")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprc49atwz.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprc49atwz.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprc49atwz.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmnq2fuc.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmnq2fuc.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmnq2fuc.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (K + \" \")\n            } else {\n                result += (test_list(i) + \" \")\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5q4_map.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5q4_map.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5q4_map.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var trimmed_tuple = tuple - K\n            if (trimmed_tuple < 0) trimmed_tuple = 0\n            result += trimmed_tuple + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjylkq6gz.scala:16:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjylkq6gz.scala:16:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjylkq6gz.scala:16:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result = result :+ i - K\n            } else if (i < K) {\n                result = result :+ K - i\n            } else {\n                result = result :+ 0\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqyypy322.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqyypy322.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqyypy322.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsq_plvy1.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsq_plvy1.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsq_plvy1.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) {\n                result += (test_list(i) - K).toString\n            } else {\n                result += (test_list(i) - K).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5rjj0m2p.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5rjj0m2p.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5rjj0m2p.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p2joh92.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p2joh92.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7p2joh92.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqvvqkzvy.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqvvqkzvy.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqvvqkzvy.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvv9jzxu4.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvv9jzxu4.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvv9jzxu4.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var tuple_str = tuple.toString\n            if (tuple_str.length > K) {\n                result += tuple_str.substring(0, K.toInt) + \" \"\n            } else {\n                result += tuple_str + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2adejg_z.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2adejg_z.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2adejg_z.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => (x - K).max(0))\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpptt56r2i.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpptt56r2i.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpptt56r2i.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpya1g39ah.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpya1g39ah.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpya1g39ah.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (x > K) result += (x - K).toString + \" \"\n            else if (x < -K) result += (x + K).toString + \" \"\n            else result += \"0 \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_z7mce8.scala:16:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_z7mce8.scala:16:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_z7mce8.scala:16:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result = result :+ (i - K)\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdq732l7n.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdq732l7n.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdq732l7n.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5askz9g5.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5askz9g5.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5askz9g5.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) result += (i - K).toString + \" \"\n            else result += \"0 \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wnndqj5.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wnndqj5.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wnndqj5.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnain4oz.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnain4oz.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnain4oz.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) result += (test_list(i) - K).toString\n            else result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiheeowfh.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiheeowfh.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiheeowfh.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += (test_list(i) / pow(10, count - K)).toLong.toString\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppbh9i_ni.scala:26:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppbh9i_ni.scala:26:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppbh9i_ni.scala:26:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnain4oz.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnain4oz.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnnain4oz.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => (x - K).toString).mkString(\" \")\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                result += (temp - K).toString + \" \"\n            } else if (temp < K) {\n                result += (K - temp).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph9woloct.scala:20:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph9woloct.scala:20:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph9woloct.scala:20:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            result += max(0, test_list(i) - K)\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub3ketay.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub3ketay.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub3ketay.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        // Write your code here\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_1ui2v8.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_1ui2v8.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_1ui2v8.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) >= K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8iz_vt2s.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8iz_vt2s.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8iz_vt2s.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            result.append(test_list(i) - K)\n            if (i != test_list.length - 1) result.append(\" \")\n        }\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpovk7i3f8.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpovk7i3f8.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpovk7i3f8.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += (test_list(i) / pow(10, count - K)).toLong.toString\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptoj5x220.scala:26:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptoj5x220.scala:26:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptoj5x220.scala:26:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122969,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dhwwu0j.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dhwwu0j.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dhwwu0j.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result = result :+ test_list(i)\n            }\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122969,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpve2j80c1.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpve2j80c1.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpve2j80c1.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122969,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6vejrfuh.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6vejrfuh.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6vejrfuh.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) result.append(test_list(i) - K)\n            else result.append(test_list(i) - K + \" \")\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugajhpc8.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugajhpc8.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpugajhpc8.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result = result + (test_list(i) - K).toString + \" \"\n            } else {\n                result = result + \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprsl23m7r.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprsl23m7r.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprsl23m7r.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result += i - K\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbje03dgy.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbje03dgy.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbje03dgy.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            while (temp > K) {\n                temp = temp / K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122969,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmspxzjgy.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmspxzjgy.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmspxzjgy.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result_list : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) - K)\n        }\n        return result_list.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122968,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljzoe45l.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljzoe45l.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljzoe45l.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var tuple_list = new ListBuffer[Long]()\n            while (tuple != 0) {\n                tuple_list += tuple % K\n                tuple /= K\n            }\n            for (j <- tuple_list.length - 1 to 0 by -1) {\n                result += tuple_list(j)\n            }\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplypahev2.scala:22:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplypahev2.scala:22:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplypahev2.scala:22:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += (test_list(i) / pow(10, count - K)).toLong.toString\n            }\n            else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvqaljhz.scala:27:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvqaljhz.scala:27:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvqaljhz.scala:27:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            }\n            else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122968,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzl8dj_42.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzl8dj_42.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzl8dj_42.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxvodvevs.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxvodvevs.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxvodvevs.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_tdawku.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_tdawku.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_tdawku.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= K\n                count += 1\n            }\n            result += count + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cmqm7wj.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cmqm7wj.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cmqm7wj.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder()\n        for (i <- 0 until test_list.length) {\n            result.append(test_list(i) - K)\n            if (i != test_list.length - 1) result.append(\" \")\n        }\n        return result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbuno_7hw.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbuno_7hw.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbuno_7hw.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3278np8i.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3278np8i.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3278np8i.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.size) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c5fi4f6.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c5fi4f6.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3c5fi4f6.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result = result :+ (test_list(i) / pow(10, count - K).toLong)\n            } else {\n                result = result :+ test_list(i)\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73zq7k58.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73zq7k58.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73zq7k58.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i != test_list.length - 1) result += (test_list(i) - K) + \" \"\n            else result += (test_list(i) - K)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0evbvfpc.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0evbvfpc.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0evbvfpc.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < -K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbb3dxqpg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbb3dxqpg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbb3dxqpg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.substring(0, result.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122985,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohl4clyg.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohl4clyg.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpohl4clyg.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            } else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi8_958f2.scala:20:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi8_958f2.scala:20:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi8_958f2.scala:20:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < -K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplswsjhti.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplswsjhti.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplswsjhti.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk9vuyycw.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk9vuyycw.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk9vuyycw.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val tuple = test_list(i)\n            val trimmed_tuple = tuple - (tuple % K)\n            result += trimmed_tuple.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0gd09v3q.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0gd09v3q.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0gd09v3q.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => (x - K).toString).mkString(\" \")\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) <= K) {\n                result += test_list(i)\n            }\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq98o8ghw.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq98o8ghw.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq98o8ghw.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result_list = List[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result_list = result_list :+ i\n            }\n        }\n        return result_list.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6jt5og8.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6jt5og8.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6jt5og8.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            if (i > K) result = result :+ (i - K)\n            else if (i < -K) result = result :+ (i + K)\n            else result = result :+ 0\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpde1t7umk.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpde1t7umk.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpde1t7umk.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73t7jjbn.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73t7jjbn.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73t7jjbn.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprocnti77.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprocnti77.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprocnti77.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i != 0) result += \" \"\n            result += (test_list(i) - K).toString\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0x7wzzbu.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0x7wzzbu.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0x7wzzbu.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            while (temp > K) {\n                temp /= 10\n            }\n            result += temp.toString\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122985,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg95el7qe.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg95el7qe.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg95el7qe.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            var temp2 = test_list(i)\n            var temp3 = 0L\n            for (j <- 0 until count - K) {\n                temp3 = temp2 % 10\n                temp2 /= 10\n            }\n            result += temp3 + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmpjp_x0c.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until count - K) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Long\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmpjp_x0c.scala:25:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmpjp_x0c.scala:25:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-exp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm6q6nn2.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm6q6nn2.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxm6q6nn2.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (K.toString + \" \")\n            } else {\n                result += (test_list(i).toString + \" \")\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_pf3qvxl.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_pf3qvxl.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_pf3qvxl.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp = test_list(i)\n                var count = 0\n                while (count < K) {\n                    temp /= 10\n                    count += 1\n                }\n                result.append(temp % 10)\n            }\n            else {\n                result.append(test_list(i))\n            }\n            if (i != test_list.length - 1) result.append(\",\")\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h2wihz0.scala:31:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h2wihz0.scala:31:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h2wihz0.scala:31:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result.append(test_list(i).toString.substring(0, count - K.toInt))\n            } else {\n                result.append(test_list(i))\n            }\n            if (i != test_list.length - 1) result.append(\" \")\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82sw5itq.scala:24:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82sw5itq.scala:24:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82sw5itq.scala:24:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else if (test_list(i) < -K) {\n                result += (test_list(i) + K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmiq5xipn.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmiq5xipn.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmiq5xipn.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            }\n            else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbr0wtfyp.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbr0wtfyp.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbr0wtfyp.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = if (x < K) 0 else x - K\n            result += y.toString + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9vqimarn.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9vqimarn.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9vqimarn.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var temp_result = \"\"\n            while (temp > 0) {\n                temp_result = (temp % 10).toString + temp_result\n                temp /= 10\n            }\n            if (temp_result.length > K) {\n                temp_result = temp_result.substring(0, temp_result.length - K.toInt)\n            }\n            result += temp_result + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v5qj_3l.scala:22:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v5qj_3l.scala:22:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v5qj_3l.scala:22:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            }\n            else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122968,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i != test_list.length - 1) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += (test_list(i) - K).toString\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123004,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9h03vna9.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9h03vna9.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9h03vna9.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result.append(K.toString + \" \")\n            } else {\n                result.append(test_list(i).toString + \" \")\n            }\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123004,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfmmrfiuf.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfmmrfiuf.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfmmrfiuf.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123004,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplqo0bipg.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplqo0bipg.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplqo0bipg.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) >= K) {\n                result += test_list(i) - K\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvwbzrwt.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvwbzrwt.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvwbzrwt.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i)\n            }\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4081pje1.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4081pje1.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4081pje1.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < -K) result += (test_list(i) + K).toString + \" \"\n            else result += \"0 \"\n        }\n        result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwok2k857.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwok2k857.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwok2k857.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            result.append(test_list(i) - K)\n            if (i != test_list.length - 1) result.append(\" \")\n        }\n        result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpovk7i3f8.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpovk7i3f8.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpovk7i3f8.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i < K) result += i\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqu7tg7fb.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqu7tg7fb.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqu7tg7fb.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += \"0 \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123004,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk3_owq_.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk3_owq_.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk3_owq_.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiqeeay20.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiqeeay20.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiqeeay20.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (K + \" \")\n            } else {\n                result += (test_list(i) + \" \")\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ano8sl.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ano8sl.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3_ano8sl.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result_list = result_list :+ test_list(i)\n            }\n        }\n        return result_list.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uenfsps.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uenfsps.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uenfsps.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) result += \"0 \"\n            else result += (test_list(i) - K) + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wgt275d.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wgt275d.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wgt275d.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ddla3qv.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ddla3qv.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ddla3qv.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < -K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgkhpdfmo.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgkhpdfmo.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgkhpdfmo.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else if (i < -K) {\n                result += (i + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            var current : Long = test_list(i)\n            if (current > K) {\n                current = K\n            }\n            result += current.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0n900vhw.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0n900vhw.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0n900vhw.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp : Long = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80xxy1wq.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80xxy1wq.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80xxy1wq.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K) + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5tg4h2h.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5tg4h2h.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5tg4h2h.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqq8o521n.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqq8o521n.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqq8o521n.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            var temp = test_list(i)\n            while (temp > 0) {\n                var digit = temp % 10\n                if (digit <= K) {\n                    result += digit.toString\n                }\n                temp /= 10\n            }\n            result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzptfpgrb.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzptfpgrb.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzptfpgrb.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (K + \" \")\n            } else {\n                result += (test_list(i) + \" \")\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphpuvtn2x.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphpuvtn2x.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphpuvtn2x.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += test_list(i).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdepn973f.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdepn973f.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdepn973f.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = for (i <- test_list) yield {\n            if (i > K) i - K\n            else 0\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5cnv_5ia.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5cnv_5ia.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5cnv_5ia.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var temp_list = List[Long]()\n            while (temp > 0) {\n                temp_list = temp % 10 :: temp_list\n                temp /= 10\n            }\n            temp_list = temp_list.sortWith(_ > _)\n            temp = 0\n            for (j <- 0 until temp_list.length - K) {\n                temp = temp * 10 + temp_list(j)\n            }\n            result += temp.toString\n            if (i < test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6_u4xpg_.scala:16:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until temp_list.length - K) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Long\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6_u4xpg_.scala:25:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6_u4xpg_.scala:25:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available whe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123012,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp210z636z.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp210z636z.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp210z636z.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += test_list(i) - K\n            }\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1lasyr8y.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1lasyr8y.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1lasyr8y.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0d2xkyql.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0d2xkyql.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0d2xkyql.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) result += (test_list(i) - K).toString\n            else result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qnqetp9.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qnqetp9.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qnqetp9.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp < K) {\n                result += \"0\"\n            } else {\n                result += \"1\"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbqdi8t8.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbqdi8t8.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxbqdi8t8.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqzslhig.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp : Long = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80xxy1wq.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80xxy1wq.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp80xxy1wq.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc2iusoqc.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
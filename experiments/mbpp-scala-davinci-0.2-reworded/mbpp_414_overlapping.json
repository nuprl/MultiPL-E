{
  "name": "mbpp_414_overlapping",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to check whether any value in a sequence exists in a sequence or not.\n    def overlapping(list1 : List[Long], list2 : List[Long]) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_414_overlapping.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(overlapping((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong)), (List[Long](6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong))) == (false));\n    assert(overlapping((List[Long](1l.toLong, 2l.toLong, 3l.toLong)), (List[Long](4l.toLong, 5l.toLong, 6l.toLong))) == (false));\n    assert(overlapping((List[Long](1l.toLong, 4l.toLong, 5l.toLong)), (List[Long](1l.toLong, 4l.toLong, 5l.toLong))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        val set1 = list1.toSet\n        val set2 = list2.toSet\n        val set3 = set1.intersect(set2)\n        if (set3.size > 0) true else false",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        val set = Set[Long]()\n        for (i <- list1) set += i\n        for (i <- list2) if (set.contains(i)) return true\n        false",
    "        val set1 = list1.toSet\n        val set2 = list2.toSet\n        set1.intersect(set2).size > 0",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        for(i <- 0 until list1.length) {\n            if(list2.contains(list1(i))) {\n                flag = true\n            }\n        }\n        flag",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        list1.exists(x => list2.contains(x))",
    "        var flag = false\n        for (i <- 0 to list1.length - 1) {\n            for (j <- 0 to list2.length - 1) {\n                if (list1(i) == list2(j)) {\n                    flag = true\n                }\n            }\n        }\n        flag",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    return true\n                }\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    flag = true\n                }\n            }\n        }\n        flag",
    "        val set = Set() ++ list1\n        list2.exists(set.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            if (list2.contains(i)) return true\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        var flag = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                flag = true\n            }\n        }\n        return flag",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        if (list1.length == 0 || list2.length == 0) return false\n        if (list1.head == list2.head) return true\n        if (list1.head < list2.head) return overlapping(list1.tail, list2)\n        return overlapping(list1, list2.tail)",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- 0 until list1.length) {\n            for (j <- 0 until list2.length) {\n                if (list1(i) == list2(j)) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.intersect(list2).length > 0",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                flag = true\n                return flag\n            }\n        }\n        return flag",
    "        // Write your code here\n        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        val set = Set[Long]()\n        for (i <- list1) set += i\n        for (i <- list2) if (set.contains(i)) return true\n        false",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        val set = Set[Long]()\n        for (i <- list1) set += i\n        for (i <- list2) if (set.contains(i)) return true\n        return false",
    "        var flag = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    flag = true\n                }\n            }\n        }\n        flag",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.intersect(list2).size > 0",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        for(i <- list1) {\n            if(list2.contains(i)) return true\n        }\n        return false",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        false",
    "        list1.exists(list2.contains(_))",
    "        for(i <- list1) {\n            for(j <- list2) {\n                if(i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                flag = true\n                return flag\n            }\n        }\n        return flag",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        list1.foreach(x => if(list2.contains(x)) flag = true)\n        flag",
    "        for (i <- list1) {\n            if (list2.contains(i)) return true\n        }\n        return false",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        false",
    "        for (i <- list1) {\n            if (list2.contains(i)) return true\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        val set = Set[Long]()\n        for (i <- list1) {\n            set += i\n        }\n        for (i <- list2) {\n            if (set.contains(i)) {\n                return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) result = true\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        // Write your code here\n        var flag = false\n        for(i <- list1) {\n            for(j <- list2) {\n                if(i == j) {\n                    flag = true\n                }\n            }\n        }\n        return flag",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    flag = true\n                }\n            }\n        }\n        flag",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        list1.exists(list2.contains(_))",
    "        for (i <- 0 until list1.length) {\n            for (j <- 0 until list2.length) {\n                if (list1(i) == list2(j)) return true\n            }\n        }\n        return false",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        var flag = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    flag = true\n                }\n            }\n        }\n        return flag",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(x => list2.contains(x))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        if (list1.isEmpty) return false\n        if (list2.contains(list1.head)) return true\n        return overlapping(list1.tail, list2)",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        if (list1.isEmpty) false\n        else if (list2.contains(list1.head)) true\n        else overlapping(list1.tail, list2)",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n                return result\n            }\n        }\n        return result",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        var flag = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    flag = true\n                }\n            }\n        }\n        flag",
    "        list1.exists(x => list2.contains(x))",
    "        val set1 = list1.toSet\n        val set2 = list2.toSet\n        val set3 = set1.intersect(set2)\n        if (set3.size > 0) true else false",
    "        list1.exists(x => list2.contains(x))",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(list2.contains(_))",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false",
    "        list1.exists(x => list2.contains(x))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        list1.exists(list2.contains(_))",
    "        var result = false\n        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) {\n                    result = true\n                }\n            }\n        }\n        result",
    "        list1.exists(x => list2.contains(x))",
    "        var result = false\n        for (i <- list1) {\n            if (list2.contains(i)) {\n                result = true\n            }\n        }\n        result",
    "        for (i <- list1) {\n            for (j <- list2) {\n                if (i == j) return true\n            }\n        }\n        return false"
  ]
}
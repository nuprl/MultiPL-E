{
  "name": "mbpp_474_replace_char",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to replace characters in a string.\n    def replaceChar(str1 : String, ch : String, newch : String) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(replaceChar((\"polygon\"), (\"y\"), (\"l\")).equals((\"pollgon\")));\n    assert(replaceChar((\"character\"), (\"c\"), (\"a\")).equals((\"aharaater\")));\n    assert(replaceChar((\"python\"), (\"l\"), (\"a\")).equals((\"python\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2",
    "        str1.replaceAll(ch, newch)",
    "        var str2 = str1.replace(ch, newch)\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = str1.replace(ch, newch)\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2",
    "        str1.replace(ch, newch)",
    "        var str2 = str1.replace(ch, newch)\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) {\n                str2 += newch\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i).toString == ch) {\n                str2 += newch\n            } else {\n                str2 += str1(i).toString\n            }\n        }\n        str2",
    "        var str2 = str1.replace(ch, newch)\n        return str2",
    "        str1.replace(ch, newch)",
    "        str1.replace(ch, newch)",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2",
    "        str1.replace(ch, newch)",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i) == ch(0)) str2 += newch\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (str1(i).toString == ch) str2 += newch\n            else str2 += str1(i)\n        }\n        str2",
    "        str1.replace(ch, newch)"
  ]
}
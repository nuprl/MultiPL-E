{
  "name": "mbpp_417_group_tuples",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_417_group_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(_.split(\" \").head).map(_._2.head).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bgbot0l.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bgbot0l.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0bgbot0l.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\"|\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnjz0f6vg.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnjz0f6vg.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnjz0f6vg.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val grouped = first.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\",\")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37xx5z7o.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37xx5z7o.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37xx5z7o.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList)\n        val firstElements = tuples.map(x => x(0))\n        val groupedFirstElements = firstElements.groupBy(x => x)\n        val result = groupedFirstElements.map(x => x._1 + \" \" + x._2.size).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc8azllj2.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc8azllj2.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc8azllj2.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.length > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        val firstElementsGroupedFilteredSortedMapped = firstElementsGroupedFilteredSorted.map(x => x._1)\n        firstElementsGroupedFilteredSortedMapped\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78y9xy82.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78y9xy82.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78y9xy82.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => (x.split(\" \")(0), x.split(\" \")(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => x._1 + \" \" + x._2.map(_._2).mkString(\" \")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5qr1g_y.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5qr1g_y.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5qr1g_y.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        groups.map(x => x._1 + \":\" + x._2.map(y => y._2).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpinxkabv8.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpinxkabv8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpinxkabv8.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val first = tuples.map(x => x(0))\n        val groups = first.groupBy(x => x)\n        val result = groups.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1g17zaq.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1g17zaq.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1g17zaq.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        var result = List[String]()\n        for (i <- map.values) {\n            result = result :+ i.mkString(\" \")\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_4ti1vw.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_4ti1vw.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_4ti1vw.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, ListBuffer[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) += tuple\n            } else {\n                map += (key -> ListBuffer(tuple))\n            }\n        }\n        val result = new ListBuffer[String]\n        for (key <- map.keys) {\n            if (map(key).size > 1) {\n                result += map(key).mkString(\" \")\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjwonnss.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjwonnss.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjwonnss.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy0q2vpyl.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy0q2vpyl.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy0q2vpyl.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsMap = firstElements.groupBy(x => x)\n        val result = firstElementsMap.map(x => x._1 + \":\" + x._2.size)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcb5z76ae.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcb5z76ae.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcb5z76ae.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val groupedElements = firstElements.groupBy(x => x)\n        val result = groupedElements.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpozmv4owx.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpozmv4owx.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpozmv4owx.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            val value = i.split(\" \")(1)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ value\n            } else {\n                map(key) = List(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += k + \" \" + v.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyvpdybf.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyvpdybf.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyvpdybf.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val firstGroup = first.groupBy(x => x)\n        val result = firstGroup.map(x => (x._1, x._2.length)).toList.sortBy(x => x._2).reverse.map(x => x._1)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslsqpq_z.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslsqpq_z.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslsqpq_z.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbucgdda.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbucgdda.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbucgdda.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) + 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            if (map(key) > 1) {\n                result += tuple\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgu5wn4dv.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgu5wn4dv.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgu5wn4dv.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i.head)) {\n                map(i.head) = map(i.head) ::: i\n            } else {\n                map(i.head) = i\n            }\n        }\n        map.values.toList.map(x => x.mkString(\",\"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty9hj4c2.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty9hj4c2.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty9hj4c2.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, List[String]]()\n        for (tuple <- Input) {\n            val key = tuple.split(\" \")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = list :+ tuple\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        for (key <- map.keys) {\n            result += map(key).mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhhi5503.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhhi5503.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyhhi5503.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result : List[String] = List()\n        var map : Map[String, Int] = Map()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map += (i.split(\",\")(0) -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t_5k4hy.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t_5k4hy.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t_5k4hy.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val filtered = grouped.filter(x => x._2.length > 1)\n        val result = filtered.map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnkzrwxr.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnkzrwxr.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnkzrwxr.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map += (key -> (i :: value))\n            } else {\n                map += (key -> List(i))\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzhgzrrw.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzhgzrrw.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzhgzrrw.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp127rfvg3.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp127rfvg3.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp127rfvg3.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- 0 until list.length) {\n            val key = list(i)(0)\n            val value = list(i).drop(1)\n            if (map.contains(key)) {\n                map(key) = map(key) ::: value\n            } else {\n                map(key) = value\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \",\" + v.mkString(\",\"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpug7w6t2k.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpug7w6t2k.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpug7w6t2k.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        groups.map(x => x._1 + \" \" + x._2.map(x => x._2).mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr70txkwk.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr70txkwk.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr70txkwk.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps770legf.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps770legf.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps770legf.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((key, value) <- map) {\n            if (value > 1) {\n                result += key\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppc3pn7nj.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppc3pn7nj.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppc3pn7nj.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groupedTuples = tuples.groupBy(x => x(0))\n        val result = groupedTuples.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j6ph7ec.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j6ph7ec.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j6ph7ec.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for(i <- Input) {\n            if(map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map(i.split(\",\")(0)) = 1\n            }\n        }\n        val res = new ListBuffer[String]\n        for((k, v) <- map) {\n            if(v > 1) {\n                res += k\n            }\n        }\n        res.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhsfdxd9.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhsfdxd9.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhsfdxd9.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ tuple\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01u012pp.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01u012pp.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01u012pp.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map.put(i, map(i) + 1)\n            } else {\n                map.put(i, 1)\n            }\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        return list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuqkmplsa.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuqkmplsa.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuqkmplsa.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val tuples = list.map(x => (x(0), x(1)))\n        val map = tuples.groupBy(_._1)\n        val result = map.map(x => x._1 + \":\" + x._2.map(_._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpazktwwb8.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpazktwwb8.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpazktwwb8.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            val value = tuple.split(\",\")(1)\n            if (map.contains(key)) {\n                map(key) = value :: map(key)\n            } else {\n                map(key) = List(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for (key <- map.keys) {\n            result += key + \":\" + map(key).mkString(\",\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb754fswa.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb754fswa.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb754fswa.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wo_rzm3.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wo_rzm3.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wo_rzm3.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (i <- Input) {\n            var key = i.split(\",\")(0)\n            var value = i.split(\",\")(1)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ value\n            } else {\n                map(key) = List(value)\n            }\n        }\n        var result = List[String]()\n        for (i <- map) {\n            result = result :+ i._1 + \",\" + i._2.mkString(\",\")\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcalxeqaj.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcalxeqaj.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcalxeqaj.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\",\")(0))\n        groups.map(x => x._1 + \":\" + x._2.mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsossi_f7.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsossi_f7.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsossi_f7.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            val tuple = Input(i).split(\",\")\n            if (map.contains(tuple(0))) {\n                map(tuple(0)) += 1\n            } else {\n                map(tuple(0)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            val tuple = Input(i).split(\",\")\n            if (map(tuple(0)) > 1) {\n                result += tuple(0)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuvxy0ah3.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuvxy0ah3.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuvxy0ah3.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\",\")(0)).map(x => x._1 + \":\" + x._2.mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0mf8zgee.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0mf8zgee.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0mf8zgee.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            val key = i.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) += 1\n            } else {\n                map += (key -> 1)\n            }\n        }\n        for (i <- Input) {\n            val key = i.split(\",\")(0)\n            if (map(key) > 1) {\n                result += i\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmo81jat6.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmo81jat6.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmo81jat6.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val grouped = Input.groupBy(_.split(\" \")(0))\n        val result = grouped.map(x => x._1 + \" \" + x._2.length).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2epmvt6.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2epmvt6.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2epmvt6.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => (x.split(\" \")(0), x.split(\" \")(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => (x._1, x._2.map(_._2).toList)).toList\n        result.map(x => x._1 + \" \" + x._2.mkString(\" \"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue4w3jlk.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue4w3jlk.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue4w3jlk.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map(i.split(\",\")(0)) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = result :+ i._1\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjrr1avkr.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjrr1avkr.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjrr1avkr.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val ListOfTuples = Input.map(x => (x.split(\" \")(0), x.split(\" \")(1)))\n        val ListOfTuplesGrouped = ListOfTuples.groupBy(x => x._1)\n        ListOfTuplesGrouped.map(x => x._2.map(y => y._2).mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9y452eeo.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9y452eeo.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9y452eeo.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val grouped = Input.groupBy(x => x.split(\" \")(0))\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15tfzn7r.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15tfzn7r.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15tfzn7r.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v == 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn2nfez0.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn2nfez0.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn2nfez0.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \"))\n        val firstElements = tuples.map(x => x(0))\n        val grouped = firstElements.groupBy(x => x)\n        val filtered = grouped.filter(x => x._2.length > 1)\n        val result = filtered.map(x => x._1).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpblkhl6a2.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpblkhl6a2.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpblkhl6a2.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp344k38l0.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp344k38l0.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp344k38l0.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \"))\n        val map = new HashMap[String, List[String]]\n        list.foreach(x => {\n            if (map.contains(x(0))) {\n                map(x(0)) = map(x(0)) :+ x(1)\n            } else {\n                map(x(0)) = List(x(1))\n            }\n        })\n        val result = new ListBuffer[String]\n        map.foreach(x => {\n            result += x._1 + \" \" + x._2.mkString(\" \")\n        })\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmqado1mq.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmqado1mq.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmqado1mq.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoeot1l4f.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoeot1l4f.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoeot1l4f.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplqe5ftvd.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplqe5ftvd.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplqe5ftvd.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(_.split(\" \")(0)).map(_._2.head).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpumkcon18.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpumkcon18.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpumkcon18.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var output = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            var key = Input(i).split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) + 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            var key = Input(i).split(\",\")(0)\n            if (map(key) > 1) {\n                output = output :+ Input(i)\n            }\n        }\n        return output\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppqulg07s.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppqulg07s.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppqulg07s.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbucgdda.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbucgdda.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbucgdda.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val output = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                output += k\n            }\n        }\n        output.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5izwu1pz.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5izwu1pz.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5izwu1pz.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x(0))\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y(1)).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptw4hkt45.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptw4hkt45.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptw4hkt45.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        groups.map(x => x._1 + \":\" + x._2.map(y => y._2).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsqpmx6b.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsqpmx6b.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsqpmx6b.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpndjqqv__.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpndjqqv__.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpndjqqv__.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map += (i.split(\" \")(0) -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122868,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvrtnl8xz.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvrtnl8xz.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvrtnl8xz.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList)\n        val firstElements = tuples.map(x => x.head)\n        val commonFirstElements = firstElements.filter(x => firstElements.count(y => y == x) > 1)\n        commonFirstElements.distinct\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmx4fo_9.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmx4fo_9.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmx4fo_9.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmm5nusxh.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmm5nusxh.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmm5nusxh.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3ul4t8g.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3ul4t8g.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3ul4t8g.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result = Input(i) :: result\n                map(Input(i)) = 0\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm593ibga.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm593ibga.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm593ibga.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            val key = Input(i).split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) + 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            val key = Input(i).split(\" \")(0)\n            if (map(key) == 1) {\n                result += Input(i)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8frafh3_.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8frafh3_.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8frafh3_.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(_.head)\n        grouped.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122869,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiks2_8mg.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiks2_8mg.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiks2_8mg.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val first = i.split(\" \")(0)\n            if (map.contains(first)) {\n                val list = map(first)\n                map(first) = i :: list\n            } else {\n                map(first) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdharxc1q.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdharxc1q.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdharxc1q.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x(0))\n        val groupedElements = firstElements.groupBy(x => x).map(x => (x._1, x._2.length))\n        val result = groupedElements.filter(x => x._2 > 1).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie_ts0ey.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie_ts0ey.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie_ts0ey.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]\n        var map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            var tuple = Input(i).split(\",\")\n            if (map.contains(tuple(0))) {\n                map(tuple(0)) += 1\n            } else {\n                map += (tuple(0) -> 1)\n            }\n        }\n        for (i <- 0 until Input.length) {\n            var tuple = Input(i).split(\",\")\n            if (map(tuple(0)) > 1) {\n                result += tuple(0)\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0l1jy1dg.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0l1jy1dg.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0l1jy1dg.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1dd3ys08.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1dd3ys08.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1dd3ys08.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(_.charAt(0)).map(_._2.head).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiuq0lsom.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiuq0lsom.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiuq0lsom.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList)\n        val firstElements = tuples.map(x => x(0))\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_h20inq.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_h20inq.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_h20inq.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, List[String]]()\n        for (i <- 0 until Input.length) {\n            var key = Input(i).split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ Input(i)\n            } else {\n                map += (key -> List(Input(i)))\n            }\n        }\n        for (i <- map.keys) {\n            result = result :+ i + \" \" + map(i).length\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvs4835e.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvs4835e.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvs4835e.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var result = List[String]()\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspkoxv6i.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspkoxv6i.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspkoxv6i.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => x._1 + \" \" + x._2.map(_._2).mkString(\" \")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg6e64n0j.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg6e64n0j.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg6e64n0j.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \")).map(x => (x(0), x(1))).groupBy(_._1).map(x => (x._1, x._2.map(_._2))).toList\n        list.map(x => x._1 + \" \" + x._2.mkString(\" \"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zr_9jil.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zr_9jil.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zr_9jil.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(_.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie2zbd44.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie2zbd44.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie2zbd44.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxemfbqo.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxemfbqo.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxemfbqo.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val l = Input.map(x => x.split(\",\").toList)\n        val m = l.map(x => (x.head, x.tail))\n        val n = m.groupBy(x => x._1)\n        val o = n.map(x => (x._1, x._2.map(x => x._2)))\n        val p = o.map(x => (x._1, x._2.flatten))\n        val q = p.map(x => (x._1, x._2.distinct))\n        val r = q.map(x => (x._1, x._2.sorted))\n        val s = r.map(x => (x._1, x._2.mkString(\",\")))\n        s.map(x => x._1 + \":\" + x._2).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4p8vrey.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4p8vrey.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4p8vrey.scala:17:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.length > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        val firstElementsGroupedFilteredSortedMapped = firstElementsGroupedFilteredSorted.map(x => x._1)\n        firstElementsGroupedFilteredSortedMapped\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yqjbt5v.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yqjbt5v.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6yqjbt5v.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val first = tuples.map(x => x(0))\n        val groups = first.groupBy(x => x)\n        val result = groups.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3pxl6ed.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3pxl6ed.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3pxl6ed.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\",\")(0)).map(x => x._1 + \",\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5hg1e2a.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5hg1e2a.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5hg1e2a.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            val value = tuple.split(\",\")(1)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ value\n            } else {\n                map(key) = List(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \":\" + v.mkString(\",\"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122887,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3pbpd82.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3pbpd82.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3pbpd82.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy0q2vpyl.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy0q2vpyl.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy0q2vpyl.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamprerpn.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamprerpn.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamprerpn.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val groups = firstElements.groupBy(x => x)\n        val result = groups.map(x => x._1 + \" : \" + x._2.size)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2bvbijn.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2bvbijn.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2bvbijn.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, ListBuffer[String]]()\n        for (i <- 0 until Input.length) {\n            val key = Input(i).split(\" \")(0)\n            if (!map.contains(key)) {\n                map(key) = new ListBuffer[String]()\n            }\n            map(key) += Input(i)\n        }\n        for (i <- map.keySet) {\n            result += map(i).mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00ls4gj0.scala:21:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00ls4gj0.scala:21:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp00ls4gj0.scala:21:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val filtered = grouped.filter(x => x._2.length > 1)\n        val result = filtered.map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.size)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63rbizgw.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63rbizgw.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63rbizgw.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) += 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphgutkune.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphgutkune.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphgutkune.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp1ci8r6g.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp1ci8r6g.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp1ci8r6g.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val groups = first.groupBy(x => x).map(x => (x._1, x._2.length))\n        val result = groups.filter(x => x._2 > 1).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgl01l1xi.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgl01l1xi.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgl01l1xi.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamprerpn.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamprerpn.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamprerpn.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- 0 until list.length) {\n            if (map.contains(list(i)(0))) {\n                map(list(i)(0)) = list(i)(1) :: map(list(i)(0))\n            } else {\n                map(list(i)(0)) = List(list(i)(1))\n            }\n        }\n        map.map(x => x._1 + \" \" + x._2.mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvjospov0.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvjospov0.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvjospov0.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp7urzrv9.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp7urzrv9.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp7urzrv9.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val input = Input.map(x => x.split(\" \").toList)\n        val result = input.groupBy(x => x.head).map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122888,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_3scykg.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_3scykg.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb_3scykg.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            }\n            else {\n                map += (i -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93v2wff4.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93v2wff4.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93v2wff4.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._2.mkString(\" \")).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp092mccl3.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp092mccl3.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp092mccl3.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val groups = firstElements.groupBy(x => x)\n        val result = groups.map(x => x._1 + \":\" + x._2.length)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehhbdmdk.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehhbdmdk.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehhbdmdk.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementMap = firstElements.groupBy(identity).mapValues(_.size)\n        val firstElementList = firstElementMap.toList.sortBy(_._2).reverse\n        val firstElement = firstElementList.head._1\n        val result = tuples.filter(x => x.head == firstElement)\n        result.map(x => x.mkString(\",\"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjfr2e84.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjfr2e84.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjfr2e84.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, ListBuffer[String]]()\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) += i\n            } else {\n                map(key) = ListBuffer(i)\n            }\n        }\n        val result = new ListBuffer[String]()\n        for (i <- map) {\n            result += i._1 + \" \" + i._2.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz7xxplkt.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz7xxplkt.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz7xxplkt.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) = map(Input(i)) + 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3clzsu8q.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3clzsu8q.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3clzsu8q.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, List[String]]()\n        for (i <- 0 until Input.length) {\n            val key = Input(i).split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) ::: List(Input(i))\n            }\n            else {\n                map(key) = List(Input(i))\n            }\n        }\n        for (i <- map.keySet) {\n            result = result ::: List(i + \" \" + map(i).mkString(\" \"))\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122889,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cnf8kk2.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cnf8kk2.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4cnf8kk2.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw6j8trj.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw6j8trj.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw6j8trj.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementMap = firstElements.groupBy(x => x)\n        val firstElementList = firstElementMap.toList\n        val firstElementListSorted = firstElementList.sortBy(x => x._2.length)\n        val firstElementListSortedFiltered = firstElementListSorted.filter(x => x._2.length > 1)\n        val firstElementListSortedFilteredFinal = firstElementListSortedFiltered.map(x => x._1)\n        return firstElementListSortedFilteredFinal\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122891,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5i_v45s.scala:16:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5i_v45s.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5i_v45s.scala:16:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val grouped = tuples.groupBy(x => x(0))\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y(1)).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuy5llrnq.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuy5llrnq.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuy5llrnq.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val first = tuple.split(\",\")(0)\n            if (map.contains(first)) {\n                map(first) = map(first) :+ tuple\n            } else {\n                map(first) = List(tuple)\n            }\n        }\n        var result = List[String]()\n        for ((k, v) <- map) {\n            if (v.length > 1) {\n                result = result :+ k\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122891,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3caqhgcx.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3caqhgcx.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3caqhgcx.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElement = firstElements.head\n        val commonFirstElements = firstElements.filter(x => x == firstElement)\n        val commonFirstElement = commonFirstElements.head\n        val result = tuples.filter(x => x.head == commonFirstElement)\n        result.map(x => x.mkString(\",\"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi7cu7ktl.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi7cu7ktl.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi7cu7ktl.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groupedTuples = tuples.groupBy(x => x.head)\n        val result = groupedTuples.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\",\"))\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122905,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg7dm785q.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg7dm785q.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg7dm785q.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map += (i.split(\" \")(0) -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrbrcthx.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrbrcthx.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrbrcthx.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val groups = tuples.groupBy(x => x(0))\n        val result = groups.map(x => x._1 + \":\" + x._2.map(x => x(1)).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wikxyip.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wikxyip.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wikxyip.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            val str = Input(i)\n            val key = str.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) += 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrohwwhy.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrohwwhy.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyrohwwhy.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        var result = List[String]()\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = result :+ i._1\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8kc2v7j5.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8kc2v7j5.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8kc2v7j5.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => (x._1, x._2.map(y => y._2).toList)).toList\n        result.map(x => x._1 + \":\" + x._2.mkString(\",\"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2hozidu.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2hozidu.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2hozidu.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => (x._1, x._2.map(_._2).mkString(\",\")))\n        result.toList.map(x => x._1 + \",\" + x._2)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hfxnksr.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hfxnksr.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hfxnksr.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6fhzpkb.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6fhzpkb.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6fhzpkb.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            val s = v.mkString(\" \")\n            result += s\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdycgneu.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdycgneu.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdycgneu.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4l2r_5e.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4l2r_5e.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4l2r_5e.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val first = tuples.map(x => x(0))\n        val groups = first.groupBy(x => x)\n        val result = groups.filter(x => x._2.length > 1).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122907,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpkgsx1v.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpkgsx1v.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpkgsx1v.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \"))\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i(0))) {\n                val temp = map(i(0))\n                map(i(0)) = i(1) :: temp\n            } else {\n                map(i(0)) = List(i(1))\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            result += i._1 + \" \" + i._2.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp67gvr03a.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp67gvr03a.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp67gvr03a.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkrqvpi9_.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkrqvpi9_.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkrqvpi9_.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map += (i.split(\",\")(0) -> 1)\n            }\n        }\n        for ((k,v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp49cd8hky.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp49cd8hky.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp49cd8hky.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map += i.split(\" \")(0) -> 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uumvvei.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uumvvei.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uumvvei.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail).flatten.mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8srodqk.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8srodqk.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8srodqk.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => x._1 + \",\" + x._2.map(y => y._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3hqhd_or.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3hqhd_or.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3hqhd_or.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = i :: map(key)\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122908,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4i6gaxg9.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4i6gaxg9.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4i6gaxg9.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122890,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw6j8trj.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw6j8trj.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw6j8trj.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs26w9v2.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs26w9v2.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs26w9v2.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ tuple\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01u012pp.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01u012pp.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp01u012pp.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        groups.map(x => x._1 + \":\" + x._2.map(y => y._2).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsqpmx6b.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsqpmx6b.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsqpmx6b.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr2015_m3.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr2015_m3.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr2015_m3.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groups = tuples.groupBy(x => x(0))\n        groups.map(x => x._1 + \":\" + x._2.map(y => y(1)).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122910,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe03zj8yd.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe03zj8yd.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe03zj8yd.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = ListBuffer[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t_di8xt.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t_di8xt.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t_di8xt.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val res = Input.groupBy(x => x.split(\",\")(0)).map(x => x._1 + \":\" + x._2.length).toList\n        return res\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu92ku6fa.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu92ku6fa.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu92ku6fa.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplw4xmk9e.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            }\n            else {\n                map(i) = 1\n            }\n        }\n        val res = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                res += k\n            }\n        }\n        res.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122925,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkhwmr5u5.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkhwmr5u5.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkhwmr5u5.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result += Input(i)\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrmj2nxk.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrmj2nxk.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrmj2nxk.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = ListBuffer[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2k_kijq.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2k_kijq.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2k_kijq.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\")).map(x => (x(0), x(1))).groupBy(_._1).map(x => (x._1, x._2.map(_._2).mkString(\",\"))).toList\n        list.map(x => x._1 + \":\" + x._2)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplgari2w_.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplgari2w_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplgari2w_.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val group = Input.groupBy(x => x.split(\" \")(0))\n        group.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122925,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm9qmelsc.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm9qmelsc.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm9qmelsc.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \").toList)\n        val map = new HashMap[String, List[String]]\n        list.foreach(x => {\n            val key = x(0)\n            val value = x.tail\n            if (map.contains(key)) {\n                val oldValue = map(key)\n                map(key) = oldValue ::: value\n            } else {\n                map(key) = value\n            }\n        })\n        map.toList.map(x => x._1 + \" \" + x._2.mkString(\" \")).sorted\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy2g5dqu.scala:21:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy2g5dqu.scala:21:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy2g5dqu.scala:21:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += k + \" \" + v.length\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzpej6786.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzpej6786.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzpej6786.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        grouped.map(x => x._1 + \":\" + x._2.map(_._2).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzk4uez0.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzk4uez0.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzk4uez0.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) = map(i.split(\",\")(0)) + 1\n            } else {\n                map(i.split(\",\")(0)) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeipfn64k.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeipfn64k.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeipfn64k.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.size > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        val firstElementsGroupedFilteredSortedFlattened = firstElementsGroupedFilteredSorted.map(x => x._1)\n        firstElementsGroupedFilteredSortedFlattened\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122927,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsxqgmv2e.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsxqgmv2e.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsxqgmv2e.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val groups = firstElements.groupBy(x => x)\n        val result = groups.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsi7cu90x.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsi7cu90x.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsi7cu90x.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val filtered = grouped.filter(x => x._2.length > 1)\n        val result = filtered.map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ksq_d9z.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x(0))\n        val grouped = first.groupBy(x => x)\n        val filtered = grouped.filter(x => x._2.length > 1)\n        val sorted = filtered.toList.sortBy(x => x._1)\n        val result = sorted.map(x => x._1)\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7b8p4qb3.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7b8p4qb3.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7b8p4qb3.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = i :: list\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \":\" + v.mkString(\" \"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8uztjiuh.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8uztjiuh.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8uztjiuh.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => x._1 + \" \" + x._2.map(x => x._2).mkString(\" \")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7lvuqi4c.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7lvuqi4c.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7lvuqi4c.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val grouped = first.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122927,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbqn_h6hx.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbqn_h6hx.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbqn_h6hx.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result += Input(i)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1olz_ja.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1olz_ja.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1olz_ja.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (tuple <- Input) {\n            val first = tuple.split(\",\")(0)\n            if (map.contains(first)) {\n                map(first) = map(first) :+ tuple\n            } else {\n                map(first) = List(tuple)\n            }\n        }\n        var result = List[String]()\n        for (key <- map.keys) {\n            result = result :+ key + \":\" + map(key).mkString(\",\")\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122927,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1maakl.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1maakl.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1maakl.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp344k38l0.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp344k38l0.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp344k38l0.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groups = tuples.groupBy(x => x(0))\n        groups.map(x => x._1 + \":\" + x._2.map(y => y(1)).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122910,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe03zj8yd.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe03zj8yd.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe03zj8yd.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val first = tuples.map(x => x._1)\n        val second = tuples.map(x => x._2)\n        val common = first.intersect(second)\n        common\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuelziesh.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuelziesh.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuelziesh.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = i :: list\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptiughc3q.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptiughc3q.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptiughc3q.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var result = List[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni760xgv.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni760xgv.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni760xgv.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(_._1)\n        val result = groups.map(x => x._1 + \":\" + x._2.map(_._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0nhcnnm.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0nhcnnm.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0nhcnnm.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \"))\n        val firstElements = tuples.map(x => x(0))\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \" \" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_xn2asb.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_xn2asb.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_xn2asb.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementSet = firstElements.toSet\n        val firstElementList = firstElementSet.toList\n        firstElementList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpma41apyw.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpma41apyw.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpma41apyw.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdt4gl93_.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, List[String]]()\n        for (i <- 0 until Input.length) {\n            var key = Input(i).split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ Input(i)\n            } else {\n                map += (key -> List(Input(i)))\n            }\n        }\n        for (i <- map.keys) {\n            result = result :+ i + \" \" + map(i).length\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122871,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvs4835e.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvs4835e.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvs4835e.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = i :: list\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \" \" + v.mkString(\" \"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1anh6_z9.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1anh6_z9.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1anh6_z9.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \").head).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122935,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7l07wgm7.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7l07wgm7.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7l07wgm7.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val l = Input.map(x => x.split(\",\").toList)\n        val m = l.map(x => x.head)\n        m.toSet.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcs8_t_4r.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcs8_t_4r.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcs8_t_4r.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail).flatten.mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8srodqk.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8srodqk.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8srodqk.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        val result = groups.map(x => x._1 + \":\" + x._2.map(y => y._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxqkfmuef.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxqkfmuef.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxqkfmuef.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val m = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (m.contains(key)) {\n                m(key) = i :: m(key)\n            } else {\n                m += key -> List(i)\n            }\n        }\n        m.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122935,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsak9kzx3.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsak9kzx3.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsak9kzx3.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = tuple :: list\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((key, value) <- map) {\n            val list = new ListBuffer[String]\n            for (tuple <- value) {\n                list += tuple.split(\",\")(1)\n            }\n            result += (key + \":\" + list.mkString(\",\"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122935,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1ahdadu.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1ahdadu.scala:27:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps1ahdadu.scala:27:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = ListBuffer[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122935,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwjs9qqr6.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwjs9qqr6.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwjs9qqr6.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = list :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0u7q02w.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0u7q02w.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd0u7q02w.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_418_Find_Max",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjaejr4ku.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjaejr4ku.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjaejr4ku.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjaejr4ku.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max_len = 0\n        var max_elem = lst.asInstanceOf[List[Any]](0)\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max_len) {\n                max_len = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8u2ovzjp.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8u2ovzjp.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8u2ovzjp.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8u2ovzjp.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var maxElement = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                maxElement = i\n            }\n        }\n        maxElement\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu7jrkhjx.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu7jrkhjx.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu7jrkhjx.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu7jrkhjx.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.toString.length > max) {\n                max = element.toString.length\n                max_element = element\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym4hgyqh.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = element\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (element : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpym4hgyqh.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpym4hgyqh.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpym4hgyqh.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.toString.length > max) {\n                max = x.toString.length\n                max_element = x\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93g28f9f.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = x\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (x : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp93g28f9f.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp93g28f9f.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp93g28f9f.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max : Any = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbivnk2qp.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbivnk2qp.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbivnk2qp.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbivnk2qp.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpodbo2rgw.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodbo2rgw.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodbo2rgw.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodbo2rgw.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        lst match {\n            case Nil => println(\"Empty list\")\n            case head :: tail => {\n                for (i <- lst) {\n                    if (i.toString.length > max) {\n                        max = i.toString.length\n                        max_element = i\n                    }\n                }\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp51r2z93h.scala:11:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp51r2z93h.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp51r2z93h.scala:22:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp51r2z93h.scala:23:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = null\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.toString.length > max) {\n                max = element.toString.length\n                max_element = element\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp99e4b6i5.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp99e4b6i5.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp99e4b6i5.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp99e4b6i5.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf535aqq_.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5q1p69i0.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5q1p69i0.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5q1p69i0.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5q1p69i0.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq5yslytd.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_gwaevg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_gwaevg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_gwaevg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_gwaevg.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx0mjgdmh.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphufn3yb5.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = 0\n        var max_elem = lst1(0)\n        for (i <- 0 to lst1.length - 1) {\n            if (lst1(i).toString.length > max) {\n                max = lst1(i).toString.length\n                max_elem = lst1(i)\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbknl_3k.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbknl_3k.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbknl_3k.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbknl_3k.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (head.toString.length > max.toString.length) head else max\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf535aqq_.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x::xs => {\n                val max = FindMax(xs)\n                if (max.asInstanceOf[List[Any]].length > x.asInstanceOf[List[Any]].length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisqk5_4t.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisqk5_4t.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisqk5_4t.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisqk5_4t.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:14:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ccx4meh.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq5yslytd.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphufn3yb5.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (head.toString.length > max.toString.length) head else max\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz0q1tu6k.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = lst(0)\n        for (elem <- lst) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmps8t4tn1c.scala:7:23 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_elem\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps8t4tn1c.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (elem <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps8t4tn1c.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps8t4tn1c.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps8t4tn1c.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = lst1(0)\n        for(i <- 1 until lst1.length) {\n            if(lst1(i).toString.length > max.toString.length) max = lst1(i)\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d7thypl.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d7thypl.scala:14:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d7thypl.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d7thypl.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val max = FindMax(tl)\n                max match {\n                    case Nil => hd\n                    case _ => if (max.toString.length > hd.toString.length) max else hd\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1p3qshk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1p3qshk.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1p3qshk.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt1p3qshk.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for(i <- 0 to lst.length-1) {\n            if(lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpiz52b8sn.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiz52b8sn.scala:8:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m to lst.length-\u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpiz52b8sn.scala:9:15 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m(lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^\u001b[0m\n\u001b[31m  |\u001b[0m               \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpiz52b8sn.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpiz52b8sn.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiz52b8sn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var maxElement : Any = null\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).toString.length > max) {\n                max = lst.asInstanceOf[List[Any]](i).toString.length\n                maxElement = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return maxElement\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxe3nxik.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxe3nxik.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxe3nxik.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxe3nxik.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfqtyzuk.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.asInstanceOf[List[Any]].length > max) {\n                max = element.asInstanceOf[List[Any]].length\n                max_element = element\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfqtyzuk.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp67m2bu8e.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp67m2bu8e.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp67m2bu8e.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp67m2bu8e.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp67m2bu8e.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp67m2bu8e.scala:17:106 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfqtyzuk.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (max.toString.length > head.toString.length) max else head\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfqtyzuk.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max\n                else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122656,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpob26w4i_.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpob26w4i_.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpob26w4i_.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpob26w4i_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqym5lv0z.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.asInstanceOf[List[Any]].length > max) {\n                max = element.asInstanceOf[List[Any]].length\n                max_element = element\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptmlhdayr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for(elem <- lst.asInstanceOf[List[Any]]) {\n            if(elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122656,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl_sc469y.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_sc469y.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_sc469y.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl_sc469y.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.asInstanceOf[List[Any]].length > max) {\n                max = x.asInstanceOf[List[Any]].length\n                max_element = x\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcanjualg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcanjualg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcanjualg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcanjualg.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp67m2bu8e.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp67m2bu8e.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp67m2bu8e.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp67m2bu8e.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp67m2bu8e.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp67m2bu8e.scala:17:106 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf535aqq_.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = null\n        for (e <- lst.asInstanceOf[List[Any]]) {\n            if (e.toString.length > max) {\n                max = e.toString.length\n                max_element = e\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxicaje9k.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxicaje9k.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxicaje9k.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxicaje9k.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxj3kpzha.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]](0)\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7f95p0d.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7f95p0d.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7f95p0d.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7f95p0d.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfqtyzuk.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var maxElement : Any = null\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                maxElement = i\n            }\n        }\n        return maxElement\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj6ebmraw.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj6ebmraw.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj6ebmraw.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj6ebmraw.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem : Any = null\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfgg_2x6.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfgg_2x6.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfgg_2x6.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfgg_2x6.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val max = FindMax(tl)\n                if (max.asInstanceOf[List[Any]].length > hd.asInstanceOf[List[Any]].length) max else hd\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz1o5xfr_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz1o5xfr_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz1o5xfr_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz1o5xfr_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst(0)\n        for (i <- 1 to lst.length - 1) {\n            if (lst(i).length > max.length) {\n                max = lst(i)\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmptxjzwq9b.scala:6:18 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptxjzwq9b.scala:7:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmptxjzwq9b.scala:8:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).length > max.length) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmptxjzwq9b.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = lst(i)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxjzwq9b.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptxjzwq9b.scala:15:106 -----------------------\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]].apply(i).toString.length > max) {\n                max = lst.asInstanceOf[List[Any]].apply(i).toString.length\n                max_element = lst.asInstanceOf[List[Any]].apply(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaq195mrt.scala:11:63 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst.asInstanceOf[\u001b[35mList\u001b[0m[\u001b[35mAny\u001b[0m]].apply(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Any\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaq195mrt.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaq195mrt.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaq195mrt.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max.toString.length) max = elem\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcbp5axb8.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcbp5axb8.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcbp5axb8.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcbp5axb8.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxj3kpzha.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnrugppok.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzumhru_4.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzumhru_4.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzumhru_4.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzumhru_4.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpycwy0b3j.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max\n                else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_dhqfme3.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = \"\"\n        for (i <- lst.asInstanceOf[List[String]]) {\n            if (i.length > max) {\n                max = i.length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp1t1lyb4.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp1t1lyb4.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp1t1lyb4.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp1t1lyb4.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.toString.length > max) {\n                max = element.toString.length\n                max_element = element\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122659,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16gk08dm.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16gk08dm.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16gk08dm.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16gk08dm.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (max.toString.length > head.toString.length) max else head\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt7qfp7mk.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5vr_1wce.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val maxTail = FindMax(xs)\n                if (maxTail.toString.length > x.toString.length) maxTail else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_660o7ah.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_660o7ah.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_660o7ah.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_660o7ah.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length > max) {\n                max = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                max_element = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg_pibrw.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg_pibrw.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg_pibrw.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeg_pibrw.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp92788wfy.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp92788wfy.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp92788wfy.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp92788wfy.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfqtyzuk.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elem = elem\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (elem : Any)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvfqtyzuk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 until lst.length) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122662,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp5p8yopiq.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5p8yopiq.scala:8:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until lst.length) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp5p8yopiq.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp5p8yopiq.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp5p8yopiq.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5p8yopiq.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mStr",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk96lqza1.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq5yslytd.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq5yslytd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbajkfirg.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbajkfirg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => {\n                        if (head.toString.length > max.toString.length) head else max\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122660,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjr1knpme.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjr1knpme.scala:20:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjr1knpme.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjr1knpme.scala:21:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf535aqq_.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf535aqq_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7t_j0env.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7t_j0env.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7t_j0env.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7t_j0env.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprl7ym1xd.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length > max) {\n                max = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                max_element = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwbeynp3.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwbeynp3.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwbeynp3.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwbeynp3.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptkciu25h.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxfqnar_b.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5q1p69i0.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5q1p69i0.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5q1p69i0.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5q1p69i0.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:13:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxzgfp0c.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphufn3yb5.scala:11:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = i\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (i : Any)\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphufn3yb5.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elm = 0\n        for (elm <- lst.asInstanceOf[List[Any]]) {\n            if (elm.toString.length > max) {\n                max = elm.toString.length\n                max_elm = elm\n            }\n        }\n        max_elm\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122662,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbe90j28m.scala:11:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_elm = elm\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (elm : Any)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbe90j28m.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbe90j28m.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbe90j28m.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw2147cno.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw2147cno.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw2147cno.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw2147cno.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = elem\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk5n8shgf.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk5n8shgf.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk5n8shgf.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk5n8shgf.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsqse787_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4go84orc.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case h :: t => {\n                val max = FindMax(t)\n                max match {\n                    case Nil => h\n                    case _ => if (h.toString.length > max.toString.length) h else max\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4i30is_k.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4i30is_k.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4i30is_k.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4i30is_k.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzivg8lta.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:16:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfou2k8r.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe3stswom.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxj3kpzha.scala:8:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- lst) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value foreach is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxj3kpzha.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt730jmj.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt730jmj.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt730jmj.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt730jmj.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = 0\n        var max_element = 0\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length > max) {\n                max = lst1(i).asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return lst1(max_element)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122662,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2375tszg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2375tszg.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2375tszg.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2375tszg.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = x\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122661,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hb47qz_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hb47qz_.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hb47qz_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hb47qz_.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:15:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0resj_u5.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = lst1(0).asInstanceOf[List[Any]].length\n        var max_index = 0\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length > max) {\n                max = lst1(i).asInstanceOf[List[Any]].length\n                max_index = i\n            }\n        }\n        lst1(max_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122662,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuirimb6u.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuirimb6u.scala:18:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuirimb6u.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuirimb6u.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var maxElement = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                maxElement = i\n            }\n        }\n        return maxElement\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122663,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplbf6bxsi.scala:11:29 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                maxElement = i\n\u001b[31m\u001b[31m   |\u001b[0m                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                             Found:    (i : Any)\n\u001b[31m   |\u001b[0m                             Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplbf6bxsi.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplbf6bxsi.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplbf6bxsi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:7:26 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mmax_element\u001b[0m = lst(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmto6ze5q.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to lst.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value length is not a member of Any\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:9:16 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (lst(i).toString.length > max) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                max = lst(i).toString.length\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpmto6ze5q.scala:11:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                max_element = lst(i)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              \u001b[33mparameter\u001b[0m \u001b[35mlst\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmto6ze5q.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n        var max = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem\n    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666122662,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyxb6hpd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyxb6hpd.scala:17:106 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m)))).equals((Any(\u001b[31m\"A\"\u001b[0m, \u001b[31m\"B\"\u001b[0m, \u001b[31m\"C\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyxb6hpd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyxb6hpd.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMax((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
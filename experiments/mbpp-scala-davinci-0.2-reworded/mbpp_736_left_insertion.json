{
  "name": "mbpp_736_left_insertion",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/scalathon-exercises/data-structures-and-algorithms/scalathon-data-structure-exercise-24.php\n    def leftInsertion(a : List[Long], x : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(leftInsertion((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 5l.toLong)), (6l)) == (4l));\n    assert(leftInsertion((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 5l.toLong)), (3l)) == (2l));\n    assert(leftInsertion((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 5l.toLong)), (7l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        return i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid\n            else left = mid + 1\n        }\n        if (a(left) >= x) left\n        else left + 1",
    "        var index = 0\n        for (i <- a) {\n            if (i < x) index += 1\n        }\n        index",
    "        var index = 0\n        for (i <- 0 until a.length) {\n            if (a(i) < x) index = i + 1\n        }\n        index",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        val index = a.indexWhere(x <= _)\n        if (index == -1) a.length else index",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var low = 0\n        var high = a.length - 1\n        while (low <= high) {\n            val mid = (low + high) / 2\n            if (a(mid) < x) low = mid + 1\n            else high = mid - 1\n        }\n        low",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m\n            else l = m + 1\n        }\n        if (a(l) >= x) l else l + 1",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        return i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        if (a.length == 0) return 0\n        if (a.length == 1) return if (a(0) < x) 1 else 0\n        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) return left + 1\n        else return left",
    "        var l = 0;\n        var r = a.length - 1;\n        while (l <= r) {\n            val m = (l + r) / 2;\n            if (a(m) < x) l = m + 1;\n            else r = m - 1;\n        }\n        l;",
    "        var left = 0\n        var right = a.length - 1\n        var mid = 0\n        while (left <= right) {\n            mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1\n        else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid\n            else left = mid + 1\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid\n            else left = mid + 1\n        }\n        if (a(left) >= x) left else left + 1",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m - 1\n            else l = m + 1\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid\n            else left = mid + 1\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var l = 0\n        var r = a.length - 1\n        var m = (l + r) / 2\n        while (l <= r) {\n            m = (l + r) / 2\n            if (a(m) == x) return m\n            else if (a(m) > x) r = m - 1\n            else l = m + 1\n        }\n        if (a(m) < x) m + 1 else m",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1\n        else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var i = 0\n        var j = a.length - 1\n        while (i < j) {\n            val mid = (i + j) / 2\n            if (a(mid) < x) i = mid + 1\n            else j = mid\n        }\n        if (a(i) < x) i + 1\n        else i",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) == x) return m\n            else if (a(m) > x) r = m - 1\n            else l = m + 1\n        }\n        l",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        return i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var i = 0\n        var j = a.length - 1\n        while (i <= j) {\n            val mid = (i + j) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) j = mid - 1\n            else i = mid + 1\n        }\n        return i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = left + (right - left) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m - 1\n            else l = m + 1\n        }\n        l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        return i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = left + (right - left) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1\n        else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        return i",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        def leftInsertion(a : List[Long], x : Long, l : Long, r : Long) : Long = {\n            if (l > r) l\n            else {\n                val m = (l + r) / 2\n                if (a(m.toInt) == x) leftInsertion(a, x, l, m - 1)\n                else if (a(m.toInt) > x) leftInsertion(a, x, l, m - 1)\n                else leftInsertion(a, x, m + 1, r)\n            }\n        }\n        leftInsertion(a, x, 0, a.length - 1)",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m - 1\n            else l = m + 1\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var i = 0\n        while(i < a.length && a(i) < x) i += 1\n        return i",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var left = 0\n        var right = a.length - 1\n        var mid = 0\n        while (left <= right) {\n            mid = left + (right - left) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m\n            else l = m + 1\n        }\n        if (a(l) < x) l + 1\n        else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        return i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var left = 0\n        var right = a.length - 1\n        var mid = 0\n        while (left <= right) {\n            mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        return l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val mid = (l + r) / 2\n            if (a(mid) >= x) r = mid\n            else l = mid + 1\n        }\n        if (a(l) < x) l + 1 else l",
    "        var low = 0\n        var high = a.length - 1\n        while (low <= high) {\n            val mid = (low + high) / 2\n            if (a(mid) < x) low = mid + 1\n            else high = mid - 1\n        }\n        low",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        left",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m - 1\n            else l = m + 1\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        var mid = 0\n        while (left <= right) {\n            mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) > x) right = mid - 1\n            else left = mid + 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1 else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        left",
    "        def search(l : Long, r : Long) : Long = {\n            if (l > r) return l\n            val m = (l + r) / 2\n            if (a(m.toInt) == x) return m\n            else if (a(m.toInt) > x) search(l, m - 1)\n            else search(m + 1, r)\n        }\n        search(0, a.length - 1)",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1 else left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = left + (right - left) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var i = 0\n        while (i < a.length && a(i) < x) {\n            i += 1\n        }\n        i",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        if (a(l) < x) l + 1\n        else l",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m\n            else l = m + 1\n        }\n        if (a(l) >= x) l\n        else l + 1",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) >= x) right = mid - 1\n            else left = mid + 1\n        }\n        left",
    "        var left = 0\n        var right = a.length - 1\n        while (left < right) {\n            val mid = (left + right) / 2\n            if (a(mid) < x) left = mid + 1\n            else right = mid\n        }\n        if (a(left) < x) left + 1\n        else left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        i",
    "        var left = 0\n        var right = a.length - 1\n        while (left <= right) {\n            val mid = (left + right) / 2\n            if (a(mid) == x) return mid\n            else if (a(mid) < x) left = mid + 1\n            else right = mid - 1\n        }\n        return left",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) >= x) r = m\n            else l = m + 1\n        }\n        if (a(l) >= x) l else l + 1",
    "        var l = 0\n        var r = a.length - 1\n        while (l <= r) {\n            val m = (l + r) / 2\n            if (a(m) == x) return m\n            else if (a(m) < x) l = m + 1\n            else r = m - 1\n        }\n        l",
    "        var i = 0\n        while(i < a.length && a(i) < x) {\n            i += 1\n        }\n        return i",
    "        var l = 0\n        var r = a.length - 1\n        while (l < r) {\n            val m = (l + r) / 2\n            if (a(m) < x) l = m + 1\n            else r = m\n        }\n        l",
    "        var i = 0\n        while (i < a.length && a(i) < x) i += 1\n        return i",
    "        var i = 0\n        var j = a.length - 1\n        while (i <= j) {\n            val m = (i + j) / 2\n            if (a(m) < x) i = m + 1\n            else j = m - 1\n        }\n        i"
  ]
}
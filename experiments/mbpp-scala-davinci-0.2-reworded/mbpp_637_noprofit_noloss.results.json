{
  "name": "mbpp_637_noprofit_noloss",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount)\n            true\n        else\n            false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        return (actual_cost == sale_amount)\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        actual_cost == sale_amount\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if (actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    def noprofitNoloss(actual_cost : Long, sale_amount : Long) : Boolean = {\n        if(actual_cost == sale_amount) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(noprofitNoloss((1500l), (1200l)) == (false));\n    assert(noprofitNoloss((100l), (100l)) == (true));\n    assert(noprofitNoloss((2000l), (5000l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510451,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_428_shell_sort",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort the given list by using shell sort.\n    def shellSort(my_list : List[Long]) : List[Long] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(shellSort((List[Long](12l.toLong, 23l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 2l.toLong, 12l.toLong, 81l.toLong, 56l.toLong, 95l.toLong))).equals((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 12l.toLong, 12l.toLong, 23l.toLong, 56l.toLong, 81l.toLong, 95l.toLong))));\n    assert(shellSort((List[Long](24l.toLong, 22l.toLong, 39l.toLong, 34l.toLong, 87l.toLong, 73l.toLong, 68l.toLong))).equals((List[Long](22l.toLong, 24l.toLong, 34l.toLong, 39l.toLong, 68l.toLong, 73l.toLong, 87l.toLong))));\n    assert(shellSort((List[Long](32l.toLong, 30l.toLong, 16l.toLong, 96l.toLong, 82l.toLong, 83l.toLong, 74l.toLong))).equals((List[Long](16l.toLong, 30l.toLong, 32l.toLong, 74l.toLong, 82l.toLong, 83l.toLong, 96l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var h = 1\n        while (h < list.length / 3) h = 3 * h + 1\n        while (h >= 1) {\n            for (i <- h until list.length) {\n                var j = i\n                while (j >= h && list(j) < list(j - h)) {\n                    val temp = list(j)\n                    list(j) = list(j - h)\n                    list(j - h) = temp\n                    j -= h\n                }\n            }\n            h /= 3\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j -= gap\n                }\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                var temp = list(i)\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list = list.updated(j, list(j - gap))\n                    list = list.updated(j - gap, temp)\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        return list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j -= gap\n                }\n                list(j) = temp\n            }\n            gap /= 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var temp = list(i)\n                var j = i\n                while (j >= gap && list(j - gap) > temp) {\n                    list(j) = list(j - gap)\n                    j = j - gap\n                }\n                list(j) = temp\n            }\n            gap = gap / 2\n        }\n        list",
    "        var list = my_list\n        var gap = list.length / 2\n        while (gap > 0) {\n            for (i <- gap until list.length) {\n                var j = i\n                while (j >= gap && list(j - gap) > list(j)) {\n                    val temp = list(j)\n                    list(j) = list(j - gap)\n                    list(j - gap) = temp\n                    j = j - gap\n                }\n            }\n            gap = gap / 2\n        }\n        list"
  ]
}
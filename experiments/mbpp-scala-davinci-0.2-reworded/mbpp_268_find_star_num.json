{
  "name": "mbpp_268_find_star_num",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the n'th star number.\n    def findStarNum(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findStarNum((3l)) == (37l));\n    assert(findStarNum((4l)) == (73l));\n    assert(findStarNum((5l)) == (121l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var x = 1L\n        var count = 0L\n        while (count < n) {\n            x += 1\n            if (isStarNum(x)) count += 1\n        }\n        return x",
    "        var i = 1L\n        var j = 1L\n        var k = 1L\n        var count = 0L\n        while (count < n) {\n            if (i == j && j == k) {\n                count += 1\n                if (count == n) return i\n            }\n            i += 1\n            j = i * i\n            k = i * i * i\n        }\n        -1",
    "        var result = 0L\n        var i = 1L\n        while (i <= n) {\n            result += i\n            i += 1\n        }\n        result",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            if (isStarNum(i)) count += 1;\n            i += 1;\n        }\n        return i - 1;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var cnt = 0L\n        while (cnt < n) {\n            if (isStarNum(i)) cnt += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) count += 1;\n            i += 1;\n        }\n        return i - 1;",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        val sqrtN = sqrt(n).toLong\n        val sqrtN2 = sqrt(sqrtN).toLong\n        val sqrtN3 = sqrt(sqrtN2).toLong\n        val sqrtN4 = sqrt(sqrtN3).toLong\n        val sqrtN5 = sqrt(sqrtN4).toLong\n        val sqrtN6 = sqrt(sqrtN5).toLong\n        val sqrtN7 = sqrt(sqrtN6).toLong\n        val sqrtN8 = sqrt(sqrtN7).toLong\n        val sqrtN9 = sqrt(sqrtN8).toLong\n        val sqrtN10 = sqrt(sqrtN9).toLong\n        val sqrtN11 = sqrt(sqrtN10).toLong\n        val sqrtN12 = sqrt(sqrtN11).toLong\n        val sqrtN13 = sqrt(sqrtN12).toLong\n        val sqrtN14 = sqrt(sqrtN13).toLong\n        val sqrtN15 = sqrt(sqrtN14).toLong\n        val sqrtN16 = sqrt(sqrtN15).toLong\n        val sqrtN17 = sqrt(sqrtN16).toLong\n        val sqrtN18 = sqrt(sqrtN17).toLong\n        val sqrtN19 = sqrt(sqrtN18).toLong\n        val sqrtN20 = sqrt(sqrtN19).toLong\n        val sqrtN21 = sqrt(sqrtN20).toLong\n        val sqrtN22 = sqrt(sqrtN21).toLong\n        val sqrtN23 = sqrt(sqrtN22).toLong\n        val sqrtN24 = sqrt(sqrtN23).toLong\n        val sqrtN25 = sqrt(sqrtN24).toLong\n        val sqrtN26 = sqrt(sqrtN25).toLong\n        val sqrtN27 = sqrt(sqrtN26).toLong\n        val sqrtN28 = sqrt(sqrtN27).toLong\n        val sqrtN29 = sqrt(sqrt",
    "        var i = 1;\n        var j = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            j = i * i;\n            if (j.toString.reverse == j.toString) {\n                count += 1;\n            }\n        }\n        return j;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                if (count == n) return i\n            }\n            i += 1\n        }\n        return -1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        val s = Stream.from(1).map(x => x * x).filter(x => x % 10 == 1 || x % 10 == 9)\n        s(n.toInt - 1)",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L; var j = 1L; var k = 1L;\n        while (k < n) {\n            i += 1; j += 2; k += j;\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        def findStarNumHelper(n : Long, acc : Long) : Long = {\n            if (acc == n) return n\n            findStarNumHelper(n, acc + 1)\n        }\n        findStarNumHelper(n, 1)",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        i",
    "        val sqrtN = sqrt(n).toLong\n        val sqrtN2 = sqrt(sqrtN).toLong\n        val sqrtN3 = sqrt(sqrtN2).toLong\n        val sqrtN4 = sqrt(sqrtN3).toLong\n        val sqrtN5 = sqrt(sqrtN4).toLong\n        val sqrtN6 = sqrt(sqrtN5).toLong\n        val sqrtN7 = sqrt(sqrtN6).toLong\n        val sqrtN8 = sqrt(sqrtN7).toLong\n        val sqrtN9 = sqrt(sqrtN8).toLong\n        val sqrtN10 = sqrt(sqrtN9).toLong\n        val sqrtN11 = sqrt(sqrtN10).toLong\n        val sqrtN12 = sqrt(sqrtN11).toLong\n        val sqrtN13 = sqrt(sqrtN12).toLong\n        val sqrtN14 = sqrt(sqrtN13).toLong\n        val sqrtN15 = sqrt(sqrtN14).toLong\n        val sqrtN16 = sqrt(sqrtN15).toLong\n        val sqrtN17 = sqrt(sqrtN16).toLong\n        val sqrtN18 = sqrt(sqrtN17).toLong\n        val sqrtN19 = sqrt(sqrtN18).toLong\n        val sqrtN20 = sqrt(sqrtN19).toLong\n        val sqrtN21 = sqrt(sqrtN20).toLong\n        val sqrtN22 = sqrt(sqrtN21).toLong\n        val sqrtN23 = sqrt(sqrtN22).toLong\n        val sqrtN24 = sqrt(sqrtN23).toLong\n        val sqrtN25 = sqrt(sqrtN24).toLong\n        val sqrtN26 = sqrt(sqrtN25).toLong\n        val sqrtN27 = sqrt(sqrtN26).toLong\n        val sqrtN28 = sqrt(sqrtN27).toLong\n        val sqrtN29 = sqrt(sqrt",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1;\n            }\n            i += 1;\n        }\n        return i - 1;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i % 2 == 0) {\n                if (i % 3 == 0) {\n                    if (i % 5 == 0) {\n                        count += 1\n                    }\n                }\n            }\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (i.toString.contains(\"*\")) count += 1;\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var j = 1L\n        var k = 1L\n        while (i < n) {\n            j += 2\n            k += j\n            i += 1\n        }\n        k",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1;\n            }\n            i += 1;\n        }\n        i - 1;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (i.toString.contains(\"*\")) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        return i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var x = 1L\n        var y = 1L\n        var i = 1L\n        while (i < n) {\n            x += 2\n            y += x\n            i += 1\n        }\n        y",
    "        var cnt = 0L\n        var i = 1L\n        while (cnt < n) {\n            if (isStarNum(i)) cnt += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i % 2 == 0) {\n                var j = 2\n                var flag = true\n                while (j <= sqrt(i).toInt) {\n                    if (i % j == 0) {\n                        flag = false\n                        j = sqrt(i).toInt + 1\n                    }\n                    j += 1\n                }\n                if (flag) count += 1\n            }\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 1L\n        while (count < n) {\n            i += 2\n            if (isPrime(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var starNum = 1L\n        var i = 1L\n        while (i < n) {\n            starNum += 4 * i + 1\n            i += 1\n        }\n        starNum",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var j = 1L\n        while (i < n) {\n            j += 2\n            i += j\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                if (count == n) return i\n            }\n            i += 1\n        }\n        return -1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1\n        var j = 1\n        var count = 0\n        while (count < n) {\n            if (i % j == 0) {\n                count += 1\n                if (count == n) return i\n            }\n            i += 1\n            if (i % j == 0) j += 1\n        }\n        return -1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var j = 1L\n        var k = 1L\n        while (k < n) {\n            i += 1\n            j += 2\n            k += j\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        val sqrtN = sqrt(n).toLong\n        val sqrtN2 = sqrt(n / 2).toLong\n        val sqrtN3 = sqrt(n / 3).toLong\n        val sqrtN4 = sqrt(n / 4).toLong\n        val sqrtN5 = sqrt(n / 5).toLong\n        val sqrtN6 = sqrt(n / 6).toLong\n        val sqrtN7 = sqrt(n / 7).toLong\n        val sqrtN8 = sqrt(n / 8).toLong\n        val sqrtN9 = sqrt(n / 9).toLong\n        val sqrtN10 = sqrt(n / 10).toLong\n        val sqrtN11 = sqrt(n / 11).toLong\n        val sqrtN12 = sqrt(n / 12).toLong\n        val sqrtN13 = sqrt(n / 13).toLong\n        val sqrtN14 = sqrt(n / 14).toLong\n        val sqrtN15 = sqrt(n / 15).toLong\n        val sqrtN16 = sqrt(n / 16).toLong\n        val sqrtN17 = sqrt(n / 17).toLong\n        val sqrtN18 = sqrt(n / 18).toLong\n        val sqrtN19 = sqrt(n / 19).toLong\n        val sqrtN20 = sqrt(n / 20).toLong\n        val sqrtN21 = sqrt(n / 21).toLong\n        val sqrtN22 = sqrt(n / 22).toLong\n        val sqrtN23 = sqrt(n / 23).toLong\n        val sqrtN24 = sqrt(n / 24).toLong\n        val sqrtN25 = sqrt(n / 25).toLong\n        val sqrtN26 = sqrt(n / 26).toLong\n        val sqrtN27 = sqrt(n / 27).toLong\n        val sqrtN28 = sqrt(n / 28).toLong\n        val sqrtN29 = sqrt(n / 29).toLong\n        val sqrtN30 = sqrt(n / 30).toLong\n        val sqrt",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 0L\n        var j = 0L\n        var k = 0L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            j = i * i\n            k = j * i\n            if (j % k == 0) count += 1\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        def findStarNum(n : Long, i : Long, acc : Long) : Long = {\n            if (i == n) acc\n            else findStarNum(n, i + 1, acc + i * i)\n        }\n        findStarNum(n, 1, 0)",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            i += 1\n            if (i % 2 == 1) {\n                var j = 1L\n                while (j * j <= i) {\n                    if (i % j == 0) count += 1\n                    j += 1\n                }\n            }\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        def findStarNumHelper(n : Long, i : Long, acc : Long) : Long = {\n            if (n == i) acc\n            else findStarNumHelper(n, i + 1, acc + i * i)\n        }\n        findStarNumHelper(n, 1, 0)",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1\n        var starNum = 0\n        while (i <= n) {\n            starNum += i\n            i += 1\n        }\n        return starNum",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        i - 1",
    "        var i = 1;\n        var count = 0;\n        var starNum = 0;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1;\n                starNum = i;\n            }\n            i += 1;\n        }\n        starNum",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var starNum = 1L\n        var i = 1L\n        while (i < n) {\n            starNum += 4 * i\n            i += 1\n        }\n        starNum",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains('*')) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            val s = i.toString\n            if (s.contains('0') || s.contains('1') || s.contains('2')) {\n                i += 1\n            } else {\n                count += 1\n                if (count == n) return i\n                i += 1\n            }\n        }\n        0",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        var starNum = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                starNum = i\n            }\n            i += 1\n        }\n        return starNum",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n            }\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStar(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n        }\n        j",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        while (i * i * i <= n) i += 1\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        var starNum = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n                starNum = i\n            }\n        }\n        starNum",
    "        var i = 1L\n        while(i * (i + 1) / 2 < n) i += 1\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var count = 0L\n        var i = 1L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n        }\n        j",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) {\n                count += 1;\n            }\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStar(i)) count += 1\n        }\n        return i",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        return i;",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L;\n        while (i * i <= n) {\n            i += 1;\n        }\n        i - 1;",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            i += 2\n            j += i\n            count += 1\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var c = 0L\n        while (c < n) {\n            i += 1\n            if (isStarNum(i)) c += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        var j = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) {\n                count += 1\n                j = i\n            }\n            i += 1\n        }\n        j",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 1L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L;\n        var count = 0L;\n        while (count < n) {\n            i += 1;\n            if (i.toString.contains('0')) {\n                var j = i;\n                var flag = true;\n                while (j > 0) {\n                    if (j % 10 == 0) flag = false;\n                    j /= 10;\n                }\n                if (flag) count += 1;\n            }\n        }\n        return i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1\n        var count = 0\n        var starNum = 0\n        while (count < n) {\n            if (isStarNum(i)) {\n                starNum = i\n                count += 1\n            }\n            i += 1\n        }\n        return starNum",
    "        var i = 1;\n        var count = 0;\n        while (count < n) {\n            i += 1;\n            if (isStarNum(i)) count += 1;\n        }\n        i;",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        i - 1",
    "        var i = 1L\n        while (i * i * i < n) i += 1\n        i",
    "        var i = 1\n        var count = 0\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        return i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            if (isStarNum(i)) count += 1\n            i += 1\n        }\n        return i - 1",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (isStarNum(i)) count += 1\n        }\n        i",
    "        var i = 1L\n        var count = 0L\n        while (count < n) {\n            i += 1\n            if (i.toString.contains(\"*\")) count += 1\n        }\n        i"
  ]
}
{
  "name": "mbpp_579_find_dissimilar",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_579_find_dissimilar.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_product = tup1_diff.product\n        val tup2_diff_product = tup2_diff.product\n        val tup1_diff_sum_product = tup1_diff_sum * tup1_diff_product\n        val tup2_diff_sum_product = tup2_diff_sum * tup2_diff_product\n        val tup1_diff_sum_product_sum = tup1_diff_sum_product.toString.toList.map(_.asDigit).sum\n        val tup2_diff_sum_product_sum = tup2_diff_sum_product.toString.toList.map(_.asDigit).sum\n        val tup1_diff_sum_product_sum_product = tup1_diff_sum_product_sum * tup1_diff_product\n        val tup2_diff_sum_product_sum_product = tup2_diff_sum_product_sum * tup2_diff_product\n        val tup1_diff_sum_product_sum_product_sum = tup1_diff_sum_product_sum_product.toString.toList.map(_.asDigit).sum\n        val tup2_diff_sum_product_sum_product_sum = tup2_diff_sum_product_sum_product.toString.toList.map(_.asDigit).sum\n        val tup1_diff_sum_product\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmofgqw5v.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmofgqw5v.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmofgqw5v.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmofgqw5v.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmofgqw5v.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzfjybd0.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzfjybd0.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzfjybd0.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzfjybd0.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        while (tup1 > 0) {\n            count += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            count += 1\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkuwwsffa.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkuwwsffa.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkuwwsffa.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkuwwsffa.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_str = tup1_diff_list.map(_.toString).mkString(\"\")\n        val tup2_diff_list_str = tup2_diff_list.map(_.toString).mkString(\"\")\n        val tup1_diff_list_str_int = tup1_diff_list_str.toInt\n        val tup2_diff_list_str_int = tup2_diff_list_str.toInt\n        val tup1_diff_list_str_int_rev = tup1_diff_list_str_int.toString.reverse.toInt\n        val tup2_diff_list_str_int_rev = tup2_diff_list_str_int.toString.reverse.toInt\n        val tup1_diff_list_str_int_rev_str = tup1_diff_list_str_int_rev.toString\n        val tup2_diff_list_str_int_rev_str = tup2_diff_list_str_int_rev.toString\n        val tup1_diff_list_str_int_rev_str_len = tup1_diff_list_str_int_rev_str.length\n        val tup2_diff_list_str_int_rev_str_len = tup2_diff_list_str_int_rev_str.length\n        val tup1_diff_list\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2_yht1w2.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_yht1w2.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_yht1w2.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_yht1w2.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_yht1w2.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).sorted\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).sorted\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        if (tup1_diff_sum_prod > tup2_diff_sum_prod) tup1_diff_sum_prod else tup2_diff_sum_prod\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7mmlvy.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7mmlvy.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7mmlvy.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzs7mmlvy.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_int = tup1_diff_list.map(x => x.toString.toInt)\n        val tup2_diff_list_int = tup2_diff_list.map(x => x.toString.toInt)\n        val tup1_diff_list_int_sum = tup1_diff_list_int.sum\n        val tup2_diff_list_int_sum = tup2_diff_list_int.sum\n        val result = tup1_diff_list_int_sum * tup2_diff_list_int_sum\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cega98c.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cega98c.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cega98c.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cega98c.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val dissimilar = tup1_dissimilar ++ tup2_dissimilar\n        val dissimilar_str = dissimilar.mkString\n        dissimilar_str.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12u3u0ph.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12u3u0ph.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12u3u0ph.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12u3u0ph.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var count = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpubagdq5h.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpubagdq5h.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpubagdq5h.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpubagdq5h.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList.map(_.toString.toInt)\n        val tup2_diff_list = tup2_diff.toList.map(_.toString.toInt)\n        val tup1_diff_sum = tup1_diff_list.foldLeft(0)(_ + _)\n        val tup2_diff_sum = tup2_diff_list.foldLeft(0)(_ + _)\n        val tup1_diff_sum_str = tup1_diff_sum.toString\n        val tup2_diff_sum_str = tup2_diff_sum.toString\n        val tup1_diff_sum_str_list = tup1_diff_sum_str.toList.map(_.toString.toInt)\n        val tup2_diff_sum_str_list = tup2_diff_sum_str.toList.map(_.toString.toInt)\n        val tup1_diff_sum_str_list_set = tup1_diff_sum_str_list.toSet\n        val tup2_diff_sum_str_list_set = tup2_diff_sum_str_list.toSet\n        val tup1_diff_sum_str_list_diff = tup1_diff_sum_str_list_set.diff(tup2_diff_sum_str_list_set)\n        val tup2_diff_sum_str_list_diff = tup2_diff_sum_str_list_set.diff(tup1_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbtq97w_h.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbtq97w_h.scala:23:74 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup2_diff_sum_str_list_diff\u001b[0m = tup2_diff_sum_str_list_set.diff(tup1_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                        Not found: tup1_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbtq97w_h.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbtq97w_h.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbtq97w_h.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesl8hq1b.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesl8hq1b.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesl8hq1b.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesl8hq1b.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if (tup1 > 0) count += tup1.toString.length\n        if (tup2 > 0) count += tup2.toString.length\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_set_diff = tup1_set.diff(tup2_set)\n        val tup2_set_diff = tup2_set.diff(tup1_set)\n        val tup1_set_diff_list = tup1_set_diff.toList\n        val tup2_set_diff_list = tup2_set_diff.toList\n        val tup1_set_diff_list_str = tup1_set_diff_list.map(_.toString)\n        val tup2_set_diff_list_str = tup2_set_diff_list.map(_.toString)\n        val tup1_set_diff_list_str_str = tup1_set_diff_list_str.mkString\n        val tup2_set_diff_list_str_str = tup2_set_diff_list_str.mkString\n        val tup1_set_diff_list_str_str_long = tup1_set_diff_list_str_str.toLong\n        val tup2_set_diff_list_str_str_long = tup2_set_diff_list_str_str.toLong\n        val tup1_set_diff_list_str_str_long_rev = tup1_set_diff_list_str_str_long.toString.reverse.toLong\n        val tup2_set_diff_list_str_str_long_rev = tup2_set_diff_list_str_str_long.toString.reverse.toLong\n        val tup1_set_diff_list_str_str_long_rev_str = tup1_set_diff_list_str_str_long_rev.toString\n        val tup\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122806,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr010_i6k.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr010_i6k.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr010_i6k.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr010_i6k.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr010_i6k.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).sorted\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).sorted\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList.sorted\n        val tup2_diff_list = tup2_diff.toList.sorted\n        val tup1_diff_str = tup1_diff_list.map(_.toString).mkString\n        val tup2_diff_str = tup2_diff_list.map(_.toString).mkString\n        val tup1_diff_num = tup1_diff_str.toLong\n        val tup2_diff_num = tup2_diff_str.toLong\n        val result = tup1_diff_num + tup2_diff_num\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2kqchci.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var dissimilar = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) dissimilar += 1\n        }\n        dissimilar\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpap4vl180.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpap4vl180.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpap4vl180.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpap4vl180.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_str = tup1_diff_list.mkString\n        val tup2_diff_list_str = tup2_diff_list.mkString\n        val tup1_diff_list_str_int = tup1_diff_list_str.toInt\n        val tup2_diff_list_str_int = tup2_diff_list_str.toInt\n        val result = tup1_diff_list_str_int + tup2_diff_list_str_int\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71jnp83a.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71jnp83a.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71jnp83a.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71jnp83a.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        for (i <- 0 to 63) {\n            if (((tup1 >> i) & 1) != ((tup2 >> i) & 1)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt64cs212.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt64cs212.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt64cs212.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt64cs212.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.map(_.toString.toLong).sum\n        val tup2_diff_sum = tup2_diff.map(_.toString.toLong).sum\n        val result = tup1_diff_sum + tup2_diff_sum\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpweruaiqv.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpweruaiqv.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpweruaiqv.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpweruaiqv.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) {\n                result += pow(10, i).toLong\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsn39g1c7.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsn39g1c7.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsn39g1c7.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsn39g1c7.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        val tup1_diff_sum_prod_str = tup1_diff_sum_prod.toString\n        val tup2_diff_sum_prod_str = tup2_diff_sum_prod.toString\n        val tup1_diff_sum_prod_str_len = tup1_diff_sum_prod_str.length\n        val tup2_diff_sum_prod_str_len = tup2_diff_sum_prod_str.length\n        val tup1_diff_sum_prod_str_len_diff = abs(tup1_diff_sum_prod_str_len - tup2_diff_sum_prod_str_len)\n        val tup1_diff_sum_prod_str_len_diff_str = tup1_diff_sum_prod_str_len_diff.toString\n        val tup1_diff_sum_prod_str_len_diff_str_len = tup1_diff_sum_prod_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122806,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9lfz58a.scala:24:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup1_diff_sum_prod_str_len_diff_str_len\u001b[0m = tup1_diff_sum_prod_\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: tup1_diff_sum_prod_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if (tup1 > 0) {\n            while (tup1 > 0) {\n                count += 1\n                tup1 /= 10\n            }\n        }\n        if (tup2 > 0) {\n            while (tup2 > 0) {\n                count += 1\n                tup2 /= 10\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgtd12ui.scala:31:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgtd12ui.scala:31:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgtd12ui.scala:32:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgtd12ui.scala:32:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.asDigit)\n        val tup2 = test_tup2.toString.toList.map(x => x.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_str = tup1_diff_list.map(x => x.toString)\n        val tup2_diff_list_str = tup2_diff_list.map(x => x.toString)\n        val tup1_diff_list_str_joined = tup1_diff_list_str.mkString\n        val tup2_diff_list_str_joined = tup2_diff_list_str.mkString\n        val tup1_diff_list_str_joined_num = tup1_diff_list_str_joined.toLong\n        val tup2_diff_list_str_joined_num = tup2_diff_list_str_joined.toLong\n        val tup1_diff_list_str_joined_num_str = tup1_diff_list_str_joined_num.toString\n        val tup2_diff_list_str_joined_num_str = tup2_diff_list_str_joined_num.toString\n        val tup1_diff_list_str_joined_num_str_list = tup1_diff_list_str_joined_num_str.toList.map(x => x.asDigit)\n        val tup2_diff_list_str_joined_num_str_list = tup2_diff_list_str_joined_num_str.toList.map(x =>\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122806,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpxuqp7iqm.scala:23:102 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup2_diff_list_str_joined_num_str_list\u001b[0m = tup2_diff_list_str_joined_num_str.toList.map(\u001b[36mx\u001b[0m =>\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxuqp7iqm.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxuqp7iqm.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxuqp7iqm.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compi",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_num = tup1_dissimilar.map(x => tup1.count(_ == x)).sum\n        val tup2_dissimilar_num = tup2_dissimilar.map(x => tup2.count(_ == x)).sum\n        tup1_dissimilar_num + tup2_dissimilar_num\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122820,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6k_314_.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6k_314_.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6k_314_.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6k_314_.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122820,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val dissimilar = tup1_dissimilar.union(tup2_dissimilar)\n        val result = dissimilar.foldLeft(0)((a, b) => a * 10 + b)\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122819,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_hgdr7r.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_hgdr7r.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_hgdr7r.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_hgdr7r.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toCharArray.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toCharArray.map(_.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpva9a1twn.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpva9a1twn.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpva9a1twn.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpva9a1twn.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp921a_9gv.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp921a_9gv.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp921a_9gv.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp921a_9gv.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        for (i <- 0 until tup1_diff_list.length) {\n            result += tup1_diff_list(i).toString.toLong * pow(10, i).toLong\n        }\n        for (i <- 0 until tup2_diff_list.length) {\n            result += tup2_diff_list(i).toString.toLong * pow(10, i + tup1_diff_list.length).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpecn793dd.scala:24:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpecn793dd.scala:24:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpecn793dd.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpecn793dd.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_sum = tup1_dissimilar.map(x => pow(10, tup1.indexOf(x))).sum\n        val tup2_dissimilar_sum = tup2_dissimilar.map(x => pow(10, tup2.indexOf(x))).sum\n        tup1_dissimilar_sum + tup2_dissimilar_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheocd0ke.scala:14:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        tup1_dissimilar_sum + tup2_dissimilar_sum\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheocd0ke.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheocd0ke.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheocd0ke.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 || tup2 > 0) {\n            if((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50mn_pk0.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50mn_pk0.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50mn_pk0.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50mn_pk0.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_sum = tup1_dissimilar.map(x => pow(10, tup1.indexOf(x)).toLong).sum\n        val tup2_dissimilar_sum = tup2_dissimilar.map(x => pow(10, tup2.indexOf(x)).toLong).sum\n        tup1_dissimilar_sum + tup2_dissimilar_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxs2ndyv.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxs2ndyv.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxs2ndyv.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxs2ndyv.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_set_diff = tup1_set.diff(tup2_set)\n        val tup2_set_diff = tup2_set.diff(tup1_set)\n        val tup1_diff = tup1_set_diff.map(x => tup1.count(_ == x)).sum\n        val tup2_diff = tup2_set_diff.map(x => tup2.count(_ == x)).sum\n        tup1_diff + tup2_diff\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hjfb518.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hjfb518.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hjfb518.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6hjfb518.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var res = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) res += pow(10, i).toLong\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaol1r9bm.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaol1r9bm.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaol1r9bm.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaol1r9bm.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefwsc7de.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        val tup1_diff_sum_prod_str = tup1_diff_sum_prod.toString\n        val tup2_diff_sum_prod_str = tup2_diff_sum_prod.toString\n        val tup1_diff_sum_prod_str_len = tup1_diff_sum_prod_str.length\n        val tup2_diff_sum_prod_str_len = tup2_diff_sum_prod_str.length\n        val tup1_diff_sum_prod_str_len_diff = abs(tup1_diff_sum_prod_str_len - tup2_diff_sum_prod_str_len)\n        val tup1_diff_sum_prod_str_len_diff_str = tup1_diff_sum_prod_str_len_diff.toString\n        val tup1_diff_sum_prod_str_len_diff_str_len = tup1_diff_sum_prod_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122806,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9lfz58a.scala:24:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup1_diff_sum_prod_str_len_diff_str_len\u001b[0m = tup1_diff_sum_prod_\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: tup1_diff_sum_prod_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var count = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd28kuel.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd28kuel.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd28kuel.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd28kuel.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.map(x => x.asDigit).toSet\n        val tup2 = test_tup2.toString.map(x => x.asDigit).toSet\n        val tup3 = tup1.diff(tup2)\n        val tup4 = tup2.diff(tup1)\n        val tup5 = tup3.union(tup4)\n        val tup6 = tup5.map(x => x.toString).mkString.toLong\n        return tup6\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgq856law.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgq856law.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgq856law.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgq856law.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(x => x.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(x => x.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) {\n                result = result + pow(10, i).toLong\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp99u6r5lo.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp99u6r5lo.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp99u6r5lo.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp99u6r5lo.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122820,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjq0xwwr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjq0xwwr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjq0xwwr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjq0xwwr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsy26gar.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsy26gar.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsy26gar.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsy26gar.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_91ultf.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).toSet\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).toSet\n        val tup3 = tup1.diff(tup2)\n        val tup4 = tup2.diff(tup1)\n        val tup5 = tup3.union(tup4)\n        val tup6 = tup5.toList.map(_.toString).mkString(\"\").toLong\n        return tup6\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122835,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjeeodx5.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjeeodx5.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjeeodx5.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjeeodx5.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 || tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122835,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr4s6dt1g.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr4s6dt1g.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr4s6dt1g.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr4s6dt1g.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var count = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j8_p8iq.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j8_p8iq.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j8_p8iq.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0j8_p8iq.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9jwxs0hq.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9jwxs0hq.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9jwxs0hq.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9jwxs0hq.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) sum += pow(2, i).toLong\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsdnu1go.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsdnu1go.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsdnu1go.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfsdnu1go.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_sum = tup1_dissimilar.map(x => pow(10, tup1.indexOf(x))).sum\n        val tup2_dissimilar_sum = tup2_dissimilar.map(x => pow(10, tup2.indexOf(x))).sum\n        tup1_dissimilar_sum + tup2_dissimilar_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4t4kyd6.scala:14:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        tup1_dissimilar_sum + tup2_dissimilar_sum\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4t4kyd6.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4t4kyd6.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4t4kyd6.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_set_diff = tup1_set.diff(tup2_set)\n        val tup2_set_diff = tup2_set.diff(tup1_set)\n        val tup1_set_diff_sum = tup1_set_diff.sum\n        val tup2_set_diff_sum = tup2_set_diff.sum\n        val tup1_set_diff_sum_str = tup1_set_diff_sum.toString\n        val tup2_set_diff_sum_str = tup2_set_diff_sum.toString\n        val tup1_set_diff_sum_str_rev = tup1_set_diff_sum_str.reverse\n        val tup2_set_diff_sum_str_rev = tup2_set_diff_sum_str.reverse\n        val tup1_set_diff_sum_str_rev_int = tup1_set_diff_sum_str_rev.toInt\n        val tup2_set_diff_sum_str_rev_int = tup2_set_diff_sum_str_rev.toInt\n        val tup1_set_diff_sum_str_rev_int_str = tup1_set_diff_sum_str_rev_int.toString\n        val tup2_set_diff_sum_str_rev_int_str = tup2_set_diff_sum_str_rev_int.toString\n        val tup1_set_diff_sum_str_rev_int_str_rev = tup1_set_diff_sum_str_rev_int_str.reverse\n        val tup2_set_diff_sum_str_rev_int_str_rev = tup2_set_diff_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0ydpjtp.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0ydpjtp.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0ydpjtp.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0ydpjtp.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5z664f6c.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5z664f6c.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5z664f6c.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5z664f6c.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpttlixj2z.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpttlixj2z.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpttlixj2z.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpttlixj2z.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f1lqvyu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f1lqvyu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f1lqvyu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f1lqvyu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var dissimilar = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) dissimilar += 1\n        }\n        dissimilar\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ev16c1.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ev16c1.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ev16c1.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv6ev16c1.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_str = tup1_diff.mkString\n        val tup2_diff_str = tup2_diff.mkString\n        val tup1_diff_num = tup1_diff_str.toLong\n        val tup2_diff_num = tup2_diff_str.toLong\n        val result = tup1_diff_num + tup2_diff_num\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 && tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        while (tup1 != 0) {\n            if ((tup1 & 1) != 0) count += 1\n            tup1 >>= 1\n        }\n        while (tup2 != 0) {\n            if ((tup2 & 1) != 0) count += 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7sze8wo.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7sze8wo.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7sze8wo.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7sze8wo.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122839,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxeqvfs6.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxeqvfs6.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxeqvfs6.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxeqvfs6.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2glup_r.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2glup_r.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2glup_r.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq2glup_r.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) {\n                result += pow(10, tup1.length - i - 1).toLong\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122839,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuouv9bmu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuouv9bmu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuouv9bmu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuouv9bmu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cp7mn7v.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz0c3dkwf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).sorted\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).sorted\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList.sorted\n        val tup2_diff_list = tup2_diff.toList.sorted\n        val tup1_diff_str = tup1_diff_list.map(_.toString).mkString\n        val tup2_diff_str = tup2_diff_list.map(_.toString).mkString\n        val tup1_diff_num = tup1_diff_str.toLong\n        val tup2_diff_num = tup2_diff_str.toLong\n        val result = tup1_diff_num + tup2_diff_num\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65uhezt7.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val result = tup1_diff_sum + tup2_diff_sum\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122839,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ce1gz77.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ce1gz77.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ce1gz77.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ce1gz77.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7mlec9dv.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var count = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122839,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb_u5m4c.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb_u5m4c.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb_u5m4c.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb_u5m4c.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g1e36x6.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        val tup1_diff_sum_prod_str = tup1_diff_sum_prod.toString\n        val tup2_diff_sum_prod_str = tup2_diff_sum_prod.toString\n        val tup1_diff_sum_prod_str_len = tup1_diff_sum_prod_str.length\n        val tup2_diff_sum_prod_str_len = tup2_diff_sum_prod_str.length\n        val tup1_diff_sum_prod_str_len_str = tup1_diff_sum_prod_str_len.toString\n        val tup2_diff_sum_prod_str_len_str = tup2_diff_sum_prod_str_len.toString\n        val tup1_diff_sum_prod_str_len_str_len = tup1_diff_sum_prod_str_len_str.length\n        val tup2_diff_sum_prod_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122839,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4vvftqfh.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vvftqfh.scala:26:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vvftqfh.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vvftqfh.scala:28:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4vvftqfh.scala:29:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var dissimilar_count = 0\n        for (i <- 0 until test_tup1_list.length) {\n            if (test_tup1_list(i) != test_tup2_list(i)) {\n                dissimilar_count += 1\n            }\n        }\n        return dissimilar_count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uwl7r0l.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uwl7r0l.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uwl7r0l.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3uwl7r0l.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxhy8m85.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var tup1_digits = new ArrayBuffer[Long]()\n        var tup2_digits = new ArrayBuffer[Long]()\n        while (tup1 > 0) {\n            tup1_digits += tup1 % 10\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            tup2_digits += tup2 % 10\n            tup2 /= 10\n        }\n        var dissimilar = 0\n        for (i <- 0 until tup1_digits.length) {\n            if (tup1_digits(i) != tup2_digits(i)) dissimilar += 1\n        }\n        return dissimilar\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5wuq0_7.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5wuq0_7.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5wuq0_7.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc5wuq0_7.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 until 32) {\n            if ((tup1 & 1) != (tup2 & 1)) result += pow(2, i).toLong\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwsuo071y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwsuo071y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwsuo071y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwsuo071y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 % 10) != (tup2 % 10)) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa2m6mnab.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa2m6mnab.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa2m6mnab.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa2m6mnab.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += pow(2, i).toLong\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqaql2hj.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqaql2hj.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqaql2hj.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqaql2hj.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp702a7wiv.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp702a7wiv.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp702a7wiv.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp702a7wiv.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).sorted\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).sorted\n        val tup3 = tup1.diff(tup2)\n        val tup4 = tup2.diff(tup1)\n        val tup5 = tup3 ::: tup4\n        tup5.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8pedjmjh.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8pedjmjh.scala:14:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8pedjmjh.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8pedjmjh.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup_diff = tup1_diff.union(tup2_diff)\n        val tup_diff_str = tup_diff.mkString\n        tup_diff_str.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptuzny2wl.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptuzny2wl.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptuzny2wl.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptuzny2wl.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 && tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        while (tup1 != 0) {\n            if ((tup1 & 1) != 0) {\n                count += 1\n            }\n            tup1 >>= 1\n        }\n        while (tup2 != 0) {\n            if ((tup2 & 1) != 0) {\n                count += 1\n            }\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9t3s8t.scala:31:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9t3s8t.scala:31:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9t3s8t.scala:32:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0_9t3s8t.scala:32:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkmsj7sk.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkmsj7sk.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkmsj7sk.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkmsj7sk.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_sum = tup1_dissimilar.map(x => pow(10, tup1.indexOf(x)).toLong).sum\n        val tup2_dissimilar_sum = tup2_dissimilar.map(x => pow(10, tup2.indexOf(x)).toLong).sum\n        tup1_dissimilar_sum + tup2_dissimilar_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ru632me.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ru632me.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ru632me.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ru632me.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122804,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnmp9ip31.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.map(_.toString.toInt).sum\n        val tup2_diff_sum = tup2_diff.map(_.toString.toInt).sum\n        val result = tup1_diff_sum + tup2_diff_sum\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sl8joey.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sl8joey.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sl8joey.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6sl8joey.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 && tup2 != 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if (tup1 != 0) count += tup1.toString.length\n        if (tup2 != 0) count += tup2.toString.length\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gnf06ae.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gnf06ae.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gnf06ae.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gnf06ae.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        while (tup1 > 0) {\n            count += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            count += 1\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw14y0pm0.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw14y0pm0.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw14y0pm0.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw14y0pm0.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122850,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu2rfral1.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu2rfral1.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu2rfral1.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu2rfral1.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
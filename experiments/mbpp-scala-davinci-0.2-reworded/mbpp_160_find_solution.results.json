{
  "name": "mbpp_160_find_solution",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x0 = findSolution(a / d, b / d, n / d)\n        if (x0 == None) return None\n        val x = x0.get\n        Some(x * d)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ir7cg_o.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b, n)\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4zvhqkca.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4zvhqkca.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4zvhqkca.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4zvhqkca.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_h8z28s1.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_h8z28s1.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_h8z28s1.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_h8z28s1.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val x = n / a\n            val y = n / b\n            val g = gcd(a, b)\n            val d = a / g\n            val e = b / g\n            val f = n / g\n            val m = (x + y) / 2\n            val k = (y - x) / 2\n            val result = m + k * d\n            Some(result)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3o_6c3c0.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3o_6c3c0.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x0 = findSolution(a / d, b / d, n / d).get\n        val y0 = (n - a * x0) / b\n        Some(x0 * b + y0 * a)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0sb7fi6i.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val g = gcd(a, b)\n        if (n % g != 0) return None\n        val (x, y) = findSolution(a / g, b / g, n / g)\n        return Some(x * g, y * g)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3xt3j50.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv3xt3j50.scala:9:22 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m Some(x * g, y * g)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue * is not a member of Any, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m  |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m  |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m  |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv3xt3j50.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m Some(x * g, y * g)\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue * is not a member of Any, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m  |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m  |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m  |\u001b[0m\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(k * x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqd_nivhm.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqd_nivhm.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqd_nivhm.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqd_nivhm.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqd_nivhm.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        var x = 0L\n        var y = n / b\n        while (a * x <= n) {\n            if ((n - a * x) % b == 0) return Some(x)\n            x += 1\n        }\n        None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1npzg_gy.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_h8z28s1.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_h8z28s1.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_h8z28s1.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_h8z28s1.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x0, y0) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            val x = x0 * (n / d)\n            val y = y0 * (n / d)\n            Some(x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9t3bf6oj.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9t3bf6oj.scala:8:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x0, y0) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                           Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9t3bf6oj.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x0, y0) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9t3bf6oj.scala:8:21 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x0, y0) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                     Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9t3bf6oj.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d == 0) {\n            val x = n / d * inverse(a / d, b / d)\n            val y = (n - a * x) / b\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpikd5qfft.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolutionRec(x : Long, y : Long) : Option[Long] = {\n            if (a * x + b * y == n) Some(x)\n            else if (x > n) None\n            else findSolutionRec(x + 1, y - 1)\n        }\n        findSolutionRec(0, n / b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510555,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmper03quj3.scala:14)\n\tat Problem.main(tmper03quj3.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        val k = n / gcd(a, b)\n        return Some(x * k, y * k)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510555,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fntgunp.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fntgunp.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp0fntgunp.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp0fntgunp.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fntgunp.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0fntgunp.scala:9:20 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m Some(x * k, y * k)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Found:    (Nothing, Nothing)\n\u001b[31m  |\u001b[0m                    Required: Long\n\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b, n)\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4zvhqkca.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4zvhqkca.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4zvhqkca.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4zvhqkca.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else Some(n / a)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpow8ylmsw.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m Some(n / a)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val gcd = a.gcd(b)\n        if (n % gcd != 0) return None\n        val a1 = a / gcd\n        val b1 = b / gcd\n        val n1 = n / gcd\n        val (x, y) = findSolution(a1, b1, n1)\n        return Some(x * gcd, y * gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123314,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0yv0o3qe.scala:6:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mgcd\u001b[0m = a.gcd(b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue gcd is not a member of Long, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mThe following import might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.BigInt.long2bigInt\n\u001b[31m  |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0yv0o3qe.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mreturn\u001b[0m Some(x * gcd, y * gcd)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue * is not a member of Any, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0yv0o3qe.scala:12:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mreturn\u001b[0m Some(x * gcd, y * gcd)\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue * is not a member of Any, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val k = n / gcd(a, b)\n            Some(x * k)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9q9lumfc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9q9lumfc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9q9lumfc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9q9lumfc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9q9lumfc.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val m = min(x, y)\n        val M = max(x, y)\n        for (i <- m to M) {\n            if (a * i % b != 0) {\n                return Some(i)\n            }\n        }\n        return None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123312,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpkwkhe47t.scala:18)\n\tat Problem.main(tmpkwkhe47t.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val max = max(x, y)\n        val min = min(x, y)\n        for (i <- min to max) {\n            if (a * i % b != 0) {\n                if (a * i + b * (i - 1) == n) return Some(i)\n            }\n        }\n        return None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_8y2e4gl.scala:8:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = max(x, y)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_8y2e4gl.scala:9:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(x, y)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xs = (0 to x.toInt).map(i => (i, (n - a * i) / b)).filter(p => p._2 >= 0 && p._2 * b + p._1 * a == n)\n        if (xs.size == 0) None else Some(xs.map(p => p._1 + p._2).min)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123313,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp5wiv2ug0.scala:12)\n\tat Problem.main(tmp5wiv2ug0.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = extendedEuclid(a, b)\n            val k = n / gcd(a, b)\n            Some(k * x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpijevblsy.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpijevblsy.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        var x = 0\n        var y = 0\n        var found = false\n        while (!found) {\n            if (a * x + b * y == n) {\n                found = true\n            } else {\n                x += 1\n                y = (n - a * x) / b\n            }\n        }\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123310,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpva3nytq0.scala:14:20 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                y = (n - a * x) / b\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Found:    Long\n\u001b[31m   |\u001b[0m                    Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val g = gcd(a, b)\n        if (n % g != 0) return None\n        val x = n / g * inverse(a / g, b / g) % (b / g)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4y9xro9d.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d * (n / d) * y)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllq9akee.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllq9akee.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpllq9akee.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpllq9akee.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllq9akee.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val x = n / a\n            val y = n / b\n            val (x1, y1) = findSolution(a, b, x, y)\n            Some(x1 * a + y1 * b)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123307,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv7p4ygt_.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv7p4ygt_.scala:10:49 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m (x1, y1) = findSolution(a, b, x, y)\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0mtoo many arguments for \u001b[33mmethod\u001b[0m \u001b[35mfindSolution\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m: (a: Long, b: Long, n: Long): Option[Long]\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpv7p4ygt_.scala:10:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m (x1, y1) = findSolution(a, b, x, y)\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpv7p4ygt_.scala:10:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m (x1, y1) = findSolution(a, b, x, y)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(x * k)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpixgbhv7p.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpixgbhv7p.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xy = x * y\n        val xy1 = (x + 1) * (y + 1)\n        val xy2 = (x + 2) * (y + 2)\n        val xy3 = (x + 3) * (y + 3)\n        val xy4 = (x + 4) * (y + 4)\n        val xy5 = (x + 5) * (y + 5)\n        val xy6 = (x + 6) * (y + 6)\n        val xy7 = (x + 7) * (y + 7)\n        val xy8 = (x + 8) * (y + 8)\n        val xy9 = (x + 9) * (y + 9)\n        val xy10 = (x + 10) * (y + 10)\n        val xy11 = (x + 11) * (y + 11)\n        val xy12 = (x + 12) * (y + 12)\n        val xy13 = (x + 13) * (y + 13)\n        val xy14 = (x + 14) * (y + 14)\n        val xy15 = (x + 15) * (y + 15)\n        val xy16 = (x + 16) * (y + 16)\n        val xy17 = (x + 17) * (y + 17)\n        val xy18 = (x + 18) * (y + 18)\n        val xy19 = (x + 19) * (y + 19)\n        val xy20 = (x + 20) * (y + 20)\n        val xy21 = (x + 21) * (y + 21)\n        val xy22 = (x + 22) * (y + 22)\n        val xy23 = (x + 23) * (y + 23)\n        val xy24 = (x + 24) * (y + 24)\n        val xy25 = (x + 25) * (y + 25)\n        val xy26 = (x + 26) * (y + 26)\n        val xy27 = (x + 27) * (y + 27)\n\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3okw11ts.scala:37:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Option[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwp12mk10.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwp12mk10.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpwp12mk10.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpwp12mk10.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwp12mk10.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyb5u09f.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyb5u09f.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgyb5u09f.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgyb5u09f.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyb5u09f.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolution(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n        else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjrv_w_ti.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjrv_w_ti.scala:7:37 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolution(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mmissing argument for parameter n of \u001b[33mmethod\u001b[0m \u001b[35mfindSolution\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m: (a: Long, b: Long, n: Long): Option[Long]\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpjrv_w_ti.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolution(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpjrv_w_ti.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolution(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xy = x * y\n        val xy2 = xy * 2\n        val xy3 = xy * 3\n        val xy4 = xy * 4\n        val xy5 = xy * 5\n        val xy6 = xy * 6\n        val xy7 = xy * 7\n        val xy8 = xy * 8\n        val xy9 = xy * 9\n        val xy10 = xy * 10\n        val xy11 = xy * 11\n        val xy12 = xy * 12\n        val xy13 = xy * 13\n        val xy14 = xy * 14\n        val xy15 = xy * 15\n        val xy16 = xy * 16\n        val xy17 = xy * 17\n        val xy18 = xy * 18\n        val xy19 = xy * 19\n        val xy20 = xy * 20\n        val xy21 = xy * 21\n        val xy22 = xy * 22\n        val xy23 = xy * 23\n        val xy24 = xy * 24\n        val xy25 = xy * 25\n        val xy26 = xy * 26\n        val xy27 = xy * 27\n        val xy28 = xy * 28\n        val xy29 = xy * 29\n        val xy30 = xy * 30\n        val xy31 = xy * 31\n        val xy32 = xy * 32\n        val xy33 = xy * 33\n        val xy34 = xy * 34\n        val xy35 = xy * 35\n        val xy36 = xy * 36\n        val xy37 = xy * 37\n        val xy38 = xy * 38\n        val xy39 = xy * 39\n        val xy40 = xy * 40\n        val xy41 = xy * 41\n        val xy42 = xy * 42\n        val xy43 = xy * 43\n        val xy44 = xy * 44\n        val xy45 = xy * 45\n        val\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpo3xxyh2h.scala:53:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo3xxyh2h.scala:54:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Option[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpydnl62is.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpydnl62is.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val g = gcd(a, b)\n        if (n % g != 0) return None\n        val a1 = a / g\n        val b1 = b / g\n        val n1 = n / g\n        val (x, y) = extendedEuclid(a1, b1)\n        return Some(x * n1)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg0jhgjrp.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg0jhgjrp.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a1, b1)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpg0jhgjrp.scala:11:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a1, b1)\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpg0jhgjrp.scala:11:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a1, b1)\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val gcd = a.gcd(b)\n        if (n % gcd != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val k = n / gcd\n        Some(x * k)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123323,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwi_zdhuy.scala:6:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mgcd\u001b[0m = a.gcd(b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue gcd is not a member of Long, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mThe following import might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.BigInt.long2bigInt\n\u001b[31m  |\u001b[0m\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwi_zdhuy.scala:8:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpwi_zdhuy.scala:8:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpwi_zdhuy.scala:8:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * inverse(a / d, b / d) % (b / d)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpte3m_e6g.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9wo7wt4h.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp9wo7wt4h.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val g = gcd(a, b)\n        if (n % g != 0) return None\n        val x = n / g * inverse(a / g, b / g)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphbewc5zg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n % a\n        if (y == 0) Some(x)\n        else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123322,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgnrw5jxz.scala:12)\n\tat Problem.main(tmpgnrw5jxz.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclideanAlgorithm(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzug8hfa5.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzug8hfa5.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclideanAlgorithm(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclideanAlgorithm\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpzug8hfa5.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclideanAlgorithm(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpzug8hfa5.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclideanAlgorithm(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzug8hfa5.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpydnl62is.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpydnl62is.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolutionHelper(a : Long, b : Long, n : Long) : Option[Long] = {\n            if (n == 0) Some(0)\n            else if (n < 0) None\n            else {\n                val x = findSolutionHelper(a, b, n - a)\n                if (x.isDefined) Some(x.get + 1)\n                else {\n                    val y = findSolutionHelper(a, b, n - b)\n                    if (y.isDefined) Some(y.get + 1)\n                    else None\n                }\n            }\n        }\n        findSolutionHelper(a, b, n)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123323,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp1cjvj9vd.scala:22)\n\tat Problem.main(tmp1cjvj9vd.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * modInverse(a / d, b / d)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvgxuv2lj.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * modInverse(a / d, b / d)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvgxuv2lj.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val m = n % a\n        if (m == 0) Some(n / a)\n        else if (m % b == 0) Some(m / b)\n        else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123323,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpt_0q_ve1.scala:12)\n\tat Problem.main(tmpt_0q_ve1.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedGcd(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyk6k148c.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyk6k148c.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedGcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedGcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpyk6k148c.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedGcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpyk6k148c.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedGcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)) + y * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpel5sc_q_.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpel5sc_q_.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpel5sc_q_.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpel5sc_q_.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolutionHelper(a : Long, b : Long, n : Long, x : Long, y : Long) : Option[Long] = {\n            if (a == 0 && b == 0) {\n                if (n == 0) Some(x) else None\n            } else if (a == 0) {\n                if (n % b == 0) Some(x) else None\n            } else if (b == 0) {\n                if (n % a == 0) Some(y) else None\n            } else {\n                val g = gcd(a, b)\n                if (n % g == 0) {\n                    val x1 = x + (b / g)\n                    val y1 = y - (a / g)\n                    findSolutionHelper(a, b, n, x1, y1)\n                } else None\n            }\n        }\n        findSolutionHelper(a, b, n, 0, n / a)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpk1zs34ea.scala:14:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: gcd\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d == 0) {\n            val x0 = findSolution(a / d, b / d, n / d).get\n            val y0 = (n - a * x0) / b\n            Some(x0 * b + y0 * a)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzbhx52l9.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val gcd = gcdExtended(a, b)\n        if (n % gcd._1 == 0) {\n            val x = gcd._2 * (n / gcd._1)\n            val y = gcd._3 * (n / gcd._1)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqpc500bo.scala:6:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mgcd\u001b[0m = gcdExtended(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: gcdExtended\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def find(x : Long, y : Long) : Option[Long] = {\n            if (x < 0 || y < 0) None\n            else if (a * x + b * y == n) Some(x)\n            else if (a * x + b * y < n) find(x + 1, y)\n            else find(x, y - 1)\n        }\n        find(0, n / b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123323,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4rjg5mr2.scala:15)\n\tat Problem.main(tmp4rjg5mr2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val g = gcd(a, b)\n        if (n % g != 0) return None\n        val a1 = a / g\n        val b1 = b / g\n        val n1 = n / g\n        val (x, y) = extendedEuclid(a1, b1)\n        val x1 = x * n1\n        val y1 = y * n1\n        val x2 = x1 % b1\n        val y2 = y1 % a1\n        val x3 = if (x2 < 0) x2 + b1 else x2\n        val y3 = if (y2 < 0) y2 + a1 else y2\n        Some(x3)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2l9n98c6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2l9n98c6.scala:11:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a1, b1)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2l9n98c6.scala:11:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a1, b1)\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2l9n98c6.scala:11:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a1, b1)\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolutionRec(a : Long, b : Long, n : Long, x : Long, y : Long) : Option[Long] = {\n            if (n == 0) Some(x)\n            else if (n < 0) None\n            else {\n                val x1 = findSolutionRec(a, b, n - a, x + 1, y)\n                if (x1.isDefined) x1\n                else findSolutionRec(a, b, n - b, x, y + 1)\n            }\n        }\n        findSolutionRec(a, b, n, 0, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmporr68j2x.scala:18)\n\tat Problem.main(tmporr68j2x.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(x * k)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpixgbhv7p.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpixgbhv7p.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        var x = 0L\n        while (a * x <= n) {\n            if ((n - a * x) % b == 0) return Some(x)\n            x += 1\n        }\n        return None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123327,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp2twrg3_1.scala:14)\n\tat Problem.main(tmp2twrg3_1.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xy = x * y\n        val xy1 = xy + 1\n        val xy2 = xy - 1\n        if (xy1 % b == 0) Some(xy1 / b) else if (xy2 % b == 0) Some(xy2 / b) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp3ewjogtx.scala:14)\n\tat Problem.main(tmp3ewjogtx.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val gcd = gcdExtended(a, b)\n        if (n % gcd != 0) return None\n        val x = gcdExtended(a, b)._1 * (n / gcd)\n        val y = gcdExtended(a, b)._2 * (n / gcd)\n        return Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123322,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj4g6zkcc.scala:6:18 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mgcd\u001b[0m = gcdExtended(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  Not found: gcdExtended\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj4g6zkcc.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx\u001b[0m = gcdExtended(a, b)._1 * (n / gcd)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcdExtended\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj4g6zkcc.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36my\u001b[0m = gcdExtended(a, b)._2 * (n / gcd)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcdExtended\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(x * k)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_xuc362m.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_xuc362m.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_xuc362m.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_xuc362m.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_xuc362m.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        var x = 0L\n        var y = 0L\n        var found = false\n        while (x <= n) {\n            y = (n - a * x) / b\n            if (a * x + b * y == n) {\n                found = true\n                return Some(x)\n            }\n            x += 1\n        }\n        if (!found) None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123326,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfvfn8mt.scala:17:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mif\u001b[0m (!found) None\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: Option[Long]\n\u001b[31m   |\u001b[0m        Maybe you are missing an else part for the conditional?\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        // Euclidean algorithm\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        // Extended Euclidean algorithm\n        def egcd(a : Long, b : Long) : (Long, Long, Long) = {\n            if (b == 0) (a, 1, 0)\n            else {\n                val (g, x, y) = egcd(b, a % b)\n                (g, y, x - (a / b) * y)\n            }\n        }\n        val g = gcd(a, b)\n        if (n % g != 0) None\n        else {\n            val (g, x, y) = egcd(a, b)\n            Some(x * (n / g))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpwr0_3ay5.scala:24)\n\tat Problem.main(tmpwr0_3ay5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * inverse(a / d, b / d) % (b / d)\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123327,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp241_xcgf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = extendedEuclid(a, b)\n            val k = n / gcd(a, b)\n            Some(k * x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpijevblsy.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpijevblsy.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val gcd = a.gcd(b)\n        if (n % gcd != 0) return None\n        val x0 = (1 to gcd.toInt).find(x => (n - a * x) % b == 0)\n        if (x0.isEmpty) return None\n        val x = x0.get\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgpyu4rv0.scala:6:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mgcd\u001b[0m = a.gcd(b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue gcd is not a member of Long, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mThe following import might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.BigInt.long2bigInt\n\u001b[31m  |\u001b[0m\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolution(x : Long, y : Long) : Option[Long] = {\n            if (x < 0 || y < 0) None\n            else if (a * x + b * y == n) Some(x)\n            else if (a * x + b * y < n) findSolution(x + 1, y)\n            else findSolution(x, y - 1)\n        }\n        findSolution(0, n / b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptn0r2jw5.scala:15)\n\tat Problem.main(tmptn0r2jw5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        return Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123327,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkfv0r1br.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkfv0r1br.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpkfv0r1br.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpkfv0r1br.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val gcd = a.gcd(b)\n        if (n % gcd == 0) {\n            val x = n / gcd * a\n            val y = n / gcd * b\n            Some(x + y)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpadtd5ubl.scala:6:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mgcd\u001b[0m = a.gcd(b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue gcd is not a member of Long, but could be made available as an extension method.\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mThe following import might fix the problem:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m  import math.BigInt.long2bigInt\n\u001b[31m  |\u001b[0m\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else Some(n / a)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpow8ylmsw.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m Some(n / a)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x0 = solve(a / d, b / d, n / d)\n        Some(x0)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123327,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5enos5z.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5enos5z.scala:8:17 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx0\u001b[0m = solve(a / d, b / d, n / d)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val x = n / a\n            val y = n / b\n            val g = gcd(a, b)\n            val m = a / g\n            val n = b / g\n            val k = x / m\n            val l = y / n\n            val z = max(k, l)\n            val x0 = x - z * m\n            val y0 = y - z * n\n            Some(x0)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp77_m8cfy.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp77_m8cfy.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * modInverse(a / d, b / d)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvgxuv2lj.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123327,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqwh101w4.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqwh101w4.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqwh101w4.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqwh101w4.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqwh101w4.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyb5u09f.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyb5u09f.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgyb5u09f.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgyb5u09f.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgyb5u09f.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val g = gcd(a, b)\n        if (n % g != 0) return None\n        val x = n / g * inverse(a / g, b / g)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphbewc5zg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123327,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4imrpj32.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4imrpj32.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4imrpj32.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4imrpj32.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * modInverse(a / d, b / d)\n        val y = (n - a * x) / b\n        if (a * x + b * y != n) return None\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplzmmrktf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) Some(n / gcd(a, b)) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl41iqw5m.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) Some(n / gcd(a, b)) \u001b[33melse\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl41iqw5m.scala:6:41 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) Some(n / gcd(a, b)) \u001b[33melse\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                         Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        var x = 0L\n        var y = 0L\n        while (a * x <= n) {\n            if ((n - a * x) % b == 0) {\n                y = (n - a * x) / b\n                return Some(x)\n            }\n            x += 1\n        }\n        return None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp6rea15mv.scala:18)\n\tat Problem.main(tmp6rea15mv.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        var x = 0L\n        var y = 0L\n        var found = false\n        while (x <= n && !found) {\n            y = (n - a * x) / b\n            if (a * x + b * y == n) found = true\n            else x += 1\n        }\n        if (found) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdpb39shd.scala:17)\n\tat Problem.main(tmpdpb39shd.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xy = x * y\n        if (xy == n) Some(x)\n        else if (xy < n) findSolution(a, b, n - xy)\n        else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123342,
      "stdout": "None",
      "stderr": "None",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val min = min(x, y)\n        val max = max(x, y)\n        for (i <- min to max) {\n            if (a * i + b * (n - i) == n) return Some(i)\n        }\n        return None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpmmg0ykwl.scala:8:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(x, y)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpmmg0ykwl.scala:9:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = max(x, y)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        val k = n / gcd(a, b)\n        return Some(k * x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppe156bdx.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppe156bdx.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmppe156bdx.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmppe156bdx.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppe156bdx.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        val k = n / gcd(a, b)\n        Some(x * k)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptcxcnxk9.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptcxcnxk9.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmptcxcnxk9.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmptcxcnxk9.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptcxcnxk9.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val min = min(x, y)\n        val max = max(x, y)\n        for (i <- min to max) {\n            if (a * i % b != 0 && b * i % a != 0) return Some(i)\n        }\n        return None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpiuriz5pc.scala:8:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(x, y)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpiuriz5pc.scala:9:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = max(x, y)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xy = x * y\n        val xy2 = xy * 2\n        val xy3 = xy * 3\n        val xy4 = xy * 4\n        val xy5 = xy * 5\n        val xy6 = xy * 6\n        val xy7 = xy * 7\n        val xy8 = xy * 8\n        val xy9 = xy * 9\n        val xy10 = xy * 10\n        val xy11 = xy * 11\n        val xy12 = xy * 12\n        val xy13 = xy * 13\n        val xy14 = xy * 14\n        val xy15 = xy * 15\n        val xy16 = xy * 16\n        val xy17 = xy * 17\n        val xy18 = xy * 18\n        val xy19 = xy * 19\n        val xy20 = xy * 20\n        val xy21 = xy * 21\n        val xy22 = xy * 22\n        val xy23 = xy * 23\n        val xy24 = xy * 24\n        val xy25 = xy * 25\n        val xy26 = xy * 26\n        val xy27 = xy * 27\n        val xy28 = xy * 28\n        val xy29 = xy * 29\n        val xy30 = xy * 30\n        val xy31 = xy * 31\n        val xy32 = xy * 32\n        val xy33 = xy * 33\n        val xy34 = xy * 34\n        val xy35 = xy * 35\n        val xy36 = xy * 36\n        val xy37 = xy * 37\n        val xy38 = xy * 38\n        val xy39 = xy * 39\n        val xy40 = xy * 40\n        val xy41 = xy * 41\n        val xy42 = xy * 42\n        val xy43 = xy * 43\n        val xy44 = xy * 44\n        val xy45 = xy * 45\n        val\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpo3xxyh2h.scala:53:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mval\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo3xxyh2h.scala:54:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Option[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val m = n % gcd(a, b)\n        if (m == 0) {\n            val x = n / a\n            val y = n / b\n            if (x >= 0 && y >= 0) Some(min(x, y))\n            else None\n        }\n        else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123337,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpddq198es.scala:6:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = n % gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * modInverse(a / d, b / d)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvgxuv2lj.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x * n / gcd(a, b))\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyt29njps.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyt29njps.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpyt29njps.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpyt29njps.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x0 = solve(a / d, b / d, n / d)\n        if (x0 == None) return None\n        val x = x0.get._1\n        val y = x0.get._2\n        val k = n / (a * x + b * y)\n        return Some(x * k)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg35hvjeu.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg35hvjeu.scala:8:17 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mx0\u001b[0m = solve(a / d, b / d, n / d)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)) % b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp856zj6fn.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp856zj6fn.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp856zj6fn.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp856zj6fn.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(k * x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqd_nivhm.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqd_nivhm.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqd_nivhm.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqd_nivhm.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqd_nivhm.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def find(x : Long, y : Long) : Option[Long] = {\n            if (x < 0 || y < 0) None\n            else if (a * x + b * y == n) Some(x)\n            else if (a * x + b * y < n) find(x + 1, y)\n            else find(x, y - 1)\n        }\n        find(0, n / b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123323,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4rjg5mr2.scala:15)\n\tat Problem.main(tmp4rjg5mr2.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = solve(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfzgq_cty.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfzgq_cty.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfzgq_cty.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfzgq_cty.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d * (n / d) * y)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllq9akee.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllq9akee.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpllq9akee.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpllq9akee.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllq9akee.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) None\n        else {\n            val x = n / d * inverse(a / d, b / d) % b\n            Some(x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpclzs7lo2.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolutionHelper(a : Long, b : Long, n : Long, x : Long, y : Long) : Option[Long] = {\n            if (a * x + b * y == n) Some(x)\n            else if (x > n) None\n            else findSolutionHelper(a, b, n, x + 1, y)\n        }\n        findSolutionHelper(a, b, n, 0, 0)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp8lh3yyhz.scala:14)\n\tat Problem.main(tmp8lh3yyhz.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d * (y * (n / d)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcky7_x4.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcky7_x4.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfcky7_x4.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfcky7_x4.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcky7_x4.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolutionHelper(a : Long, b : Long, n : Long, x : Long, y : Long) : Option[Long] = {\n            if (a == 0) {\n                if (n == 0) Some(x) else None\n            } else {\n                val g = gcd(a, b)\n                if (n % g == 0) {\n                    val x1 = x + b / g\n                    val y1 = y - a / g\n                    findSolutionHelper(b % a, a, n / g, x1, y1)\n                } else None\n            }\n        }\n        findSolutionHelper(a, b, n, 0, 1)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5wsa6l2a.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: gcd\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val x = n / a\n            val y = n / b\n            val m = max(x, y)\n            val M = min(x, y)\n            val d = gcd(a, b)\n            val c = a / d\n            val k = b / d\n            val x0 = (M - m * c) / (k - c)\n            val y0 = (n - a * x0) / b\n            Some(x0)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68q6ym_g.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68q6ym_g.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: gcd\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = extendedEuclid(a, b)\n            val k = n / gcd(a, b)\n            Some(k * x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpijevblsy.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpijevblsy.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijevblsy.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = n / a\n        val y = n / b\n        val xy = x * y\n        val xy1 = (x + 1) * (y + 1)\n        if (xy <= n && n <= xy1) {\n            val x1 = n - xy\n            val y1 = xy1 - n\n            if (x1 < y1) Some(x) else Some(y)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpsu2dacqo.scala:17)\n\tat Problem.main(tmpsu2dacqo.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x0 = (n / d) * modInverse(a / d, b / d)\n        val y0 = (n - a * x0) / b\n        Some(x0)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkd4l89do.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (a * x + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123342,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp2ttesvhy.scala:10)\n\tat Problem.main(tmp2ttesvhy.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpydnl62is.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpydnl62is.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpydnl62is.scala:8:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ayfqz7w.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp5ayfqz7w.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b)\n        Some(x * (n / gcd(a, b)) % b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp856zj6fn.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp856zj6fn.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp856zj6fn.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp856zj6fn.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(x * k)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123324,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_xuc362m.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_xuc362m.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_xuc362m.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_xuc362m.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_xuc362m.scala:8:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) Some(n / a)\n        else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphvalqs3h.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) Some(n / a)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolution(x : Long, y : Long) : Option[Long] = {\n            if (x < 0 || y < 0) None\n            else if (a * x + b * y == n) Some(x)\n            else if (a * x + b * y < n) findSolution(x + 1, y)\n            else findSolution(x, y - 1)\n        }\n        findSolution(0, n / b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptn0r2jw5.scala:15)\n\tat Problem.main(tmptn0r2jw5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_rs_1kg.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpa_rs_1kg.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val x = n / a\n            val y = n / b\n            val g = gcd(a, b)\n            val l = lcm(a, b)\n            val m = max(x, y)\n            val M = min(x, y)\n            val d = g / a\n            val D = l / a\n            val k = (m - M) / d\n            val K = (m - M) / D\n            val r = (m - M) % d\n            val R = (m - M) % D\n            if (r == 0) {\n                val x = M + k * a\n                val y = m - k * b\n                Some(x)\n            } else if (R == 0) {\n                val x = M + K * a\n                val y = m - K * b\n                Some(x)\n            } else None\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo15v1aab.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo15v1aab.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo15v1aab.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36ml\u001b[0m = lcm(a, b)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: lcm\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None else Some(n / a)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpow8ylmsw.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None \u001b[33melse\u001b[0m Some(n / a)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) == 0) {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        } else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) == \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqhvlex3u.scala:7:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpqhvlex3u.scala:7:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            Some(x * (n / gcd(a, b)))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_iqtoifc.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_iqtoifc.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        Some(x * (n / gcd(a, b)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpukbxqu8j.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpukbxqu8j.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val x = (n - b) / a\n        if (x * a + b == n) Some(x) else None\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123311,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpx9_jwpn5.scala:10)\n\tat Problem.main(tmpx9_jwpn5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        def findSolution(x : Long, y : Long) : Option[Long] = {\n            if (x < 0 || y < 0) None\n            else if (a * x + b * y == n) Some(x)\n            else if (a * x + b * y < n) findSolution(x + 1, y)\n            else findSolution(x, y - 1)\n        }\n        findSolution(0, n / b)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptn0r2jw5.scala:15)\n\tat Problem.main(tmptn0r2jw5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclidean(a, b)\n            val k = n / gcd(a, b)\n            Some(x * k)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123306,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpixgbhv7p.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpixgbhv7p.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpixgbhv7p.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mk\u001b[0m = n / gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                        Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d) + b / d * (y * (n / d)))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123338,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcky7_x4.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcky7_x4.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfcky7_x4.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfcky7_x4.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcky7_x4.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = findSolutionHelper(a, b, n)\n            Some(x)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ymik_um.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ymik_um.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: findSolutionHelper\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_ymik_um.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp_ymik_um.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = findSolutionHelper(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        val d = gcd(a, b)\n        if (n % d != 0) return None\n        val x = n / d * inverse(a / d, b / d)\n        val y = (n - a * x) / b\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123341,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp90v15le9.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclidean(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1666123305,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclidean\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp32ixv8lf.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclidean(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp32ixv8lf.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = extendedEuclid(a, b)\n        val d = gcd(a, b)\n        Some(x * (n / d))\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp2vlehfv6.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2vlehfv6.scala:8:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) None\n        else {\n            val (x, y) = extendedEuclid(a, b)\n            val d = gcd(a, b)\n            Some(x * (n / d))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:8:25 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         Not found: extendedEuclid\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:17 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                 Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6c7g_e0s.scala:8:20 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mval\u001b[0m (x, y) = extendedEuclid(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^\u001b[0m\n\u001b[31m  |\u001b[0m                    Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6c7g_e0s.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36md\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    def findSolution(a : Long, b : Long, n : Long) : Option[Long] = {\n        if (n % gcd(a, b) != 0) return None\n        val (x, y) = solve(a, b, n)\n        Some(x)\n    }\n    def main(args: Array[String]) = {\n    assert(findSolution((2l), (3l), (7l)).equals((2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(None));\n    assert(findSolution((1l), (13l), (17l)).equals((4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4zvhqkca.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mif\u001b[0m (n % gcd(a, b) != \u001b[31m0\u001b[0m) \u001b[33mreturn\u001b[0m None\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4zvhqkca.scala:7:21 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                     ^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                     Not found: solve\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4zvhqkca.scala:7:13 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m             ^\u001b[0m\n\u001b[31m  |\u001b[0m             Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4zvhqkca.scala:7:16 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m (x, y) = solve(a, b, n)\n\u001b[31m\u001b[31m  |\u001b[0m                ^\u001b[0m\n\u001b[31m  |\u001b[0m                Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
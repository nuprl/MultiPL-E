{
  "name": "mbpp_479_first_Digit",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the first digit of a given number.\n    def firstDigit(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(firstDigit((123l)) == (1l));\n    assert(firstDigit((456l)) == (4l));\n    assert(firstDigit((12l)) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        num",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        return num",
    "        var m = n\n        while (m >= 10) {\n            m = m / 10\n        }\n        m",
    "        if (n < 10) return n\n        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        return num",
    "        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var temp = n\n        while (temp >= 10) {\n            temp /= 10\n        }\n        return temp",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while(m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) x /= 10\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var temp = n\n        while (temp >= 10) {\n            temp /= 10\n        }\n        return temp",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x",
    "        if (n < 10) return n\n        else return firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) x /= 10\n        x",
    "        var m = n\n        while (m >= 10) m /= 10\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m > 9) {\n            m = m / 10\n        }\n        return m",
    "        val s = n.toString\n        s.charAt(0).toLong - '0'.toLong",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x > 9) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m > 9) {\n            m = m / 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var num = n\n        while (num >= 10) num /= 10\n        return num",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        var x = n\n        while (x > 9) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) return n\n        firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        val s = n.toString\n        val first = s.substring(0, 1)\n        first.toLong",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var num = n\n        while(num > 9) {\n            num /= 10\n        }\n        return num",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x > 9) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) m /= 10\n        m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        if (n < 10) return n\n        firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        return num",
    "        var x = n\n        while (x > 9) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        n.toString.head.asDigit",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var x = n\n        while (x > 9) {\n            x = x / 10\n        }\n        return x",
    "        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m = m / 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        return num",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m > 9) m /= 10\n        return m",
    "        var m = n\n        while (m >= 10) m /= 10\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m > 9) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) m /= 10\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x > 9) {\n            x /= 10\n        }\n        return x",
    "        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        return num",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) m /= 10\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var n1 = n\n        while (n1 >= 10) {\n            n1 /= 10\n        }\n        return n1",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        n.toString.head.toString.toLong",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var m = n\n        while (m >= 10) {\n            m /= 10\n        }\n        return m",
    "        var result = n\n        while (result >= 10) {\n            result /= 10\n        }\n        return result",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        x",
    "        var x = n\n        while (x > 9) {\n            x = x / 10\n        }\n        return x",
    "        if (n < 0) firstDigit(-n)\n        else if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x > 9) {\n            x /= 10\n        }\n        x",
    "        var num = n\n        while (num >= 10) {\n            num /= 10\n        }\n        num",
    "        if (n < 10) n\n        else firstDigit(n / 10)",
    "        var x = n\n        while (x >= 10) {\n            x /= 10\n        }\n        return x"
  ]
}
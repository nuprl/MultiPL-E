{
  "name": "mbpp_64_subject_marks",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_64_subject_marks.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a, b) => a.right.get < b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortBy(x => x.right.getOrElse(0))\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpbpvrljcy.scala:6:67 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbpvrljcy.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbpvrljcy.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0L))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortBy(x => x.right.getOrElse(0))\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpbpvrljcy.scala:6:67 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msorted\u001b[0m = subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbpvrljcy.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbpvrljcy.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a, b) => a.right.get < b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x match {\n            case Left(x) => x\n            case Right(x) => x\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5emz7ydo.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val subjects = subjectmarks.filter(_.isLeft).map(_.left.get)\n        val marks = subjectmarks.filter(_.isRight).map(_.right.get)\n        val sortedMarks = marks.sortWith(_ > _)\n        val sortedSubjects = subjects.sortWith(_ > _)\n        val sortedSubjectMarks = sortedSubjects zip sortedMarks\n        sortedSubjectMarks.map(x => Left(x._1) : Either[String, Long]).toList ::: sortedSubjectMarks.map(x => Right(x._2) : Either[String, Long]).toList\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas0erekc.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas0erekc.scala:14:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas0erekc.scala:14:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123874,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpf0q72dd_.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q72dd_.scala:12:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q72dd_.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sortedList = subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n        sortedList\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbvn_98c.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbvn_98c.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzbvn_98c.scala:10:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        var marks = List[Either[String, Long]]()\n        for (i <- subjectmarks) {\n            i match {\n                case Left(s) => marks = marks :+ Left(s)\n                case Right(l) => marks = marks :+ Right(l)\n            }\n        }\n        marks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplos6olic.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplos6olic.scala:16:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplos6olic.scala:16:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val marks = subjectmarks.filter(_.isRight).map(_.right.get)\n        val subjects = subjectmarks.filter(_.isLeft).map(_.left.get)\n        val sortedMarks = marks.sorted\n        val sortedSubjects = subjects.sorted\n        val sortedSubjectMarks = sortedSubjects.zip(sortedMarks)\n        sortedSubjectMarks.map(x => Left(x._1) : Either[String, Long]).zip(sortedSubjectMarks.map(x => Right(x._2) : Either[String, Long])).map(x => x._1 : Either[String, Long]).zip(sortedSubjectMarks.map(x => Right(x._2) : Either[String, Long])).map(x => x._2 : Either[String, Long])\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplppdijd4.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplppdijd4.scala:14:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplppdijd4.scala:14:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x match {\n            case Left(x) => x\n            case Right(x) => x\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5emz7ydo.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x match {\n            case Left(x) => x\n            case Right(x) => x\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5emz7ydo.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith(_.right.get < _.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiuy3z4th.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiuy3z4th.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiuy3z4th.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0L))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpknomltc7.scala:10:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0L))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxofcx_c.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a, b) => a.right.get < b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a,b) => a.right.get < b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpec17a5pj.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpec17a5pj.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpec17a5pj.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortWith((x, y) => x.right.get > y.right.get)\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh3v3uqa.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh3v3uqa.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh3v3uqa.scala:10:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a, b) => a.right.get < b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a, b) => a.right.get > b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84slqti3.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84slqti3.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84slqti3.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x match {\n            case Left(x) => x\n            case Right(x) => x\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5emz7ydo.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5emz7ydo.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortBy(x => x match {\n            case Left(s) => s\n            case Right(l) => l\n        })\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzsql51f8.scala:9:10 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        })\n\u001b[31m\u001b[31m  |\u001b[0m          ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for Matchable..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mMatchable\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[Matchable]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[Matchable].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsql51f8.scala:13:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsql51f8.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith(_.right.get > _.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptlkt13f3.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptlkt13f3.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptlkt13f3.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((a, b) => a.right.get < b.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2wmqmg7n.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        val sorted = subjectmarks.sortBy(x => x.right.get)\n        sorted\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqoiee32.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqoiee32.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqoiee32.scala:10:88 --------------------\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x, y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpndlfv1.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortWith((x,y) => x.right.get < y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpic3j2acm.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpic3j2acm.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpic3j2acm.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.getOrElse(0))\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9of18n_9.scala:6:54 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        subjectmarks.sortBy(\u001b[36mx\u001b[0m => x.right.getOrElse(\u001b[31m0\u001b[0m))\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for AnyVal..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.ordered[\u001b[35mAnyVal\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[scala.math.Ordering.AsComparable[AnyVal]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type scala.math.Ordering.AsComparable[AnyVal].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9of18n_9.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(_.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1666123873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsd0nkbzs.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a list of tuples using the second value of each tuple.\n    def subjectMarks(subjectmarks : List[Either[String, Long]]) : List[Either[String, Long]] = {\n        subjectmarks.sortBy(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(subjectMarks((List[Either[String, Long]]((\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l), (\"Social sciences\", 82l)))).equals((List[Either[String, Long]]((\"Social sciences\", 82l), (\"English\", 88l), (\"Science\", 90l), (\"Maths\", 97l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Telugu\", 49l), (\"Hindhi\", 54l), (\"Social\", 33l)))).equals((List[Either[String, Long]]((\"Social\", 33l), (\"Telugu\", 49l), (\"Hindhi\", 54l)))));\n    assert(subjectMarks((List[Either[String, Long]]((\"Physics\", 96l), (\"Chemistry\", 97l), (\"Biology\", 45l)))).equals((List[Either[String, Long]]((\"Biology\", 45l), (\"Physics\", 96l), (\"Chemistry\", 97l)))));\n    }\n\n}\n",
      "timestamp": 1665510506,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(subjectMarks((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m), (\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m)))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Social sciences\"\u001b[0m, \u001b[31m82l\u001b[0m), (\u001b[31m\"English\"\u001b[0m, \u001b[31m88l\u001b[0m), (\u001b[31m\"Science\"\u001b[0m, \u001b[31m90l\u001b[0m), (\u001b[31m\"Maths\"\u001b[0m, \u001b[31m97l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpjzd8a8.scala:9:88 ---------------------\u001b[0m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
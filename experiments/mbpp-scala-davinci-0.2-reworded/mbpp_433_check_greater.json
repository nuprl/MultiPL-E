{
  "name": "mbpp_433_check_greater",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the entered number is greater than the elements of the given list.\n    def checkGreater(arr : List[Long], number : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_433_check_greater.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkGreater((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong)), (4l)) == (false));\n    assert(checkGreater((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong)), (8l)) == (true));\n    assert(checkGreater((List[Long](9l.toLong, 7l.toLong, 4l.toLong, 8l.toLong, 6l.toLong, 1l.toLong)), (11l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (arr.isEmpty) true\n        else if (arr.head > number) false\n        else checkGreater(arr.tail, number)",
    "        for (i <- 0 until arr.length) {\n            if (arr(i) > number) return false\n        }\n        return true",
    "        if (arr.isEmpty) true\n        else if (arr.head > number) false\n        else checkGreater(arr.tail, number)",
    "        if (arr.isEmpty) true\n        else if (arr.head > number) false\n        else checkGreater(arr.tail, number)",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        arr.forall(x => x < number)",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        for (i <- arr) {\n            if (i > number) return true\n        }\n        return false",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        arr.forall(x => x < number)",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        if (arr.isEmpty) return true\n        if (arr.head > number) return false\n        checkGreater(arr.tail, number)",
    "        if (arr.length == 0) return true\n        if (arr.head > number) return false\n        return checkGreater(arr.tail, number)",
    "        for (i <- arr) {\n            if (i > number) return false\n        }\n        return true",
    "        if (arr.isEmpty) true\n        else if (arr.head > number) false\n        else checkGreater(arr.tail, number)"
  ]
}
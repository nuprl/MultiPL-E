{
  "name": "mbpp_63_max_difference",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the maximum difference between available pairs in the given tuple list.\n    def maxDifference(test_list : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxDifference((List[Long]((3l, 5l), (1l, 7l), (10l, 3l), (1l, 2l)))) == (7l));\n    assert(maxDifference((List[Long]((4l, 6l), (2l, 17l), (9l, 13l), (11l, 12l)))) == (15l));\n    assert(maxDifference((List[Long]((12l, 35l), (21l, 27l), (13l, 23l), (41l, 22l)))) == (23l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                val diff = abs(test_list(i) - test_list(j))\n                if (diff > max_diff) max_diff = diff\n            }\n        }\n        max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                val diff = test_list(j) - test_list(i)\n                if (diff > max_diff) max_diff = diff\n            }\n        }\n        max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(j) - test_list(i) > max_diff) max_diff = test_list(j) - test_list(i)\n            }\n        }\n        return max_diff",
    "        var max_difference = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                val difference = test_list(j) - test_list(i)\n                if (difference > max_difference) {\n                    max_difference = difference\n                }\n            }\n        }\n        max_difference",
    "        var max_diff = 0L\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < min_value) min_value = test_list(i)\n            else if (test_list(i) - min_value > max_diff) max_diff = test_list(i) - min_value\n        }\n        return max_diff",
    "        var max_difference = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                val difference = test_list(j) - test_list(i)\n                if (difference > max_difference) {\n                    max_difference = difference\n                }\n            }\n        }\n        return max_difference",
    "        var max_diff = 0L\n        var min_value = test_list(0)\n        for (i <- 1 to test_list.length - 1) {\n            max_diff = max(max_diff, test_list(i) - min_value)\n            min_value = min(min_value, test_list(i))\n        }\n        max_diff",
    "        val sorted_list = test_list.sortWith(_ < _)\n        var max_diff = 0L\n        for (i <- 0 until sorted_list.length - 1) {\n            val diff = sorted_list(i + 1) - sorted_list(i)\n            if (diff > max_diff) max_diff = diff\n        }\n        max_diff",
    "        var max_diff = 0L\n        var min_value = test_list(0)\n        for (i <- 1 until test_list.length) {\n            if (test_list(i) - min_value > max_diff) max_diff = test_list(i) - min_value\n            if (test_list(i) < min_value) min_value = test_list(i)\n        }\n        max_diff",
    "        var max_diff = 0L\n        var min_val = test_list(0)\n        for (i <- 1 to test_list.length - 1) {\n            max_diff = max(max_diff, test_list(i) - min_val)\n            min_val = min(min_val, test_list(i))\n        }\n        max_diff",
    "        var max_diff : Long = 0\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                val diff = test_list(j) - test_list(i)\n                if (diff > max_diff) max_diff = diff\n            }\n        }\n        return max_diff",
    "        val sorted_list = test_list.sorted\n        val max_difference = sorted_list.last - sorted_list.head\n        return max_difference",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                max_diff = max(max_diff, test_list(j) - test_list(i))\n            }\n        }\n        max_diff",
    "        var max_diff = 0L\n        var min_value = test_list(0)\n        for (i <- 1 until test_list.length) {\n            if (test_list(i) - min_value > max_diff) max_diff = test_list(i) - min_value\n            if (test_list(i) < min_value) min_value = test_list(i)\n        }\n        max_diff",
    "        var max_diff = 0L\n        var min_element = test_list(0)\n        for (i <- 1 until test_list.length) {\n            max_diff = max(max_diff, test_list(i) - min_element)\n            min_element = min(min_element, test_list(i))\n        }\n        max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                val diff = abs(test_list(i) - test_list(j))\n                if (diff > max_diff) max_diff = diff\n            }\n        }\n        max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                max_diff = max(max_diff, test_list(j) - test_list(i))\n            }\n        }\n        return max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                max_diff = max(max_diff, test_list(j) - test_list(i))\n            }\n        }\n        max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(j) - test_list(i) > max_diff) {\n                    max_diff = test_list(j) - test_list(i)\n                }\n            }\n        }\n        max_diff",
    "        var max_diff = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                val diff = abs(test_list(i) - test_list(j))\n                if (diff > max_diff) max_diff = diff\n            }\n        }\n        return max_diff"
  ]
}
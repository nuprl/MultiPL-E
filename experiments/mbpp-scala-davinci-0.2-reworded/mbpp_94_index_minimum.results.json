{
  "name": "mbpp_94_index_minimum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        var i = 0\n        for (e <- test_list) {\n            e match {\n                case Left(x) => {\n                    if (i < min) {\n                        min = i\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (x < min) {\n                        min = x\n                        min_index = i\n                    }\n                }\n            }\n            i += 1\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmmac59u.scala:32:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmmac59u.scala:32:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmmac59u.scala:32:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var index = 0\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- test_list) {\n            i match {\n                case Left(s) => {\n                    if (index < min) {\n                        min = index\n                        min_index = index\n                    }\n                    index += 1\n                }\n                case Right(l) => {\n                    index += l\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => \"error\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpabrnzxzf.scala:19:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                    index += l\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpabrnzxzf.scala:29:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpabrnzxzf.scala:29:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpabrnzxzf.scala:29:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Vars",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > 0) {\n                        min_value = 0\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > x) {\n                        min_value = x\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3_ha6o_.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3_ha6o_.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3_ha6o_.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6o2ywt_4.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6o2ywt_4.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6o2ywt_4.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(_.right.get).zipWithIndex.min._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_index = i\n                    min_value = test_list(i).right.get\n                }\n            }\n        }\n        if (min_index == -1) {\n            return \"None\"\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptk9fsi32.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptk9fsi32.scala:22:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptk9fsi32.scala:22:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.filter(_.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a1m1lyy.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a1m1lyy.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a1m1lyy.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_index == -1) {\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (x < min) {\n                        min = x\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"error\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6g2pmvg.scala:29:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6g2pmvg.scala:29:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6g2pmvg.scala:29:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_value : Long = Long.MaxValue\n        var min_index : Int = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_value = test_list(i).right.get\n                    min_index = i\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpry8xxi2q.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpry8xxi2q.scala:19:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpry8xxi2q.scala:19:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(_.right.get).zipWithIndex.min._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = test_list(0).right.get\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = test_list(0).right.get\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            val current = test_list(i)\n            if (current.isRight) {\n                val current_value = current.right.get\n                if (current_value < min) {\n                    min = current_value\n                    min_index = i\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0t96d1vk.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0t96d1vk.scala:21:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0t96d1vk.scala:21:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        if (test_list.isEmpty) {\n            return \"\"\n        }\n        var min = test_list.head.right.get\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkxpt15o.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkxpt15o.scala:20:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkxpt15o.scala:20:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(x => x.right.get).min\n        test_list.filter(x => x.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (x < min_value) {\n                        min_value = x\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (x < min_value) {\n                        min_value = x\n                        min_index = i\n                    }\n                }\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3bw_12vr.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mif\u001b[0m (x < min_value) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (min_value : Long)\n\u001b[31m   |\u001b[0m                            Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3bw_12vr.scala:12:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                        min_value = x\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Found:    (x : String)\n\u001b[31m   |\u001b[0m                                    Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3bw_12vr.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3bw_12vr.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(x => x.right.get).min\n        test_list.filter(x => x.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_index = i\n                    min_value = test_list(i).right.get\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(x => x.right.get).min\n        test_list.filter(x => x.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            val current_value = test_list(i) match {\n                case Left(x) => Long.MaxValue\n                case Right(x) => x\n            }\n            if (current_value < min_value) {\n                min_index = i\n                min_value = current_value\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x490dh3.scala:24:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x490dh3.scala:24:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x490dh3.scala:24:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        test_list.filter(_.isLeft).map(_.left.get).zipWithIndex.minBy(_._2)._1\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpwrkm8s.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpwrkm8s.scala:9:68 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprpwrkm8s.scala:9:87 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(x => x.right.get).zipWithIndex.minBy(_._1)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjsbdnbu.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjsbdnbu.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjsbdnbu.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                val value = test_list(i).right.get\n                if (value < min) {\n                    min = value\n                    min_index = i\n                }\n            }\n        }\n        if (min_index == -1) {\n            return \"No minimum\"\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0o6c0twz.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0o6c0twz.scala:23:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0o6c0twz.scala:23:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(x => x.right.get).min\n        test_list.filter(x => x.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = test_list(0).right.get\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index : Long = Long.MaxValue\n        var min_value : String = \"\"\n        for (i <- 0 until test_list.size) {\n            if (test_list(i).right.get < min_index) {\n                min_index = test_list(i).right.get\n                min_value = test_list(i).left.get\n            }\n        }\n        return min_value\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0zvee9w4.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0zvee9w4.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0zvee9w4.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > x.length) {\n                        min_value = x.length\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > x) {\n                        min_value = x\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => x.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7a2rze_p.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7a2rze_p.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7a2rze_p.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (min_value > 0) {\n                        min_index = i\n                        min_value = 0\n                    }\n                }\n                case Right(l) => {\n                    if (l < min_value) {\n                        min_index = i\n                        min_value = l\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => l.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp49yfn1pd.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp49yfn1pd.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp49yfn1pd.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight && test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        if (min_index == -1) {\n            return \"None\"\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hhc5j_.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hhc5j_.scala:20:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hhc5j_.scala:20:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_index = i\n                    min_value = test_list(i).right.get\n                }\n            }\n        }\n        if (min_index == -1) {\n            return \"No minimum value\"\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85s9nc4n.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85s9nc4n.scala:22:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85s9nc4n.scala:22:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > x.length) {\n                        min_index = i\n                        min_value = x.length\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > x) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => x.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight && test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2aebqot.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2aebqot.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2aebqot.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.filter(_.right.get == min).map(_.left.get).head\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj17kjhk.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj17kjhk.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj17kjhk.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > test_list(i).right.get) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > test_list(i).right.get) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjo8loie8.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjo8loie8.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjo8loie8.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a1m1lyy.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a1m1lyy.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a1m1lyy.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(value) => {\n                    if (value < min_value) {\n                        min_index = i\n                        min_value = value\n                    }\n                }\n                case Right(value) => {\n                    if (value < min_value) {\n                        min_index = i\n                        min_value = value\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(value) => value\n            case Right(value) => value.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpibi16lmq.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mif\u001b[0m (value < min_value) {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (min_value : Long)\n\u001b[31m   |\u001b[0m                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpibi16lmq.scala:13:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        min_value = value\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Found:    (value : String)\n\u001b[31m   |\u001b[0m                                    Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpibi16lmq.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpibi16lmq.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > test_list(i).right.get) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {}\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vysv5iq.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vysv5iq.scala:22:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8vysv5iq.scala:22:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(_.right.get).zipWithIndex.min._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var index = 0\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (i == 0) {\n                        result = s\n                    }\n                }\n                case Right(l) => {\n                    if (l < min) {\n                        min = l\n                        result = test_list(i - 1).left.get\n                    }\n                }\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ebm4719.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ebm4719.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ebm4719.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_index = i\n                    min_value = test_list(i).right.get\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > 0) {\n                        min_index = i\n                        min_value = 0\n                    }\n                }\n                case Right(x) => {\n                    if (x < min_value) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"Error\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwfzoga26.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwfzoga26.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwfzoga26.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index : Long = Long.MaxValue\n        var min_value : String = \"\"\n        for (i <- test_list) {\n            i match {\n                case Left(s) => {\n                    if (min_index == Long.MaxValue) {\n                        min_index = 0\n                        min_value = s\n                    }\n                }\n                case Right(l) => {\n                    if (l < min_index) {\n                        min_index = l\n                        min_value = test_list(min_index.toInt).left.get\n                    }\n                }\n            }\n        }\n        return min_value\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmg786dff.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmg786dff.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmg786dff.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > x.length) {\n                        min_index = i\n                        min_value = x.length\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > x) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => x.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(x => x.right.get).zipWithIndex.min._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_2fhd07.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_2fhd07.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_2fhd07.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.filter(_.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for(i <- 0 until test_list.length) {\n            if(test_list(i).isRight) {\n                if(test_list(i).right.get < min) {\n                    min = test_list(i).right.get\n                    min_index = i\n                }\n            }\n        }\n        if(min_index == -1) {\n            return \"No minimum found\"\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123605,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg181s641.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg181s641.scala:22:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg181s641.scala:22:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min == Long.MaxValue) {\n                        min = 0\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (x < min) {\n                        min = x\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9n5q1lc.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9n5q1lc.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9n5q1lc.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw7pvcpo.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw7pvcpo.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw7pvcpo.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        // We will use a map to store the values.\n        var map = Map[String, Long]()\n        // We will use a list to store the keys.\n        var list = List[String]()\n        // We will use a variable to store the minimum value.\n        var min = Long.MaxValue\n        // We will use a variable to store the minimum key.\n        var min_key = \"\"\n        // We will use a variable to store the current key.\n        var key = \"\"\n        // We will use a variable to store the current value.\n        var value = 0L\n        // We will use a variable to store the current tuple.\n        var tuple = \"\"\n        // We will use a variable to store the current tuple value.\n        var tuple_value = 0L\n        // We will use a variable to store the current tuple key.\n        var tuple_key = \"\"\n        // We will use a variable to store the current tuple index.\n        var tuple_index = 0\n        // We will use a variable to store the current tuple length.\n        var tuple_length = 0\n        // We will use a variable to store the current tuple character.\n        var tuple_char = ' '\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code = 0\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code_string = \"\"\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code_string_length = 0\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code_string_length_string = \"\"\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code_string_length_string_length = 0\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code_string_length_string_length_string = \"\"\n        // We will use a variable to store the current tuple character code.\n        var tuple_char_code_string_length_string_length_string_length = 0\n        // We will use a variable to store the current tuple character code.\n\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprttdtdk3.scala:46:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprttdtdk3.scala:48:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprttdtdk3.scala:48:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprttdtdk3.scala:48:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > x.length) {\n                        min_index = i\n                        min_value = x.length\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > x) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => x.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp415s8o1j.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.foldLeft(Long.MaxValue)((a, b) => {\n            b match {\n                case Left(x) => a\n                case Right(x) => min(a, x)\n            }\n        })\n        test_list.foldLeft(\"\")((a, b) => {\n            b match {\n                case Left(x) => if (a == \"\") x else a\n                case Right(x) => if (x == min) x.toString else a\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpg3o__h5a.scala:9:33 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                \u001b[33mcase\u001b[0m Right(x) => min(a, x)\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^\u001b[0m\n\u001b[31m  |\u001b[0m                                 Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3o__h5a.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3o__h5a.scala:20:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg3o__h5a.scala:20:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            val cur = test_list(i)\n            if (cur.isRight) {\n                if (cur.right.get < min) {\n                    min = cur.right.get\n                    min_index = i\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_n68mzz.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_n68mzz.scala:20:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo_n68mzz.scala:20:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var minimum_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(minimum_index).right.get) {\n                minimum_index = i\n            }\n        }\n        return test_list(minimum_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr06oyv57.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr06oyv57.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr06oyv57.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight && test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2aebqot.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2aebqot.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm2aebqot.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var index = 0\n        var min_index = 0\n        for (i <- test_list) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                    min_index = index\n                }\n            }\n            index += 1\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqececys6.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqececys6.scala:21:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqececys6.scala:21:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        test_list.filter(_.isLeft).map(_.left.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn07druiq.scala:9:52 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn07druiq.scala:9:68 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn07druiq.scala:9:87 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > test_list(i).right.get) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {}\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1qg5a5y.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1qg5a5y.scala:22:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1qg5a5y.scala:22:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.filter(_.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (min_value > 0) {\n                        min_value = 0\n                        min_index = i\n                    }\n                }\n                case Right(l) => {\n                    if (l < min_value) {\n                        min_value = l\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => l.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprlbi1zxw.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprlbi1zxw.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprlbi1zxw.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(_.right.get).zipWithIndex.min._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88tl49ha.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(x => x.right.get).min\n        val min_index = test_list.indexOf(Right(min))\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsz0hot7n.scala:11:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsz0hot7n.scala:11:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsz0hot7n.scala:11:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index : Long = Long.MaxValue\n        var min_value : String = \"\"\n        for (i <- test_list) {\n            if (i.isRight) {\n                if (i.right.get < min_index) {\n                    min_index = i.right.get\n                    min_value = i.left.get\n                }\n            }\n        }\n        return min_value\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123608,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg22pwfh.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg22pwfh.scala:19:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg22pwfh.scala:19:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(x => x.right.get).min\n        test_list.filter(x => x.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26gicehm.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = test_list(0).right.get\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_value = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5hkfg2uz.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5hkfg2uz.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5hkfg2uz.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5fcof3k.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (min_index == -1) {\n                        min_index = i\n                    }\n                    else {\n                        min_value = min(min_value, s.length)\n                        if (s.length == min_value) {\n                            min_index = i\n                        }\n                    }\n                }\n                case Right(l) => {\n                    if (min_index == -1) {\n                        min_index = i\n                    }\n                    else {\n                        min_value = min(min_value, l)\n                        if (l == min_value) {\n                            min_index = i\n                        }\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => l.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqzhsw5v8.scala:40:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqzhsw5v8.scala:40:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqzhsw5v8.scala:40:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4i4_se5.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4i4_se5.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4i4_se5.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var minimum = Long.MaxValue\n        var minimum_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < minimum) {\n                minimum = test_list(i).right.get\n                minimum_index = i\n            }\n        }\n        return test_list(minimum_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbft1ozj.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbft1ozj.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnbft1ozj.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (x < min_value) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n                case Right(x) => {\n                    if (x < min_value) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => x.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlh_fyb9.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                    \u001b[33mif\u001b[0m (x < min_value) {\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (min_value : Long)\n\u001b[31m   |\u001b[0m                            Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlh_fyb9.scala:13:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        min_value = x\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Found:    (x : String)\n\u001b[31m   |\u001b[0m                                    Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlh_fyb9.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlh_fyb9.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index : Long = Long.MaxValue\n        var min_value : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_index) {\n                min_index = test_list(i).right.get\n                min_value = test_list(i).left.get\n            }\n        }\n        return min_value\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123617,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkc1wvops.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkc1wvops.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkc1wvops.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(x => x match {\n            case Left(value) => value\n            case Right(value) => value\n        }).min\n        test_list.find(x => x match {\n            case Left(value) => value\n            case Right(value) => value\n        } == min_index).get match {\n            case Left(value) => value\n            case Right(value) => value.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpytmo_t23.scala:13:10 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        } == min_index).get \u001b[33mmatch\u001b[0m {\n\u001b[31m\u001b[31m   |\u001b[0m          ^^\u001b[0m\n\u001b[31m   |\u001b[0m          ')' expected, but identifier found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpytmo_t23.scala:9:14 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        }).min\n\u001b[31m\u001b[31m  |\u001b[0m              ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for B\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mwhere:    B is a type variable with constraint >: Matchable\n\u001b[31m  |\u001b[0m..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mB\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[B]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[B].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpytmo_t23.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mcase\u001b[0m Left(value) => value\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (value : String)\n\u001b[31m   |\u001b[0m                                Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpytmo_t23.scala:12:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            \u001b[33mcase\u001b[0m Right(value) => value\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                 Found:    (value : Long)\n\u001b[31m   |\u001b[0m                                 Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpytmo_t23.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Var",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (min_index == -1) {\n                        min_index = i\n                        min_value = 0\n                    }\n                }\n                case Right(l) => {\n                    if (l < min_value) {\n                        min_index = i\n                        min_value = l\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkpazvyyl.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkpazvyyl.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkpazvyyl.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu36hsu6x.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_index == -1) {\n                        min_index = i\n                        min_value = 0\n                    }\n                }\n                case Right(x) => {\n                    if (x < min_value) {\n                        min_index = i\n                        min_value = x\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => \"\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0hs2avs.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0hs2avs.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0hs2avs.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(str) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(num) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6cnae88.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6cnae88.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd6cnae88.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n                case Right(x) => {\n                    if (test_list(i).right.get < min_value) {\n                        min_index = i\n                        min_value = test_list(i).right.get\n                    }\n                }\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw7pvcpo.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw7pvcpo.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw7pvcpo.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (s.length < min_value) {\n                        min_index = i\n                        min_value = s.length\n                    }\n                }\n                case Right(l) => {\n                    if (l < min_value) {\n                        min_index = i\n                        min_value = l\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => l.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjy_h4mg.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjy_h4mg.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjy_h4mg.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.map(x => x.right.get).zipWithIndex.minBy(_._1)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjsbdnbu.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjsbdnbu.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjsbdnbu.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg77vfsdl.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(x) => {\n                    if (min_value > x.length) {\n                        min_value = x.length\n                        min_index = i\n                    }\n                }\n                case Right(x) => {\n                    if (min_value > x) {\n                        min_value = x\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index) match {\n            case Left(x) => x\n            case Right(x) => x.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7a2rze_p.scala:30:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7a2rze_p.scala:30:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7a2rze_p.scala:30:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_value = test_list(i).right.get\n                    min_index = i\n                }\n            }\n        }\n        if (min_index == -1) {\n            return \"No value found\"\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqfni803t.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqfni803t.scala:22:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqfni803t.scala:22:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = test_list(0).right.get\n        for (i <- 1 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy45giuch.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.filter(_.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe66e5o2d.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index : Long = Long.MaxValue\n        var min_value : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_index) {\n                    min_index = test_list(i).right.get\n                    min_value = test_list(i).left.get\n                }\n            }\n        }\n        return min_value\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123617,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1xbm1b4.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1xbm1b4.scala:19:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1xbm1b4.scala:19:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val (min_index, min_value) = test_list.foldLeft((0, Long.MaxValue))((acc, x) => {\n            x match {\n                case Left(s) => {\n                    if (acc._2 < min_value) (acc._1, acc._2)\n                    else (acc._1 + 1, acc._2)\n                }\n                case Right(l) => {\n                    if (l < min_value) (acc._1, l)\n                    else (acc._1 + 1, acc._2)\n                }\n            }\n        })\n        test_list(min_index) match {\n            case Left(s) => s\n            case Right(l) => l.toString\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpmgruovbl.scala:6:24 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m (min_index, min_value) = test_list.foldLeft((\u001b[31m0\u001b[0m, Long.MaxValue))((\u001b[36macc\u001b[0m, \u001b[36mx\u001b[0m) => {\n\u001b[31m\u001b[31m  |\u001b[0m                        ^\u001b[0m\n\u001b[31m  |\u001b[0m                        Recursive \u001b[33mvalue\u001b[0m \u001b[35m$1$\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgruovbl.scala:24:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgruovbl.scala:24:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmgruovbl.scala:24:87 --------------------\u001b[0m\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = -1\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbo2gqubs.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbo2gqubs.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbo2gqubs.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight) {\n                if (test_list(i).right.get < min_value) {\n                    min_index = i\n                    min_value = test_list(i).right.get\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzzyki3_.scala:19:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).isRight && test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        if (min_index == -1) \"No minimum\" else test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4jatov0a.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4jatov0a.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4jatov0a.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.filter(_.right.get == min).head.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi242gcy6.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < test_list(min_index).right.get) {\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4i4_se5.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4i4_se5.scala:15:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4i4_se5.scala:15:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min = Long.MaxValue\n        var min_index = -1\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min) {\n                min = test_list(i).right.get\n                min_index = i\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcd3iait.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n8eofq3.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min = test_list.map(_.right.get).min\n        test_list.find(_.right.get == min).get.left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpphii1ptc.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpphii1ptc.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpphii1ptc.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_value = test_list(i).right.get\n                min_index = i\n            }\n        }\n        return test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123590,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfybv4lw4.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            test_list(i) match {\n                case Left(s) => {\n                    if (min_value > test_list(i).right.get) {\n                        min_value = test_list(i).right.get\n                        min_index = i\n                    }\n                }\n                case Right(l) => {\n                    if (min_value > test_list(i).right.get) {\n                        min_value = test_list(i).right.get\n                        min_index = i\n                    }\n                }\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp606gvmnk.scala:27:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp606gvmnk.scala:27:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp606gvmnk.scala:27:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_value = test_list.map(_.right.get).min\n        val min_index = test_list.map(_.right.get).indexOf(min_value)\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptx1qcu9f.scala:11:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptx1qcu9f.scala:11:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptx1qcu9f.scala:11:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        val min_index = test_list.zipWithIndex.minBy(_._1.right.get)._2\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6r1z4hxv.scala:10:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.\n    def indexMinimum(test_list : List[Either[String, Long]]) : String = {\n        var min_index = 0\n        var min_value = Long.MaxValue\n        for (i <- 0 until test_list.length) {\n            if (test_list(i).right.get < min_value) {\n                min_index = i\n                min_value = test_list(i).right.get\n            }\n        }\n        test_list(min_index).left.get\n    }\n    def main(args: Array[String]) = {\n    assert(indexMinimum((List[Either[String, Long]]((\"Rash\", 143l), (\"Manjeet\", 200l), (\"Varsha\", 100l)))).equals((\"Varsha\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Yash\", 185l), (\"Dawood\", 125l), (\"Sanya\", 175l)))).equals((\"Dawood\")));\n    assert(indexMinimum((List[Either[String, Long]]((\"Sai\", 345l), (\"Salman\", 145l), (\"Ayesha\", 96l)))).equals((\"Ayesha\")));\n    }\n\n}\n",
      "timestamp": 1665510266,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:68 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                    ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnpncqe1.scala:17:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMinimum((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Rash\"\u001b[0m, \u001b[31m143l\u001b[0m), (\u001b[31m\"Manjeet\"\u001b[0m, \u001b[31m200l\u001b[0m), (\u001b[31m\"Varsha\"\u001b[0m, \u001b[31m100l\u001b[0m)))).equals((\u001b[31m\"Varsha\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
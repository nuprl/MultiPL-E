{
  "name": "mbpp_448_cal_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum of perrin numbers.\n    def calSum(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(calSum((9l)) == (49l));\n    assert(calSum((10l)) == (66l));\n    assert(calSum((11l)) == (88l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin(n.toInt)",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + perrin(p)\n        }\n        sum",
    "        val mod = 1000000007L\n        val perrin = ArrayBuffer[Long](3, 0, 2)\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            perrin += (perrin(i - 2) + perrin(i - 3)) % mod\n            sum += perrin(i)\n        }\n        sum",
    "        var p = ArrayBuffer[Long]()\n        p += 3\n        p += 0\n        p += 2\n        var i = 3\n        while (i <= n) {\n            p += 2 * p(i - 2) + p(i - 3)\n            i += 1\n        }\n        return p(n.toInt)",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p * 2 + 1\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 0L\n        var c = 2L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            b = a\n            a = c\n            c = b + a\n        }\n        return sum",
    "        var perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var sum : Long = 0\n        var p : Long = 3\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        return sum",
    "        var perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        sum",
    "        val perrin = ArrayBuffer.fill(3)(0)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        var i = 3\n        while (i <= n) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            i += 1\n        }\n        perrin(2)",
    "        val perrin = new Array[Long](100000)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.take(n.toInt + 1).sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 4 to n.toInt) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        return sum",
    "        var sum = 0L\n        var i = 2L\n        while (i <= n) {\n            sum += perrin(i)\n            i += 1\n        }\n        return sum",
    "        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        var sum = 2\n        var i = 3\n        while (i <= n) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n            i += 1\n        }\n        return sum",
    "        var sum : Long = 0\n        var a : Long = 2\n        var b : Long = 3\n        var c : Long = 5\n        while (c <= n) {\n            sum += c\n            a = b + c\n            b = c + a\n            c = a + b\n        }\n        return sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 0\n        while (i < n) {\n            sum += p\n            p = p + perrin(p)\n            i += 1\n        }\n        sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var a = 3L; var b = 2L; var c = 3L; var sum = 0L;\n        for (i <- 3 to n.toInt) {\n            sum += c;\n            val t = a + b;\n            a = b; b = c; c = t;\n        }\n        return sum;",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        sum = perrin(0) + perrin(1) + perrin(2)\n        return sum",
    "        var perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 1\n        while (i <= n) {\n            sum += p\n            p = p + i\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var p = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            p(0) = p(1)\n            p(1) = p(2)\n            p(2) = p(0) + p(1)\n            sum += p(2)\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            a = b\n            b = c\n            c = a + b\n            sum += c\n        }\n        return sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        var i = 2L\n        while (i <= n) {\n            c = a + b\n            sum += c\n            a = b\n            b = c\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var perrin = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 1\n        while (p <= n) {\n            sum += p\n            i += 1\n            p = perrin(i)\n        }\n        return sum",
    "        val perrin = ArrayBuffer[Long](3, 0, 2)\n        var i = 3\n        while (perrin(i - 1) < n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        perrin.sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 4 to n.toInt) {\n            c = a + b\n            a = b\n            b = c\n            sum += c\n        }\n        return sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 4 to n.toInt) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        return sum",
    "        val p = Array.fill(n.toInt + 1)(0L)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) p(i) = p(i - 2) + p(i - 3)\n        p.sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        sum",
    "        var sum : Long = 0\n        var perrin : Array[Long] = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        return sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin(n.toInt)",
    "        var a = 3; var b = 2; var c = 0; var sum = 0L\n        for (i <- 1 to n.toInt) {\n            c = a; a = b; b = c + a\n            sum += b\n        }\n        sum",
    "        var sum = 0L\n        var i = 0\n        while (i < n) {\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var perrin = ArrayBuffer[Long](3, 0, 2)\n        var sum = 2\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        var i = 3\n        while (i <= n) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n            i += 1\n        }\n        return sum",
    "        var sum : Long = 0\n        var p : Long = 3\n        var i : Long = 0\n        while (i < n) {\n            sum += p\n            i += 1\n            p = p + 2 * i + 1\n        }\n        return sum",
    "        var perrin = new Array[Long](n.toInt)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 until n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            a = b\n            b = c\n            c = a + b\n            sum += c\n        }\n        return sum",
    "        var sum : Long = 0\n        var perrin : ArrayBuffer[Long] = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n        }\n        for (i <- 0 to n.toInt) {\n            sum += perrin(i)\n        }\n        return sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += a\n            val temp = a\n            a = c\n            c = b + 2 * temp\n            b = temp\n        }\n        sum",
    "        val perrin = Array.fill(3)(0)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        var sum = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = sum\n            sum += perrin(0)\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        sum = perrin(2)\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += a\n            b = a\n            a = c\n            c = b + a\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var a = 3; var b = 0; var c = 2; var sum = 2;\n        while (c <= n) {\n            sum += c;\n            val temp = a;\n            a = c;\n            c = b + c;\n            b = temp;\n        }\n        sum",
    "        var sum : Long = 0\n        var p : Long = 3\n        var i : Long = 0\n        while (i < n) {\n            sum += p\n            p = p + 2 * i + 3\n            i += 1\n        }\n        return sum",
    "        var sum : Long = 0\n        var perrin : Long = 3\n        var perrin1 : Long = 0\n        var perrin2 : Long = 2\n        for (i <- 3 to n.toInt) {\n            sum += perrin\n            perrin1 = perrin2\n            perrin2 = perrin\n            perrin = perrin1 + perrin2\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n        }\n        sum = perrin.sum\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var pp = 0L\n        var ppp = 2L\n        for (i <- 3 to n.toInt) {\n            sum += p\n            val temp = p\n            p = p + pp\n            pp = temp\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 4 to n.toInt) {\n            c = a + b\n            sum += c\n            a = b\n            b = c\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var a = 3; var b = 0; var c = 2; var sum = 0L;\n        while (a <= n) {\n            sum += a;\n            val temp = a;\n            a = b + c;\n            b = c;\n            c = temp;\n        }\n        sum",
    "        val perrin = ArrayBuffer.fill(n.toInt + 1)(0L)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            val t = a + b\n            b = c\n            c = t\n            a = t\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = perrin(p)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n        }\n        for (i <- 0 to n.toInt) {\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            c = a + b\n            a = b\n            b = c\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        var i = 3\n        while (i <= n) {\n            perrin += perrin(i - perrin(i - 1)) + perrin(i - perrin(i - 2))\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        var a = 3L; var b = 2L; var c = 3L; var sum = 2L; var i = 3L\n        while (i <= n) {\n            a = b; b = c; c = a + b\n            sum += c\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = perrin(p)\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 0 until n) {\n            sum += a\n            c = a + b\n            a = b\n            b = c\n        }\n        sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        for (i <- 4L to n) {\n            b = a; a = c; c = b + a\n            sum += c\n        }\n        sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        var i = 2L\n        while (i < n) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n            i += 1\n        }\n        return sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L\n        while (c <= n) {\n            sum += c\n            a = b; b = c; c = a + b\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin(n.toInt)",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L;\n        for (i <- 3 to n.toInt) {\n            sum += a;\n            var temp = a;\n            a = c;\n            c = b + 2 * temp;\n            b = temp;\n        }\n        return sum;",
    "        var sum = 0L\n        var perrin = 3L\n        var perrin1 = 0L\n        var perrin2 = 2L\n        for (i <- 1 to n.toInt) {\n            sum += perrin\n            perrin1 = perrin2\n            perrin2 = perrin\n            perrin = perrin1 + perrin2\n        }\n        sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 1 until n) {\n            sum += a\n            b = a\n            a = c\n            c = b + a\n        }\n        sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += c\n            a = b\n            b = c\n            c = a + b\n        }\n        return sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        val p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        sum = perrin(2)\n        return sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        var i = 3\n        while (i <= n) {\n            perrin += (perrin(i - 2) + perrin(i - 3))\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 1\n        while (i <= n) {\n            sum += p\n            p = p + 2 * i\n            i += 1\n        }\n        sum",
    "        var a = 3L\n        var b = 2L\n        var c = 0L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            c = a + b\n            a = b\n            b = c\n            sum += c\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            c = a + b\n            b = a\n            a = c\n        }\n        return sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 3 to n.toInt) {\n            c = a + b\n            a = b\n            b = c\n            sum += c\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        return perrin(2)",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += a\n            b = a\n            a = c\n            c = b + c\n        }\n        sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 0L\n        while (c <= n) {\n            sum += c\n            a = b\n            b = c\n            c = a + b\n        }\n        sum",
    "        var a = 3L;\n        var b = 2L;\n        var c = 0L;\n        var sum = 0L;\n        for (i <- 3 to n.toInt) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        while (c <= n) {\n            sum += c\n            a = b; b = c; c = a + b\n        }\n        sum",
    "        val perrin = new Array[Long](100000)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        var i = 3\n        while (perrin(i - 1) < n) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        var sum = 0L\n        for (j <- 0 until i) {\n            if (perrin(j) % 2 == 0) sum += perrin(j)\n        }\n        sum",
    "        val perrin = ArrayBuffer[Long](3, 0, 2)\n        var sum = 2\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer[Long]()\n        perrin += 3\n        perrin += 0\n        perrin += 2\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n        }\n        for (i <- 0 to n.toInt) {\n            sum += perrin(i)\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var sum = 0L\n        var perrin = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        for (i <- 1L until n) {\n            b = a; a = c; c = b + a\n            sum += c\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        for (i <- 2 to n.toInt) {\n            b = a; a = c; c = a + b\n            sum += c\n        }\n        sum",
    "        var a = 3L\n        var b = 2L\n        var c = 0L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            c = a + b\n            a = b\n            b = c\n            sum += c\n        }\n        sum",
    "        var a = 2L\n        var b = 3L\n        var c = 5L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += c\n            a = b\n            b = c\n            c = a + b\n        }\n        sum",
    "        var sum = 0L\n        var i = 0\n        while (i <= n) {\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        var sum : Long = 0\n        var a : Long = 3\n        var b : Long = 2\n        var c : Long = 0\n        while (a <= n) {\n            sum += a\n            c = a + b\n            b = a\n            a = c\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        for (i <- 4 to n.toInt) {\n            b = a; a = c; c = a + b\n            sum += c\n        }\n        sum",
    "        var sum : Long = 0\n        var perrin : Array[Long] = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        return sum",
    "        var sum = 0L\n        var p = ArrayBuffer[Long]()\n        p += 3\n        p += 0\n        p += 2\n        var i = 3\n        while (i <= n) {\n            p += p(i - 2) + p(i - 3)\n            sum += p(i)\n            i += 1\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            val temp = a; a = a + b; b = c; c = temp\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var perrin = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        return sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var sum = 0L\n        var i = 1L\n        while (i <= n) {\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        val perrin = ArrayBuffer[Long](3, 0, 2)\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            var next = perrin(i - 3) + perrin(i - 2)\n            perrin += next\n            sum += next\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            val t = a + b\n            b = c\n            c = t\n            a = c\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var p1 = 0L\n        var p2 = 2L\n        while (p <= n) {\n            sum += p\n            val temp = p\n            p = p1 + p2\n            p1 = p2\n            p2 = temp\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin(n.toInt)",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        return perrin(2)",
    "        var sum = 0L\n        var p = 3L\n        var i = 1\n        while (i <= n) {\n            sum += p\n            p = p + perrin(p)\n            i += 1\n        }\n        return sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 2 to n.toInt) {\n            b = c\n            c = a\n            a = b + c\n            sum += a\n        }\n        return sum",
    "        var a = 3L; var b = 2L; var c = 3L; var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            a = b; b = c; c = a + b\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 until n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin.sum",
    "        var perrin = ArrayBuffer[Long]()\n        perrin += 3\n        perrin += 0\n        perrin += 2\n        var i = 3\n        while (perrin(i - 1) < n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        var sum = 0L\n        for (i <- 0 until perrin.length - 1) {\n            if (perrin(i) % 2 == 0) sum += perrin(i)\n        }\n        return sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3; p(1) = 0; p(2) = 2\n        for (i <- 3 to n.toInt) p(i) = p(i - 2) + p(i - 3)\n        p.sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = perrin(p)\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var q = 2L\n        var r = 3L\n        for (i <- 4 to n.toInt) {\n            val t = p + q\n            sum += t\n            p = q\n            q = r\n            r = t\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + perrin(p)\n        }\n        sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += c\n            a = b\n            b = c\n            c = a + b\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        val p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = perrin(p)\n        }\n        sum",
    "        val perrin = ArrayBuffer[Long]()\n        perrin += 3\n        perrin += 0\n        perrin += 2\n        var i = 3\n        while (i <= n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        perrin(n.toInt)",
    "        var sum = 0L\n        var p = 3\n        var pn = 2\n        while (p <= n) {\n            sum += pn\n            pn = p\n            p += 2\n        }\n        sum",
    "        var sum = 0L\n        var i = 1L\n        while (i <= n) {\n            sum += perrin(i)\n            i += 1\n        }\n        sum",
    "        var sum : Long = 0\n        var perrin : Long = 3\n        var p1 : Long = 0\n        var p2 : Long = 2\n        var p3 : Long = 3\n        for (i <- 4 to n.toInt) {\n            perrin = p1 + p2\n            sum += perrin\n            p1 = p2\n            p2 = p3\n            p3 = perrin\n        }\n        return sum",
    "        var a = 3; var b = 0; var c = 2; var sum = 2;\n        while (c <= n) {\n            sum += c;\n            val temp = a;\n            a = c;\n            c = b + c;\n            b = temp;\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer[Long](3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        return sum",
    "        var sum : Long = 0\n        var perrin : Array[Long] = Array.fill(3)(0)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        sum = perrin(2)\n        return sum",
    "        var a = 3L\n        var b = 2L\n        var c = 0L\n        var sum = 0L\n        while (a <= n) {\n            sum += a\n            c = a + b\n            b = a\n            a = c\n        }\n        return sum",
    "        var perrin = ArrayBuffer[Long](3, 0, 2)\n        var sum = 2\n        for (i <- 3 to n.toInt) {\n            perrin += (perrin(i - 2) + perrin(i - 3))\n            sum += perrin(i)\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3L, 0L, 2L)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var sum : Long = 0\n        var perrin : Long = 3\n        var perrin1 : Long = 0\n        var perrin2 : Long = 2\n        for (i <- 1 to n.toInt) {\n            sum += perrin\n            perrin1 = perrin2\n            perrin2 = perrin\n            perrin = perrin1 + perrin2\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p * 3 + 2\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        val perrin = ArrayBuffer(3, 0, 2)\n        var i = 3\n        while (perrin(i - 1) < n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        perrin.sum",
    "        val perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        var i = 3\n        while (i <= n) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            i += 1\n        }\n        perrin(2)",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = perrin(p)\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        for (i <- 4L to n) {\n            b = a; a = c; c = b + a\n            sum += c\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + perrin(p)\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        sum = perrin(0) + perrin(1) + perrin(2)\n        return sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += a\n            b = a\n            a = c\n            c = b + a\n        }\n        sum",
    "        val perrin = new Array[Long](n.toInt + 1)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n        }\n        perrin(n.toInt)",
    "        var sum = 0L\n        var perrin = new Array[Long](n.toInt)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 until n.toInt) {\n            perrin(i) = perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 2L\n        while (c <= n) {\n            sum += c\n            a = b; b = c; c = a + b\n        }\n        sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 2L\n        for (i <- 3 to n.toInt) {\n            a = b\n            b = c\n            c = a + b - 2\n            sum += c\n        }\n        return sum",
    "        var sum = 0L\n        var i = 0\n        while (i <= n) {\n            sum += perrin(i)\n            i += 1\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 3 to n.toInt) {\n            sum += perrin(2)\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        return sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += a\n            b = a\n            a = c\n            c = b + a\n        }\n        sum",
    "        var sum = 0L\n        var perrin = ArrayBuffer[Long](3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            sum += perrin(i)\n        }\n        sum",
    "        var sum : Long = 0\n        var perrin : Array[Long] = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(2) = perrin(0) + perrin(1)\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n        }\n        sum = perrin(0) + perrin(1) + perrin(2)\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        return sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 0L\n        for (i <- 3 to n.toInt) {\n            sum += a\n            b = a\n            a = c\n            c = b + a\n        }\n        return sum",
    "        var sum = 0L\n        var perrin = Array(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n            sum += perrin(2)\n        }\n        return sum",
    "        var sum : Long = 0\n        var perrin : Long = 3\n        var perrin_1 : Long = 2\n        var perrin_2 : Long = 1\n        for (i <- 3 to n.toInt) {\n            sum += perrin\n            perrin_2 = perrin_1\n            perrin_1 = perrin\n            perrin = perrin_1 + perrin_2\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum",
    "        var sum = 0L\n        var perrin = new Array[Long](3)\n        perrin(0) = 3\n        perrin(1) = 0\n        perrin(2) = 2\n        for (i <- 1 to n.toInt) {\n            sum += perrin(2)\n            perrin(0) = perrin(1)\n            perrin(1) = perrin(2)\n            perrin(2) = perrin(0) + perrin(1)\n        }\n        sum",
    "        var sum = 0L\n        var p = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            p += (p(i - 2) + p(i - 3))\n            sum += p(i)\n        }\n        sum",
    "        val perrin = ArrayBuffer[Long](3, 0, 2)\n        var i = 3\n        while (perrin(i - 1) < n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n            i += 1\n        }\n        perrin.init.sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            a = b\n            b = c\n            c = a + b\n        }\n        return sum",
    "        var a = 0L\n        var b = 2L\n        var c = 3L\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += a\n            a = b\n            b = c\n            c = a + b\n        }\n        sum",
    "        var a = 3L; var b = 0L; var c = 2L; var sum = 0L;\n        for (i <- 3 to n.toInt) {\n            sum += a;\n            b = a; a = c; c = b + c;\n        }\n        return sum;",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 1L\n        for (i <- 4 to n.toInt) {\n            val d = a + b\n            sum += d\n            c = b\n            b = a\n            a = d\n        }\n        sum",
    "        var p = new Array[Long](n.toInt + 1)\n        p(0) = 3\n        p(1) = 0\n        p(2) = 2\n        for (i <- 3 to n.toInt) {\n            p(i) = p(i - 2) + p(i - 3)\n        }\n        p.sum",
    "        val perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n) {\n            perrin += perrin(i - 2) + perrin(i - 3)\n        }\n        perrin(n.toInt)",
    "        var sum = 0L\n        var perrin = ArrayBuffer(3, 0, 2)\n        for (i <- 3 to n.toInt) {\n            val next = perrin(i - 3) + perrin(i - 2)\n            perrin += next\n            sum += next\n        }\n        sum",
    "        var a = 3L\n        var b = 0L\n        var c = 2L\n        var sum = 2L\n        for (i <- 4L to n) {\n            b = a\n            a = c\n            c = b + a\n            sum += c\n        }\n        return sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + perrin(p)\n        }\n        return sum",
    "        var a = 3L; var b = 2L; var c = 3L; var sum = 2L; var i = 2L\n        while (i <= n) {\n            sum += c\n            val temp = a + b\n            a = b; b = c; c = temp\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var a = 3L\n        var b = 2L\n        var c = 0L\n        for (i <- 0 until n) {\n            c = a\n            a = b\n            b = c + a\n            sum += a\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        var i = 2\n        while (i <= n) {\n            sum += p\n            p = p + i\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        var p = 3L\n        while (p <= n) {\n            sum += p\n            p = p + 2\n        }\n        sum"
  ]
}
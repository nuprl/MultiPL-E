{
  "name": "mbpp_279_is_num_decagonal",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the nth decagonal number.\n    def isNumDecagonal(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) return x.toInt\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        var x = 1\n        var num = 1\n        while (num < n) {\n            x += 1\n            num = x * (3 * x - 1) / 2\n        }\n        if (num == n) x else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 % 1 == 0) x1.toLong\n        else if (x2 % 1 == 0) x2.toLong\n        else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt\n        else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x2) return -1\n        if (x1 > 0 && x1 == x1.toInt) return x1.toInt\n        if (x2 > 0 && x2 == x2.toInt) return x2.toInt\n        -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt)\n            return a.toInt\n        return -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 8 * n)) / 2\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt)\n            x.toInt\n        else\n            -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        var a = 1\n        var b = 1\n        var c = 1\n        var d = 1\n        var x = 1\n        var y = 1\n        var z = 1\n        var t = 1\n        var u = 1\n        var v = 1\n        var w = 1\n        var i = 0\n        while (i < n) {\n            a = a + 10\n            b = b + 10\n            c = c + 10\n            d = d + 10\n            x = x + 10\n            y = y + 10\n            z = z + 10\n            t = t + 10\n            u = u + 10\n            v = v + 10\n            w = w + 10\n            i = i + 1\n        }\n        return a + b + c + d + x + y + z + t + u + v + w",
    "        val r = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (r == r.toInt) r.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val r = sqrt(1 + 4 * 2 * n)\n        if (r == r.toInt) {\n            val x = (1 + r) / 2\n            if (x == x.toInt) {\n                val y = (1 - r) / 2\n                if (y == y.toInt) {\n                    if (x % 2 == 0) return y\n                    else return x\n                }\n            }\n        }\n        return 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d % 1 == 0) return d.toLong\n        return -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val m = (sqrt(4 * n + 1) + 1) / 2\n        if (m.toLong == m) m.toLong else -1",
    "        val m = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (m == m.toInt) m.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        else return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(4 * n + 1) + 1) / 2\n        if (x == x.toInt) x.toInt else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) 1 else 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        var i = 1\n        while (true) {\n            val decagonal = i * (3 * i - 1) / 2\n            if (decagonal == n) return i\n            if (decagonal > n) return -1\n            i += 1\n        }\n        -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val n1 = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (n1 == n1.toInt) n1.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        var x = 1\n        while (true) {\n            val y = x * (3 * x - 1) / 2\n            if (y == n) return x\n            if (y > n) return -1\n            x += 1\n        }\n        -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt\n        else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        var i = 1\n        while (i * (3 * i - 1) / 2 < n) i += 1\n        if (i * (3 * i - 1) / 2 == n) i else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val r = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (r == r.toInt) r.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) + 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else -1",
    "        var a = 1\n        var b = 1\n        var c = 1\n        var d = 1\n        var e = 1\n        var f = 1\n        var g = 1\n        var h = 1\n        var i = 1\n        var j = 1\n        var k = 1\n        var l = 1\n        var m = 1\n        var o = 1\n        var p = 1\n        var q = 1\n        var r = 1\n        var s = 1\n        var t = 1\n        var u = 1\n        var v = 1\n        var w = 1\n        var x = 1\n        var y = 1\n        var z = 1\n        var aa = 1\n        var bb = 1\n        var cc = 1\n        var dd = 1\n        var ee = 1\n        var ff = 1\n        var gg = 1\n        var hh = 1\n        var ii = 1\n        var jj = 1\n        var kk = 1\n        var ll = 1\n        var mm = 1\n        var oo = 1\n        var pp = 1\n        var qq = 1\n        var rr = 1\n        var ss = 1\n        var tt = 1\n        var uu = 1\n        var vv = 1\n        var ww = 1\n        var xx = 1\n        var yy = 1\n        var zz = 1\n        var aaa = 1\n        var bbb = 1\n        var ccc = 1\n        var ddd = 1\n        var eee = 1\n        var fff = 1\n        var ggg = 1\n        var hhh = 1\n        var iii = 1\n        var jjj = 1\n        var kkk = 1\n        var lll = 1\n        var mmm = 1\n        var ooo = 1\n        var ppp = 1\n        var qqq = 1\n        var rrr = 1\n        var sss = 1\n        var ttt = 1\n        var uuu = 1\n        var vvv = 1\n        var www = 1\n        var xxx = 1\n        var yyy = 1\n        var zzz = 1\n        var aaaa = 1\n        var bbbb = 1\n        var cccc = 1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        var x = 1\n        var num = 0\n        while (num < n) {\n            num = x * (3 * x - 1) / 2\n            x += 1\n        }\n        return num",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) + 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 % 1 == 0) x1.toLong\n        else if (x2 % 1 == 0) x2.toLong\n        else -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) return d\n        else return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return 0\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x2) return 0\n        if (x1 > 0 && x1 == x1.toInt) return x1.toInt\n        if (x2 > 0 && x2 == x2.toInt) return x2.toInt\n        return 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toLong) x.toLong else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return 0\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x2) return 0\n        val x = if (x1 > x2) x1 else x2\n        if (x == floor(x)) return x.toLong\n        return 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val m = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (m == m.toInt) m.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 8 * n)) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        val x = (-b + sqrt(d)) / (2 * a)\n        if (x % 1 == 0) x.toLong else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val m = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (m == m.toInt) m.toInt else -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val r = sqrt(1 + 4 * 2 * n)\n        if (r == r.toInt) {\n            val x = (1 + r) / 2\n            if (x == x.toInt) {\n                x\n            } else {\n                -1\n            }\n        } else {\n            -1\n        }",
    "        val m = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (m == m.toLong) m.toLong else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) return x\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) + 1) / 2\n        if (x == x.toLong) x.toLong else -1",
    "        val a = (3 + sqrt(9 + 4 * 2 * n)) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        var i = 1\n        while (true) {\n            val num = i * (3 * i - 1) / 2\n            if (num == n) return i\n            if (num > n) return -1\n            i += 1\n        }\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        var x = 1\n        var i = 1\n        while (true) {\n            val num = i * (3 * i - 1) / 2\n            if (num == n) return x\n            else if (num > n) return -1\n            i += 1\n            x += 1\n        }\n        return -1",
    "        var x = 1\n        var y = 1\n        var z = 1\n        while (z < n) {\n            x += 1\n            y += 3\n            z = x * y\n        }\n        if (z == n) return x\n        return 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 8 * n)) / 2\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt\n        else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) + 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 8 * n)) / 2\n        if (a == a.toInt) n else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 8 * n)) / 2\n        if (a == a.toInt) n else 0",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        var x = 1\n        var i = 1\n        while (x < n) {\n            i += 1\n            x = i * (3 * i - 1) / 2\n        }\n        if (x == n) return i\n        else return 0",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        val sqrtD = sqrt(d)\n        val x1 = (-b + sqrtD) / (2 * a)\n        val x2 = (-b - sqrtD) / (2 * a)\n        if (x1 == x1.toInt)\n            return x1\n        if (x2 == x2.toInt)\n            return x2\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        var i = 1\n        while(true) {\n            val num = i * (3 * i - 1) / 2\n            if (num == n) return i\n            if (num > n) return -1\n            i += 1\n        }\n        return -1",
    "        val p = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (p == p.toInt) p.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 8 * n)) / 2\n        if (a == a.toInt) n else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else -1",
    "        val r = sqrt(n * 2)\n        if (r == floor(r) && r % 2 == 1) return r\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt\n        else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val r = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (r == r.toInt) r.toInt else -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return -1\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return -1",
    "        var i = 1\n        while (i * (3 * i - 1) / 2 < n) i += 1\n        if (i * (3 * i - 1) / 2 == n) return i\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x1.toInt) return x1.toInt\n        if (x2 == x2.toInt) return x2.toInt\n        return 0",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0",
    "        val a = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) a.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) {\n            return a.toInt\n        }\n        return -1",
    "        val x = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (x == x.toInt) x.toInt else -1",
    "        val d = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (d == d.toInt) d.toInt else -1",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        var x = 1\n        while (x * (3 * x - 1) / 2 < n) x += 1\n        if (x * (3 * x - 1) / 2 == n) x else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) return a.toInt\n        return -1",
    "        val a = 3\n        val b = -1\n        val c = -2 * n\n        val d = b * b - 4 * a * c\n        if (d < 0) return 0\n        val x1 = (-b + sqrt(d)) / (2 * a)\n        val x2 = (-b - sqrt(d)) / (2 * a)\n        if (x1 == x2) return 0\n        if (x1 > 0 && x1 == x1.toInt) return x1.toInt\n        if (x2 > 0 && x2 == x2.toInt) return x2.toInt\n        return 0",
    "        val nth = (sqrt(1 + 4 * 2 * n) - 1) / 2\n        if (nth == nth.toInt) nth.toInt else -1",
    "        val a = (3 + sqrt(9 + 40 * n)) / 10\n        if (a == a.toInt) n else 0"
  ]
}
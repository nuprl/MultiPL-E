{
  "name": "mbpp_415_max_Product",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find a pair with highest product from a given list of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) {\n                    max = product\n                }\n            }\n        }\n        max",
    "        var max = 0L\n        for(i <- 0 until arr.length) {\n            for(j <- i + 1 until arr.length) {\n                if(arr(i) * arr(j) > max) max = arr(i) * arr(j)\n            }\n        }\n        max",
    "        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n            if (max < min) {\n                val temp = max\n                max = min\n                min = temp\n            }\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val product1 = last * secondLast * thirdLast\n        val product2 = last * first * second\n        if (product1 > product2) product1 else product2",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                max = max.max(arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        arr.sorted.takeRight(2).product",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val product1 = last * secondLast * thirdLast\n        val product2 = last * first * second\n        if (product1 > product2) product1 else product2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val p1 = sorted(n - 1) * sorted(n - 2)\n        val p2 = sorted(0) * sorted(1)\n        max(p1, p2)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) * arr(j) > max) max = arr(i) * arr(j)\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = arr.length\n        max(sorted(n-1) * sorted(n-2), sorted(0) * sorted(1))",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) * arr(j) > max) {\n                    max = arr(i) * arr(j)\n                }\n            }\n        }\n        max",
    "        var max = 0L\n        var min = 0L\n        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else if (arr(i) == 0) {\n                max = 0\n                min = 0\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n        }\n        maxProduct",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) * arr(j) > max) max = arr(i) * arr(j)\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        var min = 0L\n        var maxProduct = 0L\n        for (i <- arr) {\n            if (i > 0) {\n                max = max * i\n                min = min * i\n            } else if (i == 0) {\n                max = 0\n                min = 0\n            } else {\n                val temp = max\n                max = min * i\n                min = temp * i\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n        }\n        maxProduct",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        val sorted = arr.sortWith(_ > _)\n        sorted(0) * sorted(1)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val product1 = last * secondLast * thirdLast\n        val product2 = last * first * second\n        if (product1 > product2) product1 else product2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        var max3 = 0L\n        var min = 0L\n        var min2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max3 = max2\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max3 = max2\n                max2 = i\n            } else if (i > max3) {\n                max3 = i\n            }\n            if (i < min) {\n                min2 = min\n                min = i\n            } else if (i < min2) {\n                min2 = i\n            }\n        }\n        max(max * max2 * max3, max * min * min2)",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val max1 = sorted(n - 1)\n        val max2 = sorted(n - 2)\n        val min1 = sorted(0)\n        val min2 = sorted(1)\n        val p1 = max1 * max2\n        val p2 = min1 * min2\n        if (p1 > p2) p1 else p2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) * arr(j) > max) {\n                    max = arr(i) * arr(j)\n                }\n            }\n        }\n        return max",
    "        var max = 0L\n        var max2 = 0L\n        var min = 0L\n        var min2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n            if (i < min) {\n                min2 = min\n                min = i\n            } else if (i < min2) {\n                min2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) * arr(j) > max) max = arr(i) * arr(j)\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) max2 = i\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) max2 = i\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        val sorted = arr.sortWith(_ > _)\n        sorted(0) * sorted(1)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        arr.sortWith(_ > _).take(2).product",
    "        val sorted = arr.sorted\n        val len = arr.length\n        val product1 = sorted(len - 1) * sorted(len - 2)\n        val product2 = sorted(0) * sorted(1)\n        if (product1 > product2) product1 else product2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val p1 = sorted(n - 1) * sorted(n - 2)\n        val p2 = sorted(0) * sorted(1)\n        max(p1, p2)",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) max2 = i\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        arr.sortWith(_ > _).take(2).product",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val last = sorted(len - 1)\n        val secondLast = sorted(len - 2)\n        val thirdLast = sorted(len - 3)\n        val fourthLast = sorted(len - 4)\n        val fifthLast = sorted(len - 5)\n        val sixthLast = sorted(len - 6)\n        val seventhLast = sorted(len - 7)\n        val eighthLast = sorted(len - 8)\n        val ninthLast = sorted(len - 9)\n        val tenthLast = sorted(len - 10)\n        val eleventhLast = sorted(len - 11)\n        val twelfthLast = sorted(len - 12)\n        val thirteenthLast = sorted(len - 13)\n        val fourteenthLast = sorted(len - 14)\n        val fifteenthLast = sorted(len - 15)\n        val sixteenthLast = sorted(len - 16)\n        val seventeenthLast = sorted(len - 17)\n        val eighteenthLast = sorted(len - 18)\n        val nineteenthLast = sorted(len - 19)\n        val twentiethLast = sorted(len - 20)\n        val twentyFirstLast = sorted(len - 21)\n        val twentySecondLast = sorted(len - 22)\n        val twentyThirdLast = sorted(len - 23)\n        val twentyFourthLast = sorted(len - 24)\n        val twentyFifthLast = sorted(len - 25)\n        val twentySixthLast = sorted(len - 26)\n        val twentySeventhLast = sorted(len - 27)\n        val twentyEighthLast = sorted(len - 28)\n        val twentyNinthLast = sorted(len - 29)\n        val thirtiethLast = sorted(len - 30)\n        val thirtyFirstLast = sorted(len - 31)\n        val thirtySecondLast = sorted(len - 32)\n        val thirtyThirdLast = sorted(len - 33)\n        val thirtyFourthLast = sorted(len - 34)\n        val thirtyFifthLast = sorted(len - 35)\n        val thirtySixthLast = sorted(len - 36)\n        val thirtySeventhLast = sorted(len - 37)\n        val thirtyEighthLast = sorted(len - 38)\n        val thirty",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        arr.sortWith(_ > _).take(2).product",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var min = 0L\n        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            }\n            else if (arr(i) == 0) {\n                max = 0\n                min = 0\n            }\n            else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val last = sorted(len - 1)\n        val secondLast = sorted(len - 2)\n        val first = sorted(0)\n        val secondFirst = sorted(1)\n        val firstProduct = first * secondFirst\n        val lastProduct = last * secondLast\n        if (firstProduct > lastProduct) firstProduct else lastProduct",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = arr(i) * max\n            val b = arr(i) * min\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            result = max(result, max)\n        }\n        return result",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        arr.sorted.takeRight(2).product",
    "        val sorted = arr.sorted\n        val last = sorted.length - 1\n        val product1 = sorted(last) * sorted(last - 1)\n        val product2 = sorted(0) * sorted(1)\n        if (product1 > product2) product1 else product2",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val last = sorted(len - 1)\n        val secondLast = sorted(len - 2)\n        val thirdLast = sorted(len - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val max1 = last * secondLast * thirdLast\n        val max2 = last * first * second\n        if (max1 > max2) max1 else max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct",
    "        val sorted = arr.sortWith(_ > _)\n        sorted(0) * sorted(1)",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        arr.sortWith(_ > _).take(2).product",
    "        arr.sortWith(_ > _).take(2).product",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        arr.sortWith(_ > _).take(2).product",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = arr(0)\n        var secondMax = arr(0)\n        var min = arr(0)\n        var secondMin = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        var max1 = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max1\n                max1 = max\n                max = i\n            }\n            else if (i > max1) {\n                max2 = max1\n                max1 = i\n            }\n            else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max1 * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        var max1 = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max1\n                max1 = max\n                max = i\n            } else if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max1 * max2",
    "        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val max1 = last * secondLast * thirdLast\n        val max2 = last * first * second\n        if (max1 > max2) max1 else max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        val sorted = arr.sortWith(_ > _)\n        sorted(0) * sorted(1)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val last = sorted(len - 1)\n        val secondLast = sorted(len - 2)\n        val thirdLast = sorted(len - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val firstProduct = first * second * thirdLast\n        val secondProduct = first * secondLast * thirdLast\n        val thirdProduct = first * secondLast * last\n        val fourthProduct = first * secondLast * third\n        val fifthProduct = first * second * last\n        val sixthProduct = first * second * third\n        val seventhProduct = first * secondLast * last\n        val eighthProduct = first * secondLast * third\n        val ninthProduct = first * second * thirdLast\n        val tenthProduct = first * secondLast * last\n        val eleventhProduct = first * secondLast * thirdLast\n        val twelfthProduct = first * second * third\n        val thirteenthProduct = first * secondLast * last\n        val fourteenthProduct = first * secondLast * third\n        val fifteenthProduct = first * second * thirdLast\n        val sixteenthProduct = first * secondLast * last\n        val seventeenthProduct = first * secondLast * thirdLast\n        val eighteenthProduct = first * second * third\n        val nineteenthProduct = first * secondLast * last\n        val twentiethProduct = first * secondLast * third\n        val twentyfirstProduct = first * second * thirdLast\n        val twentysecondProduct = first * secondLast * last\n        val twentythirdProduct = first * secondLast * thirdLast\n        val twentyfourthProduct = first * second * third\n        val twentyfifthProduct = first * secondLast * last\n        val twentysixthProduct = first * secondLast * third\n        val twentyseventhProduct = first * second * thirdLast\n        val twentyeighthProduct = first * secondLast * last\n        val twentyninthProduct = first * secondLast * thirdLast\n        val thirtiethProduct = first * second * third\n        val thirtyfirstProduct = first * secondLast * last\n        val thirtysecondProduct = first * secondLast * third\n        val thirtythirdProduct = first * second * thirdLast\n        val thirtyfourthProduct = first * secondLast",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) max2 = i\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2",
    "        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val a = last * secondLast * thirdLast\n        val b = last * first * second\n        if (a > b) a else b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        if (arr.length < 2) throw new IllegalArgumentException(\"List must contain at least two elements\")\n        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        var min1 = Long.MaxValue\n        var min2 = Long.MaxValue\n        for (x <- arr) {\n            if (x > max1) {\n                max2 = max1\n                max1 = x\n            } else if (x > max2) {\n                max2 = x\n            }\n            if (x < min1) {\n                min2 = min1\n                min1 = x\n            } else if (x < min2) {\n                min2 = x\n            }\n        }\n        max(max1 * max2, min1 * min2)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val product1 = sorted(0) * sorted(1)\n        val product2 = sorted(len - 1) * sorted(len - 2)\n        if (product1 > product2) product1 else product2",
    "        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val p1 = sorted(n - 1) * sorted(n - 2)\n        val p2 = sorted(0) * sorted(1)\n        max(p1, p2)",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        if (arr.length < 2) throw new IllegalArgumentException(\"List must contain at least 2 elements\")\n        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        last * secondLast",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sortWith(_ > _)\n        sorted(0) * sorted(1)",
    "        var max = 0L\n        var min = 0L\n        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else if (arr(i) == 0) {\n                max = 0\n                min = 0\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n        }\n        maxProduct",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = arr(0)\n        var secondMax = arr(0)\n        var min = arr(0)\n        var secondMin = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) max2 = i\n        }\n        max * max2",
    "        var max = 0L\n        var min = 0L\n        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else if (arr(i) == 0) {\n                max = 0\n                min = 0\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n        }\n        maxProduct",
    "        arr.sortWith(_ > _).take(2).product",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) {\n                max2 = i\n            }\n        }\n        max * max2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        var max2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            }\n            else if (i > max2) max2 = i\n        }\n        max * max2",
    "        val sorted = arr.sorted\n        val len = sorted.length\n        val last = sorted(len - 1)\n        val secondLast = sorted(len - 2)\n        max(last * secondLast, last * sorted(0) * sorted(1))",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val prod = arr(i) * arr(j)\n                if (prod > max) max = prod\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b",
    "        var max = 0L\n        var min = 0L\n        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            }\n            else if (arr(i) == 0) {\n                max = 0\n                min = 0\n            }\n            else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > maxProduct) maxProduct = max\n            if (min > maxProduct) maxProduct = min\n        }\n        maxProduct",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val first = sorted(0)\n        val secondFirst = sorted(1)\n        max(last * secondLast, first * secondFirst)",
    "        var maxProduct = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > maxProduct) maxProduct = product\n            }\n        }\n        maxProduct",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val first = sorted(0)\n        val second = sorted(1)\n        val product1 = last * secondLast\n        val product2 = first * second\n        if (product1 > product2) product1 else product2",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max"
  ]
}
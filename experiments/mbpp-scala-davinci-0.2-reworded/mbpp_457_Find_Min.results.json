{
  "name": "mbpp_457_Find_Min",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.isInstanceOf[List[Any]]) {\n                val tmp = FindMin(x)\n                if (tmp.asInstanceOf[List[Any]].length < min) {\n                    min = tmp.asInstanceOf[List[Any]].length\n                    min_lst = tmp\n                }\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvjl2n9bj.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvjl2n9bj.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvjl2n9bj.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvjl2n9bj.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvui7qjfi.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvui7qjfi.scala:9:136 ------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                            Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvui7qjfi.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvui7qjfi.scala:10:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case (y :: ys) => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgs6ysbqf.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs6ysbqf.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs6ysbqf.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs6ysbqf.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val min = FindMin(tl)\n                min match {\n                    case Nil => hd\n                    case _ => if (min.length < hd.length) min else hd\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp02jru2jm.scala:12:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m _ => \u001b[33mif\u001b[0m (min.length < hd.length) min \u001b[33melse\u001b[0m hd\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp02jru2jm.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp02jru2jm.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp02jru2jm.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]].apply(i).isInstanceOf[List[Any]]) {\n                var lst_len = FindMin(lst.asInstanceOf[List[Any]].apply(i)).asInstanceOf[List[Any]].length\n                if (lst_len < min) {\n                    min = lst_len\n                    min_lst = FindMin(lst.asInstanceOf[List[Any]].apply(i)).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3x__65a.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3x__65a.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3x__65a.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3x__65a.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList : Any = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                val temp = FindMin(i)\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    minList = temp\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe0sqj9s3.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe0sqj9s3.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe0sqj9s3.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe0sqj9s3.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]].apply(i).isInstanceOf[List[Any]]) {\n                var temp = FindMin(lst.asInstanceOf[List[Any]].apply(i))\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    min_lst = temp\n                }\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvk6_wmdn.scala:13:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                    min_lst = temp\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    (temp : Any)\n\u001b[31m   |\u001b[0m                              Required: List[Any]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvk6_wmdn.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvk6_wmdn.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvk6_wmdn.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList = lst\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).isInstanceOf[List[Any]]) {\n                val subList = FindMin(lst.asInstanceOf[List[Any]](i))\n                if (subList.asInstanceOf[List[Any]].length < min) {\n                    min = subList.asInstanceOf[List[Any]].length\n                    minList = subList\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr56rlw2u.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr56rlw2u.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr56rlw2u.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr56rlw2u.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        lst1 match {\n            case Nil => Nil\n            case head :: tail => {\n                val min = FindMin(tail)\n                min match {\n                    case Nil => head\n                    case _ => {\n                        val min1 = min.asInstanceOf[List[Any]]\n                        val head1 = head.asInstanceOf[List[Any]]\n                        if (min1.length < head1.length) min else head\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6l7be9xv.scala:23:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6l7be9xv.scala:23:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6l7be9xv.scala:24:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6l7be9xv.scala:24:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_list = i.asInstanceOf[List[Any]]\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97m_f4q3.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97m_f4q3.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97m_f4q3.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97m_f4q3.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]].apply(i).isInstanceOf[List[Any]]) {\n                if (FindMin(lst.asInstanceOf[List[Any]].apply(i)).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(lst.asInstanceOf[List[Any]].apply(i)).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(lst.asInstanceOf[List[Any]].apply(i))\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjvuoy6v.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjvuoy6v.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjvuoy6v.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqjvuoy6v.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i.asInstanceOf[List[Any]]\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList : Any = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    minList = i\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8j7pwzbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8j7pwzbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8j7pwzbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8j7pwzbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val min = FindMin(tl)\n                if (min.length < hd.length) min else hd\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123682,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgtqwpoh_.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < hd.length) min \u001b[33melse\u001b[0m hd\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgtqwpoh_.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgtqwpoh_.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgtqwpoh_.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                minList = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5eym9ajc.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5eym9ajc.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5eym9ajc.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5eym9ajc.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_list = i\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    min_lst = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        if (lst1.length == 1) lst1(0)\n        else {\n            val lst2 = lst1.tail\n            val min1 = FindMin(lst1(0)).asInstanceOf[List[Any]].length\n            val min2 = FindMin(lst2).asInstanceOf[List[Any]].length\n            if (min1 < min2) lst1(0)\n            else lst2(0)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp386na7r7.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp386na7r7.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp386na7r7.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp386na7r7.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        if (lst1.length == 0) {\n            return lst1\n        }\n        val lst2 = lst1.tail\n        val min = FindMin(lst2)\n        if (min.asInstanceOf[List[Any]].length < lst1.head.asInstanceOf[List[Any]].length) {\n            return min\n        }\n        return lst1.head\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9aozjj4.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9aozjj4.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9aozjj4.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd9aozjj4.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe5pgxgqi.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe5pgxgqi.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe5pgxgqi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe5pgxgqi.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList = List[Any]()\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.isInstanceOf[List[Any]]) {\n                val len = FindMin(elem).asInstanceOf[List[Any]].length\n                if (len < min) {\n                    min = len\n                    minList = FindMin(elem).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfl4rs_s3.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfl4rs_s3.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfl4rs_s3.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfl4rs_s3.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[Any]]\n        if (lst2.length == 1) lst2.head\n        else {\n            val lst3 = lst2.tail\n            val lst4 = FindMin(lst3).asInstanceOf[List[Any]]\n            if (lst4.length < lst2.head.asInstanceOf[List[Any]].length) lst4\n            else lst2.head\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoq1y5nrk.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoq1y5nrk.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoq1y5nrk.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoq1y5nrk.scala:17:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_lst = lst1(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.asInstanceOf[List[Any]].length < min) {\n                min = x.asInstanceOf[List[Any]].length\n                minList = x\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmdh2kq7a.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmdh2kq7a.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmdh2kq7a.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmdh2kq7a.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case h :: t => {\n                val min = FindMin(t)\n                if (min == Nil) h\n                else if (min.length < h.length) min\n                else h\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjvkzg6km.scala:11:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (min.length < h.length) min\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjvkzg6km.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjvkzg6km.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjvkzg6km.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    min_lst = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpth6wtco9.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyap8l3re.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyap8l3re.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyap8l3re.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyap8l3re.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe1pym1yn.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe1pym1yn.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe1pym1yn.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe1pym1yn.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i.asInstanceOf[List[Any]]\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = List[Any]()\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    min_lst = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x:Int) :: Nil => x\n            case (x:Int) :: (y:Int) :: Nil => if (x < y) x else y\n            case (x:Int) :: (y:Int) :: (z:Int) :: Nil => if (x < y && x < z) x else if (y < x && y < z) y else z\n            case (x:Int) :: (y:Int) :: (z:Int) :: (w:Int) :: Nil => if (x < y && x < z && x < w) x else if (y < x && y < z && y < w) y else if (z < x && z < y && z < w) z else w\n            case (x:Int) :: (y:Int) :: (z:Int) :: (w:Int) :: (v:Int) :: Nil => if (x < y && x < z && x < w && x < v) x else if (y < x && y < z && y < w && y < v) y else if (z < x && z < y && z < w && z < v) z else if (w < x && w < y && w < z && w < v) w else v\n            case (x:Int) :: (y:Int) :: (z:Int) :: (w:Int) :: (v:Int) :: (u:Int) :: Nil => if (x < y && x < z && x < w && x < v && x < u) x else if (y < x && y < z && y < w && y < v && y < u) y else if (z < x && z < y && z < w && z < v && z < u) z else if (w < x && w < y && w < z && w < v && w < u) w else if (v < x && v < y && v < z && v < w && v < u) v else u\n            case (x:Int) :: (y:Int) :: (z:Int) :: (w:Int) :: (v:Int) :: (u:Int) :: (t:Int) :: Nil => if (x < y && x < z && x\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7735b3jo.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7735b3jo.scala:23:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7735b3jo.scala:14:123 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mcase\u001b[0m (x:Int) :: (y:Int) :: (z:Int) :: (w:Int) :: (v:Int) :: (u:Int) :: (t:Int) :: Nil => \u001b[33mif\u001b[0m (x < y && x < z && x\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                     Found:    (x : Int)\n\u001b[31m   |\u001b[0m                                                     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7735b3jo.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7735b3jo.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < min.length) x else min\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpocfylxmd.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < min.length) x \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpocfylxmd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpocfylxmd.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpocfylxmd.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst : Any = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                var temp = FindMin(i)\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    min_lst = temp\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy33c5m6s.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy33c5m6s.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy33c5m6s.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy33c5m6s.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        // Write your code here\n        return lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1zc8j1__.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1zc8j1__.scala:10:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1zc8j1__.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1zc8j1__.scala:11:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]].apply(i).isInstanceOf[List[Any]]) {\n                var temp = FindMin(lst.asInstanceOf[List[Any]].apply(i))\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    min_lst = temp.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfzaitrbi.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfzaitrbi.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfzaitrbi.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfzaitrbi.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_lst = lst1(0)\n        for(i <- 1 until lst1.length) {\n            if(lst1(i).length < min) {\n                min = lst1(i).length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0lp23v4m.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0lp23v4m.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0lp23v4m.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0lp23v4m.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdpodvvji.scala:14:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:21:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for(i <- 1 until lst1.length) {\n            if(lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4z6muhzc.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4z6muhzc.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4z6muhzc.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4z6muhzc.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_index = 0\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_index = i\n            }\n        }\n        lst1(min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5mqe8gev.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5mqe8gev.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5mqe8gev.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5mqe8gev.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst : Any = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                val temp = FindMin(i)\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    min_lst = temp\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy2m1k0e.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy2m1k0e.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy2m1k0e.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzy2m1k0e.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val min = FindMin(tail)\n                min match {\n                    case Nil => head\n                    case _ => if (min.length < head.length) min else head\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqdqbsus7.scala:12:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m _ => \u001b[33mif\u001b[0m (min.length < head.length) min \u001b[33melse\u001b[0m head\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqdqbsus7.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqdqbsus7.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqdqbsus7.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i.asInstanceOf[List[Any]]\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0n96kqfq.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case (y :: ys) => if (x.length < y.length) x else min\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp45xt3wnt.scala:12:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m (y :: ys) => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp45xt3wnt.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp45xt3wnt.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp45xt3wnt.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case h :: t => {\n                val min = FindMin(t)\n                min match {\n                    case Nil => h\n                    case m :: _ => if (h.length < m.length) h else min\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpeufxiqrk.scala:12:41 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m m :: _ => \u001b[33mif\u001b[0m (h.length < m.length) h \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeufxiqrk.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeufxiqrk.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeufxiqrk.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Int]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Int]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Int]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbd59lx9m.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbd59lx9m.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbd59lx9m.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbd59lx9m.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val min = FindMin(tail)\n                if (min.length < head.length) min else head\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph3rm95q7.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < head.length) min \u001b[33melse\u001b[0m head\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph3rm95q7.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph3rm95q7.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph3rm95q7.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmgahajzp.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmgahajzp.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmgahajzp.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmgahajzp.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.asInstanceOf[List[Int]].length < x.asInstanceOf[List[Int]].length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3b019si.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3b019si.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3b019si.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3b019si.scala:17:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2v45lqo.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2v45lqo.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2v45lqo.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr2v45lqo.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val min = FindMin(tl)\n                min match {\n                    case Nil => lst\n                    case _ => if (min.length < lst.length) min else lst\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpobo49eua.scala:12:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m _ => \u001b[33mif\u001b[0m (min.length < lst.length) min \u001b[33melse\u001b[0m lst\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpobo49eua.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpobo49eua.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpobo49eua.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_list = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42t_pqt9.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42t_pqt9.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42t_pqt9.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp42t_pqt9.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_list = i\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwwb79jm.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        val lst2 = lst1.map(x => x.asInstanceOf[List[Any]])\n        val lst3 = lst2.map(x => x.length)\n        val min = lst3.min\n        val index = lst3.indexOf(min)\n        lst2(index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7w6y045u.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7w6y045u.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7w6y045u.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7w6y045u.scala:15:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5m9aqbn.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i)\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxy77u967.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxy77u967.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxy77u967.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxy77u967.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        val lst2 = lst1.sortBy(_.length)\n        lst2(0)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoxg9ht_y.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoxg9ht_y.scala:11:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoxg9ht_y.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoxg9ht_y.scala:12:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList : Any = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                var temp = FindMin(i)\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    minList = temp\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkk7rmm3y.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkk7rmm3y.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkk7rmm3y.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkk7rmm3y.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_80dzg.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var sublist = List[Any]()\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            for (j <- i + 1 to lst.asInstanceOf[List[Any]].length) {\n                if (lst.asInstanceOf[List[Any]].slice(i, j).length < min) {\n                    min = lst.asInstanceOf[List[Any]].slice(i, j).length\n                    sublist = lst.asInstanceOf[List[Any]].slice(i, j)\n                }\n            }\n        }\n        return sublist\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3eytlnw.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3eytlnw.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3eytlnw.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz3eytlnw.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = List[Any]()\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    min_lst = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        lst.asInstanceOf[List[Any]].foreach(x => if (x.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) min = x)\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpohepdwjh.scala:11:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpohepdwjh.scala:11:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpohepdwjh.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpohepdwjh.scala:12:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var minlst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                minlst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return minlst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t_an65s.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t_an65s.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t_an65s.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t_an65s.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (l <- lst.asInstanceOf[List[Any]]) {\n            if (l.asInstanceOf[List[Any]].length < min) {\n                min = l.asInstanceOf[List[Any]].length\n                min_lst = l\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3fwxn0n8.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3fwxn0n8.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3fwxn0n8.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3fwxn0n8.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_list = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpapc2kkds.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpapc2kkds.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpapc2kkds.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpapc2kkds.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpey29rr9w.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123688,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpg53nqtrb.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf833kql1.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        if (lst.isInstanceOf[List[Any]]) {\n            val lst2 = lst.asInstanceOf[List[Any]]\n            if (lst2.length == 0) {\n                List()\n            } else {\n                val head = lst2.head\n                val tail = lst2.tail\n                val tailMin = FindMin(tail)\n                if (tailMin.isInstanceOf[List[Any]]) {\n                    val tailMin2 = tailMin.asInstanceOf[List[Any]]\n                    if (tailMin2.length < head.asInstanceOf[List[Any]].length) {\n                        tailMin2\n                    } else {\n                        head.asInstanceOf[List[Any]]\n                    }\n                } else {\n                    if (tailMin.asInstanceOf[Int] < head.asInstanceOf[List[Any]].length) {\n                        tailMin\n                    } else {\n                        head.asInstanceOf[List[Any]]\n                    }\n                }\n            }\n        } else {\n            lst.asInstanceOf[Int]\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123695,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy989k4on.scala:34:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy989k4on.scala:34:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy989k4on.scala:35:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy989k4on.scala:35:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]](0).asInstanceOf[Int]\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]](0).asInstanceOf[Int] < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]](0).asInstanceOf[Int]\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123697,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0vbnv6z.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0vbnv6z.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0vbnv6z.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0vbnv6z.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val min = FindMin(tail)\n                min match {\n                    case Nil => head\n                    case _ => {\n                        if (head.length < min.length) head else min\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz4z701sz.scala:13:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (head.length < min.length) head \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4z701sz.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4z701sz.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4z701sz.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]]\n        lst.asInstanceOf[List[Any]].foreach(x => {\n            if (x.isInstanceOf[List[Any]]) {\n                val subList = FindMin(x)\n                if (subList.asInstanceOf[List[Any]].length < min) {\n                    min = subList.asInstanceOf[List[Any]].length\n                    minList = subList.asInstanceOf[List[Any]]\n                }\n            }\n        })\n        minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfr6dhfb.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfr6dhfb.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfr6dhfb.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgfr6dhfb.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x : List[Any]) :: xs => {\n                val min = FindMin(xs)\n                if (min.asInstanceOf[List[Any]].length < x.length) min else x\n            }\n            case _ => throw new Exception(\"Invalid input\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqlff5h0.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqlff5h0.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqlff5h0.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqlff5h0.scala:17:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8tbevwr.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst2(0).length\n        var min_lst = lst2(0)\n        for (i <- 1 until lst2.length) {\n            if (lst2(i).length < min) {\n                min = lst2(i).length\n                min_lst = lst2(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123697,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp796r1aas.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp796r1aas.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp796r1aas.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp796r1aas.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = List[Any]()\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    min_lst = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123696,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunigqrwp.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunigqrwp.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunigqrwp.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpunigqrwp.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs =>\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn9jtm_mb.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn9jtm_mb.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn9jtm_mb.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn9jtm_mb.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = x\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123697,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_euiqyc8.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_euiqyc8.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_euiqyc8.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_euiqyc8.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8tbevwr.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Int]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Int]].length < min) {\n                min = i.asInstanceOf[List[Int]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123697,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfwu_hdb7.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfwu_hdb7.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfwu_hdb7.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfwu_hdb7.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case h :: t => {\n                val min = FindMin(t)\n                min match {\n                    case Nil => h\n                    case _ => if (h.length < min.length) h else min\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4domwwk_.scala:12:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m _ => \u001b[33mif\u001b[0m (h.length < min.length) h \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4domwwk_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4domwwk_.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4domwwk_.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minlst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minlst = i\n            }\n        }\n        return minlst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphe0bji1b.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphe0bji1b.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphe0bji1b.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphe0bji1b.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val y = FindMin(xs)\n                if (x.length < y.length) x else y\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjswyw23j.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjswyw23j.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjswyw23j.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjswyw23j.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    minList = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmh_gr5hd.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmh_gr5hd.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmh_gr5hd.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmh_gr5hd.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = elem\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplt9d3c9x.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplt9d3c9x.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplt9d3c9x.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplt9d3c9x.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                var temp = FindMin(i)\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    min_list = temp.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72l9kdoz.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72l9kdoz.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72l9kdoz.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72l9kdoz.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var minList = List[Any]()\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    minList = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdpzh7vy.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdpzh7vy.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdpzh7vy.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdpzh7vy.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_list = i.asInstanceOf[List[Any]]\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqcz7uus.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqcz7uus.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqcz7uus.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqcz7uus.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8tbevwr.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x : List[Any]) :: Nil => x\n            case (x : List[Any]) :: (y : List[Any]) :: Nil => if (x.length < y.length) x else y\n            case (x : List[Any]) :: (y : List[Any]) :: xs => if (x.length < y.length) FindMin(x :: xs) else FindMin(y :: xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9q95osf.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9q95osf.scala:14:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9q95osf.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq9q95osf.scala:15:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var minlst = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minlst = i.asInstanceOf[List[Any]]\n            }\n        }\n        return minlst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz98lrls6.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz98lrls6.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz98lrls6.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz98lrls6.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.asInstanceOf[List[Any]].length < x.asInstanceOf[List[Any]].length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123702,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp585x0ukl.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp585x0ukl.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp585x0ukl.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp585x0ukl.scala:17:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_list = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_list = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_list\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123702,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcnfo7vlg.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcnfo7vlg.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcnfo7vlg.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcnfo7vlg.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]]\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]]\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv3wcbkcd.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_index = 0\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_index = i\n            }\n        }\n        lst1(min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgh1qfbc3.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgh1qfbc3.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgh1qfbc3.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgh1qfbc3.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8tbevwr.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        var min = lst1(0).length\n        var index = 0\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                index = i\n            }\n        }\n        return lst1(index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphb5na9s2.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphb5na9s2.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphb5na9s2.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphb5na9s2.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val y = FindMin(xs)\n                if (x.length < y.length) x else y\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjswyw23j.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjswyw23j.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjswyw23j.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjswyw23j.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        if (lst.isInstanceOf[List[Any]]) {\n            val lst2 = lst.asInstanceOf[List[Any]]\n            if (lst2.length == 0) {\n                return List()\n            } else {\n                val min = lst2.map(FindMin(_)).minBy(_.asInstanceOf[List[Any]].length)\n                return min\n            }\n        } else {\n            return lst\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2nadtfx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2nadtfx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2nadtfx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc2nadtfx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidl0jgf.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidl0jgf.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidl0jgf.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyidl0jgf.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_index = 0\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_index = i\n            }\n        }\n        lst1(min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123704,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpet64xb6r.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpet64xb6r.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpet64xb6r.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpet64xb6r.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x : List[Any]) :: Nil => x\n            case (x : List[Any]) :: (y : List[Any]) :: xs => if (x.length < y.length) FindMin(x :: xs) else FindMin(y :: xs)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123704,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_x2zq7ja.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_x2zq7ja.scala:13:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_x2zq7ja.scala:14:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_x2zq7ja.scala:14:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                if (min.length < x.length) min else x\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpizpbq9vv.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (min.length < x.length) min \u001b[33melse\u001b[0m x\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:16:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizpbq9vv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Int]]]\n        var min = lst1.head.length\n        var min_lst = lst1.head\n        for (i <- lst1) {\n            if (i.length < min) {\n                min = i.length\n                min_lst = i\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123703,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmb98p6ok.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmb98p6ok.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmb98p6ok.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmb98p6ok.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var minlst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                minlst = lst1(i)\n            }\n        }\n        minlst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123704,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7dwcene3.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7dwcene3.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7dwcene3.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7dwcene3.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x :: xs) => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case (y :: ys) => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplo45ctvb.scala:12:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m (y :: ys) => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplo45ctvb.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplo45ctvb.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplo45ctvb.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdpodvvji.scala:14:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:21:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        return lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123704,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltj0ki2_.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                    Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltj0ki2_.scala:9:136 ------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                            Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltj0ki2_.scala:10:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltj0ki2_.scala:10:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe806glfi.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case h :: t => {\n                val min = FindMin(t)\n                min match {\n                    case Nil => h\n                    case _ => if (h.length < min.length) h else min\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4domwwk_.scala:12:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m _ => \u001b[33mif\u001b[0m (h.length < min.length) h \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4domwwk_.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4domwwk_.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4domwwk_.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyixdbpzu.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyixdbpzu.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]]\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (FindMin(i).asInstanceOf[List[Any]].length < min) {\n                    min = FindMin(i).asInstanceOf[List[Any]].length\n                    min_lst = FindMin(i).asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgb1_ynbx.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_lst = lst1(0)\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_lst = lst1(i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwlvg2yi.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_index = 0\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_index = i\n            }\n        }\n        return lst.asInstanceOf[List[Any]](min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123705,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_lst = lst1(0)\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_lst = lst1(i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123705,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiuaye47h.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiuaye47h.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiuaye47h.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiuaye47h.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123694,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptm8p8z1i.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < min.length) x else min\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpux3n5c1j.scala:13:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < min.length) x \u001b[33melse\u001b[0m min\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpux3n5c1j.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpux3n5c1j.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpux3n5c1j.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1(0).asInstanceOf[List[Any]].length\n        var min_index = 0\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length < min) {\n                min = lst1(i).asInstanceOf[List[Any]].length\n                min_index = i\n            }\n        }\n        return lst1(min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdmncfha9.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdmncfha9.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdmncfha9.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdmncfha9.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case (x : List[Any]) :: xs => {\n                val min = FindMin(xs)\n                if (min == Nil) x\n                else if (x.length < min.length) x\n                else min\n            }\n            case _ => Nil\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0q1j9x86.scala:11:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (x.length < min.length) x\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0q1j9x86.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0q1j9x86.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0q1j9x86.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        val lst2 = lst1.map(x => x.asInstanceOf[List[Any]])\n        val lst3 = lst2.sortBy(x => x.length)\n        lst3.head\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpidyqgy2e.scala:12:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpidyqgy2e.scala:12:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpidyqgy2e.scala:13:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpidyqgy2e.scala:13:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min.asInstanceOf[List[Any]].length) {\n                min = i\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:15:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa0yky4b2.scala:16:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst2 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst2(0).length\n        var minlst = lst2(0)\n        for (i <- 1 until lst2.length) {\n            if (lst2(i).length < min) {\n                min = lst2(i).length\n                minlst = lst2(i)\n            }\n        }\n        minlst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3m1x8w_a.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3m1x8w_a.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3m1x8w_a.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3m1x8w_a.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[Any]]\n        var min = lst1.length\n        var min_lst = lst1\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).isInstanceOf[List[Any]]) {\n                val lst2 = lst1(i).asInstanceOf[List[Any]]\n                if (lst2.length < min) {\n                    min = lst2.length\n                    min_lst = lst2\n                }\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdi1vins.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdi1vins.scala:21:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdi1vins.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdi1vins.scala:22:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = List[Any]()\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                if (i.asInstanceOf[List[Any]].length < min) {\n                    min = i.asInstanceOf[List[Any]].length\n                    min_lst = i.asInstanceOf[List[Any]]\n                }\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123680,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:19:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0j0l8tin.scala:20:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_index = 0\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_index = i\n            }\n        }\n        return lst1(min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => {\n                        if (x.length < y.length) x else y\n                    }\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdpodvvji.scala:14:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                        \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:21:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdpodvvji.scala:22:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        val lst1 = lst.asInstanceOf[List[List[Any]]]\n        var min = lst1(0).length\n        var min_index = 0\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).length < min) {\n                min = lst1(i).length\n                min_index = i\n            }\n        }\n        return lst1(min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf6f4aqfe.scala:19:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_lst = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123681,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkigz1npv.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].length\n        var min_lst = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.isInstanceOf[List[Any]]) {\n                val temp = FindMin(i)\n                if (temp.asInstanceOf[List[Any]].length < min) {\n                    min = temp.asInstanceOf[List[Any]].length\n                    min_lst = temp\n                }\n            }\n        }\n        min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprbmngh1q.scala:20:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprbmngh1q.scala:20:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprbmngh1q.scala:21:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprbmngh1q.scala:21:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7vd_453p.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        lst match {\n            case Nil => Nil\n            case x :: xs => {\n                val min = FindMin(xs)\n                min match {\n                    case Nil => x\n                    case y :: ys => if (x.length < y.length) x else y\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123698,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8tbevwr.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                    \u001b[33mcase\u001b[0m y :: ys => \u001b[33mif\u001b[0m (x.length < y.length) x \u001b[33melse\u001b[0m y\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     value length is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:18:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo8tbevwr.scala:19:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]](0).asInstanceOf[List[Any]].length\n        var min_index = 0\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length < min) {\n                min = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                min_index = i\n            }\n        }\n        return lst.asInstanceOf[List[Any]](min_index)\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123705,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpindrduqr.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var min_lst = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                min_lst = i\n            }\n        }\n        return min_lst\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzwrg97wn.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minlist = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minlist = i\n            }\n        }\n        return minlist\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3vxedrh.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3vxedrh.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3vxedrh.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3vxedrh.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sublist having minimum length.\n    def FindMin(lst : Any) : Any = {\n        var min = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var minList = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length < min) {\n                min = i.asInstanceOf[List[Any]].length\n                minList = i\n            }\n        }\n        return minList\n    }\n    def main(args: Array[String]) = {\n    assert(FindMin((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong))));\n    assert(FindMin((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 7l.toLong, 8l.toLong)))).equals((Any(1l.toLong, 1l.toLong))));\n    assert(FindMin((Any(List[String](\"x\"), List[String](\"x\", \"y\"), List[String](\"x\", \"y\", \"z\")))).equals((Any(\"x\"))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:17:136 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)))).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp744vxbrs.scala:18:169 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(FindMin((Any(List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong), ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
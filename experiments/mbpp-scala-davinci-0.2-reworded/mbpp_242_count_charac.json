{
  "name": "mbpp_242_count_charac",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count the total number of characters in a string.\n    def countCharac(str1 : String) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_242_count_charac.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countCharac((\"python programming\")) == (18l));\n    assert(countCharac((\"language\")) == (8l));\n    assert(countCharac((\"words\")) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        return str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        return str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        val str = str1.toLowerCase()\n        var count = 0\n        for (i <- 0 until str.length) {\n            if (str(i) >= 'a' && str(i) <= 'z') {\n                count += 1\n            }\n        }\n        count",
    "        str1.length()",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        var count : Long = 0\n        for (i <- 0 until str1.length) {\n            count += 1\n        }\n        return count",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.size",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length",
    "        return str1.length",
    "        str1.length",
    "        str1.length",
    "        str1.length()",
    "        str1.length",
    "        str1.length()"
  ]
}
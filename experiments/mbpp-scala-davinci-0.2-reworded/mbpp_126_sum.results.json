{
  "name": "mbpp_126_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val commonDivisors = (1 to min(a, b).toInt).filter(i => a % i == 0 && b % i == 0)\n        commonDivisors.foldLeft(0L)(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val gcd = BigInt(a).gcd(b).toLong\n        (1 to gcd.toInt).filter(x => gcd % x == 0).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509749,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpod8oy0bn.scala:7:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(x : Long, y : Long) : Long = {\n            if (y == 0) x else gcd(y, x % y)\n        }\n        def divisors(n : Long) : List[Long] = {\n            val sqrt = sqrt(n).toLong\n            val divs = ListBuffer[Long]()\n            for (i <- 1 to sqrt if n % i == 0) {\n                divs += i\n                if (i != n / i) divs += n / i\n            }\n            divs.toList\n        }\n        val g = gcd(a, b)\n        divisors(g).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124245,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpiek5dvp7.scala:10:23 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(n).toLong\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val commonDivisors = for (i <- 1 to min(a, b).toInt if a % i == 0 && b % i == 0) yield i\n        commonDivisors.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509749,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpod8oy0bn.scala:7:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        var i = 1L\n        while (i <= min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n            i += 1\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to n) {\n                if (n % i == 0) sum += i\n            }\n            sum\n        }\n        sumDivisors(gcd(a, b))\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            def sumDivisors(n : Long, i : Long) : Long = {\n                if (i > n) 0 else if (n % i == 0) i + sumDivisors(n, i + 1) else sumDivisors(n, i + 1)\n            }\n            sumDivisors(n, 1)\n        }\n        sumDivisors(gcd(a, b))\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509749,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpod8oy0bn.scala:7:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        sumDivisors(a) + sumDivisors(b) - sumDivisors(gcd(a, b))\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpra65wbr8.scala:20)\n\tat Problem.main(tmpra65wbr8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509749,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpod8oy0bn.scala:7:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 1L\n            for (i <- 2L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp38z350_a.scala:23)\n\tat Problem.main(tmp38z350_a.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val g = gcd(a, b)\n        val s = (1 to g.toInt).filter(x => g % x == 0).sum\n        s\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124246,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxsxykqtw.scala:6:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1 to sqrt(n).toInt) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i != n / i) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 1L\n            for (i <- 2L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i != n / i) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpo1fpzfsj.scala:21)\n\tat Problem.main(tmpo1fpzfsj.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val min = min(a, b)\n        val max = max(a, b)\n        var sum = 0L\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124246,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpphnme3ce.scala:6:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpphnme3ce.scala:7:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = max(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L;\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i;\n        }\n        return sum;\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val (x, y) = if (a > b) (a, b) else (b, a)\n        val sqrt = sqrt(x).toLong\n        val divisors = ArrayBuffer[Long]()\n        for (i <- 1 to sqrt) {\n            if (x % i == 0) {\n                divisors += i\n                if (i != sqrt) divisors += x / i\n            }\n        }\n        divisors.filter(y % _ == 0).sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124246,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp6nl_7y3l.scala:7:19 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(x).toLong\n\u001b[31m\u001b[31m  |\u001b[0m                   ^\u001b[0m\n\u001b[31m  |\u001b[0m                   Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        sumDivisors(gcd(a, b))\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val min = min(a, b)\n        val max = max(a, b)\n        var sum = 0L\n        for (i <- 1 to min.toInt) {\n            if (min % i == 0 && max % i == 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124245,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgwbtxkkb.scala:6:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmin\u001b[0m = min(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmin\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgwbtxkkb.scala:7:18 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mmax\u001b[0m = max(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                  Recursive \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        val divisors = ArrayBuffer[Long]()\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) divisors += i\n        }\n        divisors.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        // Write your code here\n        val g = gcd(a, b)\n        val aa = a / g\n        val bb = b / g\n        val aaa = aa.toString.toList.map(_.toString.toInt)\n        val bbb = bb.toString.toList.map(_.toString.toInt)\n        val c = aaa.intersect(bbb)\n        c.sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124245,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9t_aldwe.scala:7:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(a, b)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                Not found: gcd\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) if (a % i == 0 && b % i == 0) sum += i\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1666124248,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
      "timestamp": 1665509751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
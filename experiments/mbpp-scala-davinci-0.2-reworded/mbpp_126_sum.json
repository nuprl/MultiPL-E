{
  "name": "mbpp_126_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of common divisors of two given numbers.\n    def sum(a : Long, b : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sum((10l), (15l)) == (6l));\n    assert(sum((100l), (150l)) == (93l));\n    assert(sum((4l), (6l)) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        val commonDivisors = (1 to min(a, b).toInt).filter(i => a % i == 0 && b % i == 0)\n        commonDivisors.foldLeft(0L)(_ + _)",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        val gcd = BigInt(a).gcd(b).toLong\n        (1 to gcd.toInt).filter(x => gcd % x == 0).sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        def gcd(x : Long, y : Long) : Long = {\n            if (y == 0) x else gcd(y, x % y)\n        }\n        def divisors(n : Long) : List[Long] = {\n            val sqrt = sqrt(n).toLong\n            val divs = ListBuffer[Long]()\n            for (i <- 1 to sqrt if n % i == 0) {\n                divs += i\n                if (i != n / i) divs += n / i\n            }\n            divs.toList\n        }\n        val g = gcd(a, b)\n        divisors(g).sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        val commonDivisors = for (i <- 1 to min(a, b).toInt if a % i == 0 && b % i == 0) yield i\n        commonDivisors.sum",
    "        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        var i = 1L\n        while (i <= min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n            i += 1\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to n) {\n                if (n % i == 0) sum += i\n            }\n            sum\n        }\n        sumDivisors(gcd(a, b))",
    "        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            def sumDivisors(n : Long, i : Long) : Long = {\n                if (i > n) 0 else if (n % i == 0) i + sumDivisors(n, i + 1) else sumDivisors(n, i + 1)\n            }\n            sumDivisors(n, 1)\n        }\n        sumDivisors(gcd(a, b))",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        sumDivisors(a) + sumDivisors(b) - sumDivisors(gcd(a, b))",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        val min = min(a, b)\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 1L\n            for (i <- 2L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        val g = gcd(a, b)\n        val s = (1 to g.toInt).filter(x => g % x == 0).sum\n        s",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1 to sqrt(n).toInt) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i != n / i) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 1L\n            for (i <- 2L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i != n / i) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)",
    "        val min = min(a, b)\n        val max = max(a, b)\n        var sum = 0L\n        for (i <- 1 to min.toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L;\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i;\n        }\n        return sum;",
    "        val (x, y) = if (a > b) (a, b) else (b, a)\n        val sqrt = sqrt(x).toLong\n        val divisors = ArrayBuffer[Long]()\n        for (i <- 1 to sqrt) {\n            if (x % i == 0) {\n                divisors += i\n                if (i != sqrt) divisors += x / i\n            }\n        }\n        divisors.filter(y % _ == 0).sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        def gcd(a : Long, b : Long) : Long = {\n            if (b == 0) a else gcd(b, a % b)\n        }\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        sumDivisors(gcd(a, b))",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        val min = min(a, b)\n        val max = max(a, b)\n        var sum = 0L\n        for (i <- 1 to min.toInt) {\n            if (min % i == 0 && max % i == 0) {\n                sum += i\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        val divisors = ArrayBuffer[Long]()\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) divisors += i\n        }\n        divisors.sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        // Write your code here\n        val g = gcd(a, b)\n        val aa = a / g\n        val bb = b / g\n        val aaa = aa.toString.toList.map(_.toString.toInt)\n        val bbb = bb.toString.toList.map(_.toString.toInt)\n        val c = aaa.intersect(bbb)\n        c.sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1L to min(a, b)) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n        def sumDivisors(n : Long) : Long = {\n            var sum = 0L\n            for (i <- 1L to sqrt(n).toLong) {\n                if (n % i == 0) {\n                    sum += i\n                    if (i * i != n) sum += n / i\n                }\n            }\n            sum\n        }\n        val g = gcd(a, b)\n        sumDivisors(g)",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) if (a % i == 0 && b % i == 0) sum += i\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to min(a, b).toInt) {\n            if (a % i == 0 && b % i == 0) sum += i\n        }\n        sum"
  ]
}